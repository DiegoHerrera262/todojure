["^ ","~:output",["^ ","~:js","goog.provide('taoensso.timbre');\nif(cljs.core.vector_QMARK_(taoensso.encore.encore_version)){\ntaoensso.encore.assert_min_encore_version(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(2),(126),(2)], null));\n} else {\ntaoensso.encore.assert_min_encore_version(2.126);\n}\n/**\n * Controls (:timestamp_ data)\n */\ntaoensso.timbre.default_timestamp_opts = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"pattern\",\"pattern\",242135423),new cljs.core.Keyword(null,\"iso8601\",\"iso8601\",609352650)], null);\n/**\n * Default (fn [data]) -> string output fn.\n *  Use`(partial default-output-fn <opts-map>)` to modify default opts.\n */\ntaoensso.timbre.default_output_fn = (function taoensso$timbre$default_output_fn(var_args){\nvar G__59830 = arguments.length;\nswitch (G__59830) {\ncase 1:\nreturn taoensso.timbre.default_output_fn.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn taoensso.timbre.default_output_fn.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(taoensso.timbre.default_output_fn.cljs$core$IFn$_invoke$arity$1 = (function (data){\nreturn taoensso.timbre.default_output_fn.cljs$core$IFn$_invoke$arity$2(null,data);\n}));\n\n(taoensso.timbre.default_output_fn.cljs$core$IFn$_invoke$arity$2 = (function (opts,data){\nvar map__59840 = opts;\nvar map__59840__$1 = cljs.core.__destructure_map(map__59840);\nvar no_stacktrace_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__59840__$1,new cljs.core.Keyword(null,\"no-stacktrace?\",\"no-stacktrace?\",1701072694));\nvar stacktrace_fonts = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__59840__$1,new cljs.core.Keyword(null,\"stacktrace-fonts\",\"stacktrace-fonts\",830799382));\nvar map__59841 = data;\nvar map__59841__$1 = cljs.core.__destructure_map(map__59841);\nvar level = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__59841__$1,new cljs.core.Keyword(null,\"level\",\"level\",1290497552));\nvar _QMARK_err = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__59841__$1,new cljs.core.Keyword(null,\"?err\",\"?err\",549653299));\nvar msg_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__59841__$1,new cljs.core.Keyword(null,\"msg_\",\"msg_\",-1925147000));\nvar _QMARK_ns_str = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__59841__$1,new cljs.core.Keyword(null,\"?ns-str\",\"?ns-str\",2012733966));\nvar _QMARK_file = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__59841__$1,new cljs.core.Keyword(null,\"?file\",\"?file\",1533429675));\nvar hostname_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__59841__$1,new cljs.core.Keyword(null,\"hostname_\",\"hostname_\",-2091647379));\nvar timestamp_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__59841__$1,new cljs.core.Keyword(null,\"timestamp_\",\"timestamp_\",-954533417));\nvar _QMARK_line = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__59841__$1,new cljs.core.Keyword(null,\"?line\",\"?line\",-631853385));\nreturn [(function (){var temp__5753__auto__ = cljs.core.force(timestamp_);\nif(cljs.core.truth_(temp__5753__auto__)){\nvar ts = temp__5753__auto__;\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(ts),\" \"].join('');\n} else {\nreturn null;\n}\n})(),clojure.string.upper_case(cljs.core.name(level)),\" \",\"[\",cljs.core.str.cljs$core$IFn$_invoke$arity$1((function (){var or__5045__auto__ = _QMARK_ns_str;\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nvar or__5045__auto____$1 = _QMARK_file;\nif(cljs.core.truth_(or__5045__auto____$1)){\nreturn or__5045__auto____$1;\n} else {\nreturn \"?\";\n}\n}\n})()),\":\",cljs.core.str.cljs$core$IFn$_invoke$arity$1((function (){var or__5045__auto__ = _QMARK_line;\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn \"?\";\n}\n})()),\"] - \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.force(msg_)),(cljs.core.truth_(no_stacktrace_QMARK_)?null:(function (){var temp__5753__auto__ = _QMARK_err;\nif(cljs.core.truth_(temp__5753__auto__)){\nvar err = temp__5753__auto__;\nreturn [taoensso.encore.system_newline,cljs.core.str.cljs$core$IFn$_invoke$arity$1((taoensso.timbre.stacktrace.cljs$core$IFn$_invoke$arity$2 ? taoensso.timbre.stacktrace.cljs$core$IFn$_invoke$arity$2(err,opts) : taoensso.timbre.stacktrace.call(null,err,opts)))].join('');\n} else {\nreturn null;\n}\n})())].join('');\n}));\n\n(taoensso.timbre.default_output_fn.cljs$lang$maxFixedArity = 2);\n\n\ntaoensso.timbre.println_appender = taoensso.timbre.appenders.core.println_appender;\ntaoensso.timbre.console_appender = taoensso.timbre.appenders.core.console_appender;\n/**\n * Default/example Timbre `*config*` value:\n * \n *  {:min-level :debug #_[[\"taoensso.*\" :error] [\"*\" :debug]]\n *   :ns-filter #{\"*\"} #_{:deny #{\"taoensso.*\"} :allow #{\"*\"}}\n * \n *   :middleware [] ; (fns [appender-data]) -> ?data, applied left->right\n * \n *   :timestamp-opts default-timestamp-opts ; {:pattern _ :locale _ :timezone _}\n *   :output-fn      default-output-fn ; (fn [appender-data]) -> string\n * \n *   :appenders\n *   #?(:clj\n *      {:println (println-appender {:stream :auto})\n *       ;; :spit (spit-appender    {:fname \"./timbre-spit.log\"})\n *       }\n * \n *      :cljs\n *      (if (exists? js/window)\n *        {:console (console-appender {})}\n *        {:println (println-appender {})}))}\n * \n *  See `*config*` for more info.\n */\ntaoensso.timbre.default_config = new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"min-level\",\"min-level\",1634684919),new cljs.core.Keyword(null,\"debug\",\"debug\",-1608172596),new cljs.core.Keyword(null,\"ns-filter\",\"ns-filter\",108598448),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [\"*\",null], null), null),new cljs.core.Keyword(null,\"middleware\",\"middleware\",1462115504),cljs.core.PersistentVector.EMPTY,new cljs.core.Keyword(null,\"timestamp-opts\",\"timestamp-opts\",-1359534807),taoensso.timbre.default_timestamp_opts,new cljs.core.Keyword(null,\"output-fn\",\"output-fn\",1600951539),taoensso.timbre.default_output_fn,new cljs.core.Keyword(null,\"appenders\",\"appenders\",1245583998),(((typeof window !== 'undefined'))?new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"console\",\"console\",1228072057),(function (){var G__59874 = cljs.core.PersistentArrayMap.EMPTY;\nreturn (taoensso.timbre.console_appender.cljs$core$IFn$_invoke$arity$1 ? taoensso.timbre.console_appender.cljs$core$IFn$_invoke$arity$1(G__59874) : taoensso.timbre.console_appender.call(null,G__59874));\n})()], null):new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"println\",\"println\",1920840330),(function (){var G__59875 = cljs.core.PersistentArrayMap.EMPTY;\nreturn (taoensso.timbre.println_appender.cljs$core$IFn$_invoke$arity$1 ? taoensso.timbre.println_appender.cljs$core$IFn$_invoke$arity$1(G__59875) : taoensso.timbre.println_appender.call(null,G__59875));\n})()], null))], null);\nif((typeof taoensso !== 'undefined') && (typeof taoensso.timbre !== 'undefined') && (typeof taoensso.timbre._STAR_config_STAR_ !== 'undefined')){\n} else {\n/**\n * This map controls all Timbre behaviour including:\n *  - When to log (via level and namespace filtering)\n *  - How  to log (which appenders to use)\n *  - What to log (config to control how data sent to appenders\n *                 will be formatted to output string)\n * \n *   See `default-config` for default value (and example config).\n * \n *   Modify this config with `binding`, `alter-var-root`, or with utils:\n *     `set-level!`,         `with-level`,\n *    `set-config!`,        `with-config`,\n *  `merge-config!`, `with-merged-config`.\n * \n *   MAIN OPTIONS\n * \n *  :min-level\n *    Logging will occur only if a logging call's level is >= this\n *    min-level. Possible values, in order:\n * \n *      :trace  = level 0\n *      :debug  = level 1 ; Default min-level\n *      :info   = level 2\n *      :warn   = level 3\n *      :error  = level 4 ; Error type\n *      :fatal  = level 5 ; Error type\n *      :report = level 6 ; High general-purpose (non-error) type\n * \n *    It's also possible to set the min-level based on the namespace\n *    by providing a vector that maps `ns-pattern`s to min-levels, e.g.:\n *    `[[#{\"taoensso.*\"} :error] ... [{\"*\"} :debug]]`.\n * \n *    Example `ns-pattern`s:\n *      #{}, \"*\", \"foo.bar\", \"foo.bar.*\", #{\"foo\" \"bar.*\"},\n *      {:allow #{\"foo\" \"bar.*\"} :deny #{\"foo.*.bar.*\"}}.\n * \n *  :ns-filter\n *    Logging will occur only if a logging call's namespace is permitted\n *    by this ns-filter. Possible values:\n * \n *      - Arbitrary (fn may-log-ns? [ns]) predicate fn.\n *      - An `ns-pattern` (see :min-level docs above).\n * \n *    Useful for turning off logging in noisy libraries, etc.\n * \n *  :middleware\n *    Vector of simple (fn [appender-data]) -> ?new-data fns (applied left->right)\n *    that transform the data map dispatched to appender fns. If any middleware\n *    returns nil, NO dispatch will occur (i.e. the event will be filtered).\n * \n *    Useful for layering advanced functionality. Similar to Ring middleware.\n * \n *  :timestamp-opts ; Config map, see `default-timestamp-opts`\n *  :output-fn      ; (fn [appender-data]) -> string, see `default-output-fn`\n * \n *  :appenders ; {<appender-id> <appender-map>}\n * \n *    Where each appender-map has keys:\n *      :enabled?        ; Must be truthy to log\n *      :min-level       ; Optional *additional* appender-specific min-level\n *      :ns-filter       ; Optional *additional* appender-specific ns-filter\n * \n *      :async?          ; Dispatch using agent? Useful for slow appenders (clj only)\n *      :rate-limit      ; [[<ncalls-limit> <window-msecs>] ...], or nil\n *                       ; Appender will noop after exceeding given maximum number\n *                       ; of calls within given rolling window/s.\n *                       ; e.g. [[100 (encore/ms :mins 1)] [1000 (encore/ms :hours 1)]]\n *                       ; will limit noop after:\n *                       ;   - >100  calls in 1 rolling minute, or\n *                       ;   - >1000 calls in 1 rolling hour\n * \n *      :output-fn       ; Optional override for inherited (fn [appender-data]) -> string\n *      :timestamp-opts  ; Optional override for inherited config map\n *      :fn              ; (fn [appender-data]) -> side-effects, with keys described below\n * \n *   APPENDER DATA\n *  An appender's fn takes a single data map with keys:\n *    :config          ; Entire active config map\n *    :appender-id     ; Id of appender currently dispatching\n *    :appender        ; Entire map of appender currently dispatching\n *    :instant         ; Platform date (java.util.Date or js/Date)\n *    :level           ; Call's level keyword (e.g. :info) (>= active min-level)\n *    :error-level?    ; Is level e/o #{:error :fatal}?\n *    :?ns-str         ; String,  or nil\n *    :?file           ; String,  or nil\n *    :?line           ; Integer, or nil ; Waiting on CLJ-865\n *    :?err            ; First-arg platform error, or nil\n *    :?meta           ; First-arg map when it has ^:meta metadata, used as a\n *                       way of passing advanced per-call options to appenders\n *    :vargs           ; Vector of raw args provided to logging call\n *    :output_         ; Forceable - final formatted output string created\n *                     ; by calling (output-fn <this-data-map>)\n *    :msg_            ; Forceable - args as a string\n *    :timestamp_      ; Forceable - string\n *    :hostname_       ; Forceable - string (clj only)\n *    :output-fn       ; (fn [data]) -> formatted output string\n *                     ; (see `default-output-fn` for details)\n *    :context         ; `*context*` value at log time (see `with-context`)\n *    :spying?         ; Is call occuring via the `spy` macro?\n * \n *    **NB** - any keys not specifically documented here should be\n *    considered private / subject to change without notice.\n * \n *   COMPILE-TIME LEVEL/NS ELISION\n *  To control :min-level and :ns-filter at compile-time, use:\n * \n *    - `taoensso.timbre.min-level.edn`  JVM property (read as edn)\n *    - `taoensso.timbre.ns-pattern.edn` JVM property (read as edn)\n * \n *    - `TAOENSSO_TIMBRE_MIN_LEVEL_EDN`  env var      (read as edn)\n *    - `TAOENSSO_TIMBRE_NS_PATTERN_EDN` env var      (read as edn)\n */\ntaoensso.timbre._STAR_config_STAR_ = taoensso.timbre.default_config;\n}\ntaoensso.timbre.set_config_BANG_ = (function taoensso$timbre$set_config_BANG_(m){\nvar G__59881 = (function (_old){\nreturn m;\n});\nreturn (taoensso.timbre.swap_config_BANG_.cljs$core$IFn$_invoke$arity$1 ? taoensso.timbre.swap_config_BANG_.cljs$core$IFn$_invoke$arity$1(G__59881) : taoensso.timbre.swap_config_BANG_.call(null,G__59881));\n});\ntaoensso.timbre.merge_config_BANG_ = (function taoensso$timbre$merge_config_BANG_(m){\nvar G__59886 = (function (old){\nreturn taoensso.encore.nested_merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([old,m], 0));\n});\nreturn (taoensso.timbre.swap_config_BANG_.cljs$core$IFn$_invoke$arity$1 ? taoensso.timbre.swap_config_BANG_.cljs$core$IFn$_invoke$arity$1(G__59886) : taoensso.timbre.swap_config_BANG_.call(null,G__59886));\n});\ntaoensso.timbre.swap_config_BANG_ = (function taoensso$timbre$swap_config_BANG_(var_args){\nvar args__5775__auto__ = [];\nvar len__5769__auto___60212 = arguments.length;\nvar i__5770__auto___60214 = (0);\nwhile(true){\nif((i__5770__auto___60214 < len__5769__auto___60212)){\nargs__5775__auto__.push((arguments[i__5770__auto___60214]));\n\nvar G__60215 = (i__5770__auto___60214 + (1));\ni__5770__auto___60214 = G__60215;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ = ((((1) < args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((1)),(0),null)):null);\nreturn taoensso.timbre.swap_config_BANG_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__5776__auto__);\n});\n\n(taoensso.timbre.swap_config_BANG_.cljs$core$IFn$_invoke$arity$variadic = (function (f,args){\nreturn (taoensso.timbre._STAR_config_STAR_ = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,taoensso.timbre._STAR_config_STAR_,args));\n}));\n\n(taoensso.timbre.swap_config_BANG_.cljs$lang$maxFixedArity = (1));\n\n/** @this {Function} */\n(taoensso.timbre.swap_config_BANG_.cljs$lang$applyTo = (function (seq59892){\nvar G__59893 = cljs.core.first(seq59892);\nvar seq59892__$1 = cljs.core.next(seq59892);\nvar self__5754__auto__ = this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__59893,seq59892__$1);\n}));\n\ntaoensso.timbre.set_level_BANG_ = (function taoensso$timbre$set_level_BANG_(level){\nreturn taoensso.timbre.swap_config_BANG_((function (m){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,new cljs.core.Keyword(null,\"min-level\",\"min-level\",1634684919),level);\n}));\n});\nvar err_60219 = \"Invalid Timbre logging level: should be e/o #{:trace :debug :info :warn :error :fatal :report}\";\nvar level__GT_int_60220 = (function (p1__59901_SHARP_){\nvar G__59903 = p1__59901_SHARP_;\nvar G__59903__$1 = (((G__59903 instanceof cljs.core.Keyword))?G__59903.fqn:null);\nswitch (G__59903__$1) {\ncase \"trace\":\nreturn (0);\n\nbreak;\ncase \"debug\":\nreturn (1);\n\nbreak;\ncase \"info\":\nreturn (2);\n\nbreak;\ncase \"warn\":\nreturn (3);\n\nbreak;\ncase \"error\":\nreturn (4);\n\nbreak;\ncase \"fatal\":\nreturn (5);\n\nbreak;\ncase \"report\":\nreturn (6);\n\nbreak;\ndefault:\nreturn null;\n\n}\n});\ntaoensso.timbre.valid_level_QMARK_ = (function taoensso$timbre$valid_level_QMARK_(x){\nif(cljs.core.truth_(level__GT_int_60220(x))){\nreturn true;\n} else {\nreturn false;\n}\n});\n\ntaoensso.timbre.valid_level = (function taoensso$timbre$valid_level(x){\nif(cljs.core.truth_(level__GT_int_60220(x))){\nreturn x;\n} else {\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(err_60219,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"given\",\"given\",716253602),x,new cljs.core.Keyword(null,\"type\",\"type\",1174270348),cljs.core.type(x)], null));\n}\n});\n\ntaoensso.timbre.valid_level__GT_int = (function taoensso$timbre$valid_level__GT_int(x){\nvar or__5045__auto__ = level__GT_int_60220(x);\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(err_60219,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"given\",\"given\",716253602),x,new cljs.core.Keyword(null,\"type\",\"type\",1174270348),cljs.core.type(x)], null));\n}\n});\nvar valid_level__GT_int_60227 = taoensso.timbre.valid_level__GT_int;\n/**\n * Implementation detail.\n */\ntaoensso.timbre.level_GT__EQ_ = (function taoensso$timbre$level_GT__EQ_(x,y){\nreturn ((valid_level__GT_int_60227.cljs$core$IFn$_invoke$arity$1 ? valid_level__GT_int_60227.cljs$core$IFn$_invoke$arity$1(x) : valid_level__GT_int_60227.call(null,x)) >= (valid_level__GT_int_60227.cljs$core$IFn$_invoke$arity$1 ? valid_level__GT_int_60227.cljs$core$IFn$_invoke$arity$1(y) : valid_level__GT_int_60227.call(null,y)));\n});\nvar fn_QMARK__60228 = cljs.core.fn_QMARK_;\nvar compile_60229 = taoensso.encore.fmemoize((function (x){\nreturn taoensso.encore.compile_str_filter(x);\n}));\nvar conform_QMARK__STAR__60230 = taoensso.encore.fmemoize((function (x,ns){\nvar fexpr__59909 = compile_60229(x);\nreturn (fexpr__59909.cljs$core$IFn$_invoke$arity$1 ? fexpr__59909.cljs$core$IFn$_invoke$arity$1(ns) : fexpr__59909.call(null,ns));\n}));\nvar conform_QMARK__60231 = (function (ns_filter,ns){\nif(cljs.core.truth_((fn_QMARK__60228.cljs$core$IFn$_invoke$arity$1 ? fn_QMARK__60228.cljs$core$IFn$_invoke$arity$1(ns_filter) : fn_QMARK__60228.call(null,ns_filter)))){\nreturn (ns_filter.cljs$core$IFn$_invoke$arity$1 ? ns_filter.cljs$core$IFn$_invoke$arity$1(ns) : ns_filter.call(null,ns));\n} else {\nreturn conform_QMARK__STAR__60230(ns_filter,ns);\n}\n});\n/**\n * Implementation detail.\n */\ntaoensso.timbre.may_log_ns_QMARK_ = (function taoensso$timbre$may_log_ns_QMARK_(ns_filter,ns){\nif(cljs.core.truth_(conform_QMARK__60231(ns_filter,ns))){\nreturn true;\n} else {\nreturn false;\n}\n});\n\n/**\n * [[<ns-pattern> <min-level>] ... [\"*\" <default-min-level>]], ns -> ?min-level\n */\ntaoensso.timbre.ns__GT__QMARK_min_level = taoensso.encore.fmemoize((function (specs,ns){\nreturn taoensso.encore.rsome((function (p__59917){\nvar vec__59919 = p__59917;\nvar ns_pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__59919,(0),null);\nvar min_level = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__59919,(1),null);\nif(cljs.core.truth_(conform_QMARK__STAR__60230(ns_pattern,ns))){\nreturn taoensso.timbre.valid_level(min_level);\n} else {\nreturn null;\n}\n}),specs);\n}));\nvar valid_level_60236 = taoensso.timbre.valid_level;\nvar ns__GT__QMARK_min_level_60237 = taoensso.timbre.ns__GT__QMARK_min_level;\ntaoensso.timbre.get_min_level = (function taoensso$timbre$get_min_level(default$,x,ns){\nvar G__59927 = (function (){var or__5045__auto__ = ((cljs.core.vector_QMARK_(x))?ns__GT__QMARK_min_level_60237(x,ns):x);\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn default$;\n}\n})();\nreturn (valid_level_60236.cljs$core$IFn$_invoke$arity$1 ? valid_level_60236.cljs$core$IFn$_invoke$arity$1(G__59927) : valid_level_60236.call(null,G__59927));\n});\nvar leglist_60240 = (function (x){\nif(cljs.core.truth_(x)){\nif(cljs.core.truth_((function (){var fexpr__59932 = cljs.core.PersistentHashSet.createAsIfByAssoc([cljs.core.PersistentVector.EMPTY,cljs.core.PersistentHashSet.EMPTY]);\nreturn (fexpr__59932.cljs$core$IFn$_invoke$arity$1 ? fexpr__59932.cljs$core$IFn$_invoke$arity$1(x) : fexpr__59932.call(null,x));\n})())){\nreturn null;\n} else {\nreturn x;\n}\n} else {\nreturn null;\n}\n});\ntaoensso.timbre.legacy_ns_filter = (function taoensso$timbre$legacy_ns_filter(ns_whitelist,ns_blacklist){\nvar ns_whitelist__$1 = leglist_60240(ns_whitelist);\nvar ns_blacklist__$1 = leglist_60240(ns_blacklist);\nif(cljs.core.truth_((function (){var or__5045__auto__ = ns_whitelist__$1;\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn ns_blacklist__$1;\n}\n})())){\nreturn new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"allow\",\"allow\",-1857325745),ns_whitelist__$1,new cljs.core.Keyword(null,\"deny\",\"deny\",1589338523),ns_blacklist__$1], null);\n} else {\nreturn null;\n}\n});\nvar level_GT__EQ__60248 = taoensso.timbre.level_GT__EQ_;\nvar may_log_ns_QMARK__60249 = taoensso.timbre.may_log_ns_QMARK_;\nvar get_min_level_60250 = taoensso.timbre.get_min_level;\nvar legacy_ns_filter_60251 = taoensso.timbre.legacy_ns_filter;\n/**\n * Implementation detail.\n *  Returns true iff level and ns are runtime unfiltered.\n */\ntaoensso.timbre.may_log_QMARK_ = (function taoensso$timbre$may_log_QMARK_(var_args){\nvar G__59943 = arguments.length;\nswitch (G__59943) {\ncase 1:\nreturn taoensso.timbre.may_log_QMARK_.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn taoensso.timbre.may_log_QMARK_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn taoensso.timbre.may_log_QMARK_.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ncase 4:\nreturn taoensso.timbre.may_log_QMARK_.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(taoensso.timbre.may_log_QMARK_.cljs$core$IFn$_invoke$arity$1 = (function (level){\nreturn taoensso.timbre.may_log_QMARK_.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword(null,\"report\",\"report\",1394055010),level,null,null);\n}));\n\n(taoensso.timbre.may_log_QMARK_.cljs$core$IFn$_invoke$arity$2 = (function (level,_QMARK_ns_str){\nreturn taoensso.timbre.may_log_QMARK_.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword(null,\"report\",\"report\",1394055010),level,_QMARK_ns_str,null);\n}));\n\n(taoensso.timbre.may_log_QMARK_.cljs$core$IFn$_invoke$arity$3 = (function (level,_QMARK_ns_str,_QMARK_config){\nreturn taoensso.timbre.may_log_QMARK_.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword(null,\"report\",\"report\",1394055010),level,_QMARK_ns_str,null);\n}));\n\n(taoensso.timbre.may_log_QMARK_.cljs$core$IFn$_invoke$arity$4 = (function (default_min_level,level,_QMARK_ns_str,_QMARK_config){\nvar config = (function (){var or__5045__auto__ = _QMARK_config;\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn taoensso.timbre._STAR_config_STAR_;\n}\n})();\nvar min_level = (function (){var G__59953 = default_min_level;\nvar G__59954 = (function (){var or__5045__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(config,new cljs.core.Keyword(null,\"min-level\",\"min-level\",1634684919));\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$2(config,new cljs.core.Keyword(null,\"level\",\"level\",1290497552));\n}\n})();\nvar G__59955 = _QMARK_ns_str;\nreturn (get_min_level_60250.cljs$core$IFn$_invoke$arity$3 ? get_min_level_60250.cljs$core$IFn$_invoke$arity$3(G__59953,G__59954,G__59955) : get_min_level_60250.call(null,G__59953,G__59954,G__59955));\n})();\nif(cljs.core.truth_((level_GT__EQ__60248.cljs$core$IFn$_invoke$arity$2 ? level_GT__EQ__60248.cljs$core$IFn$_invoke$arity$2(level,min_level) : level_GT__EQ__60248.call(null,level,min_level)))){\nvar temp__5751__auto__ = (function (){var or__5045__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(config,new cljs.core.Keyword(null,\"ns-filter\",\"ns-filter\",108598448));\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nvar G__59960 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(config,new cljs.core.Keyword(null,\"ns-whitelist\",\"ns-whitelist\",-1717299774));\nvar G__59961 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(config,new cljs.core.Keyword(null,\"ns-blacklist\",\"ns-blacklist\",1957763142));\nreturn (legacy_ns_filter_60251.cljs$core$IFn$_invoke$arity$2 ? legacy_ns_filter_60251.cljs$core$IFn$_invoke$arity$2(G__59960,G__59961) : legacy_ns_filter_60251.call(null,G__59960,G__59961));\n}\n})();\nif(cljs.core.truth_(temp__5751__auto__)){\nvar ns_filter = temp__5751__auto__;\nif(cljs.core.truth_((may_log_ns_QMARK__60249.cljs$core$IFn$_invoke$arity$2 ? may_log_ns_QMARK__60249.cljs$core$IFn$_invoke$arity$2(ns_filter,_QMARK_ns_str) : may_log_ns_QMARK__60249.call(null,ns_filter,_QMARK_ns_str)))){\nreturn true;\n} else {\nreturn false;\n}\n} else {\nreturn true;\n}\n} else {\nreturn false;\n}\n}));\n\n(taoensso.timbre.may_log_QMARK_.cljs$lang$maxFixedArity = 4);\n\ntaoensso.timbre.str_join = (function taoensso$timbre$str_join(xs){\nreturn taoensso.encore.str_join.cljs$core$IFn$_invoke$arity$3(\" \",cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (x){\nvar x__$1 = taoensso.encore.nil__GT_str(x);\nif(cljs.core.record_QMARK_(x__$1)){\nreturn cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([x__$1], 0));\n} else {\nreturn x__$1;\n\n}\n})),xs);\n});\nif((typeof taoensso !== 'undefined') && (typeof taoensso.timbre !== 'undefined') && (typeof taoensso.timbre.get_rate_limiter !== 'undefined')){\n} else {\ntaoensso.timbre.get_rate_limiter = taoensso.encore.fmemoize((function (appender_id,specs){\nreturn taoensso.encore.limiter(specs);\n}));\n}\n/**\n * General-purpose dynamic logging context\n */\ntaoensso.timbre._STAR_context_STAR_ = null;\n/**\n * vargs -> [?err ?meta ?msg-fmt api-vargs]\n */\ntaoensso.timbre.parse_vargs = (function taoensso$timbre$parse_vargs(_QMARK_err,msg_type,vargs){\nvar auto_error_QMARK_ = (taoensso.encore.kw_identical_QMARK_.cljs$core$IFn$_invoke$arity$2 ? taoensso.encore.kw_identical_QMARK_.cljs$core$IFn$_invoke$arity$2(_QMARK_err,new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492)) : taoensso.encore.kw_identical_QMARK_.call(null,_QMARK_err,new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492)));\nvar fmt_msg_QMARK_ = (taoensso.encore.kw_identical_QMARK_.cljs$core$IFn$_invoke$arity$2 ? taoensso.encore.kw_identical_QMARK_.cljs$core$IFn$_invoke$arity$2(msg_type,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552)) : taoensso.encore.kw_identical_QMARK_.call(null,msg_type,new cljs.core.Keyword(null,\"f\",\"f\",-1597136552)));\nvar vec__59984 = vargs;\nvar v0 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__59984,(0),null);\nif(cljs.core.truth_((function (){var and__5043__auto__ = auto_error_QMARK_;\nif(cljs.core.truth_(and__5043__auto__)){\nreturn taoensso.encore.error_QMARK_(v0);\n} else {\nreturn and__5043__auto__;\n}\n})())){\nvar _QMARK_err__$1 = v0;\nvar _QMARK_meta = null;\nvar vargs__$1 = taoensso.encore.vrest(vargs);\nvar _QMARK_msg_fmt = (cljs.core.truth_(fmt_msg_QMARK_)?(function (){var vec__59993 = vargs__$1;\nvar v0__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__59993,(0),null);\nreturn v0__$1;\n})():null);\nvar vargs__$2 = (cljs.core.truth_(fmt_msg_QMARK_)?taoensso.encore.vrest(vargs__$1):vargs__$1);\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [_QMARK_err__$1,_QMARK_meta,_QMARK_msg_fmt,vargs__$2], null);\n} else {\nvar _QMARK_meta = (cljs.core.truth_((function (){var and__5043__auto__ = cljs.core.map_QMARK_(v0);\nif(and__5043__auto__){\nreturn new cljs.core.Keyword(null,\"meta\",\"meta\",1499536964).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(v0));\n} else {\nreturn and__5043__auto__;\n}\n})())?v0:null);\nvar _QMARK_err__$1 = (function (){var or__5045__auto__ = new cljs.core.Keyword(null,\"err\",\"err\",-2089457205).cljs$core$IFn$_invoke$arity$1(_QMARK_meta);\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nif(cljs.core.truth_(auto_error_QMARK_)){\nreturn null;\n} else {\nreturn _QMARK_err;\n}\n}\n})();\nvar _QMARK_meta__$1 = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(_QMARK_meta,new cljs.core.Keyword(null,\"err\",\"err\",-2089457205));\nvar vargs__$1 = (cljs.core.truth_(_QMARK_meta__$1)?taoensso.encore.vrest(vargs):vargs);\nvar _QMARK_msg_fmt = (cljs.core.truth_(fmt_msg_QMARK_)?(function (){var vec__60002 = vargs__$1;\nvar v0__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60002,(0),null);\nreturn v0__$1;\n})():null);\nvar vargs__$2 = (cljs.core.truth_(fmt_msg_QMARK_)?taoensso.encore.vrest(vargs__$1):vargs__$1);\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [_QMARK_err__$1,_QMARK_meta__$1,_QMARK_msg_fmt,vargs__$2], null);\n}\n});\ntaoensso.timbre.get_timestamp = (function taoensso$timbre$get_timestamp(timestamp_opts,instant){\nvar map__60010 = timestamp_opts;\nvar map__60010__$1 = cljs.core.__destructure_map(map__60010);\nvar pattern = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60010__$1,new cljs.core.Keyword(null,\"pattern\",\"pattern\",242135423));\nif(cljs.core.truth_((taoensso.encore.kw_identical_QMARK_.cljs$core$IFn$_invoke$arity$2 ? taoensso.encore.kw_identical_QMARK_.cljs$core$IFn$_invoke$arity$2(pattern,new cljs.core.Keyword(null,\"iso8601\",\"iso8601\",609352650)) : taoensso.encore.kw_identical_QMARK_.call(null,pattern,new cljs.core.Keyword(null,\"iso8601\",\"iso8601\",609352650))))){\nreturn (new Date(instant)).toISOString();\n} else {\nreturn (new goog.i18n.DateTimeFormat(pattern)).format(instant);\n}\n});\n/**\n * Core low-level log fn. Implementation detail!\n */\ntaoensso.timbre._log_BANG_ = (function taoensso$timbre$_log_BANG_(var_args){\nvar G__60020 = arguments.length;\nswitch (G__60020) {\ncase 9:\nreturn taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$9((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]));\n\nbreak;\ncase 10:\nreturn taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]));\n\nbreak;\ncase 11:\nreturn taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$11((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$9 = (function (config,level,_QMARK_ns_str,_QMARK_file,_QMARK_line,msg_type,_QMARK_err,vargs_,_QMARK_base_data){\nreturn taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$11(config,level,_QMARK_ns_str,_QMARK_file,_QMARK_line,msg_type,_QMARK_err,vargs_,_QMARK_base_data,null,false);\n}));\n\n(taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10 = (function (config,level,_QMARK_ns_str,_QMARK_file,_QMARK_line,msg_type,_QMARK_err,vargs_,_QMARK_base_data,callsite_id){\nreturn taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$11(config,level,_QMARK_ns_str,_QMARK_file,_QMARK_line,msg_type,_QMARK_err,vargs_,_QMARK_base_data,callsite_id,false);\n}));\n\n(taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$11 = (function (config,level,_QMARK_ns_str,_QMARK_file,_QMARK_line,msg_type,_QMARK_err,vargs_,_QMARK_base_data,callsite_id,spying_QMARK_){\nif(taoensso.timbre.may_log_QMARK_.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword(null,\"report\",\"report\",1394055010),level,_QMARK_ns_str,config)){\nvar instant_60282 = (new Date());\nvar context_60283 = taoensso.timbre._STAR_context_STAR_;\nvar vargs_60284 = cljs.core.deref(vargs_);\nvar vec__60036_60285 = taoensso.timbre.parse_vargs(_QMARK_err,msg_type,vargs_60284);\nvar _QMARK_err_60286__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60036_60285,(0),null);\nvar _QMARK_meta_60287 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60036_60285,(1),null);\nvar _QMARK_msg_fmt_60288 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60036_60285,(2),null);\nvar vargs_60289__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__60036_60285,(3),null);\nvar data_60290 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__5045__auto__ = _QMARK_base_data;\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn cljs.core.PersistentArrayMap.EMPTY;\n}\n})(),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"instant\",\"instant\",655498374),new cljs.core.Keyword(null,\"spying?\",\"spying?\",1753444487),new cljs.core.Keyword(null,\"config\",\"config\",994861415),new cljs.core.Keyword(null,\"vargs\",\"vargs\",-966597273),new cljs.core.Keyword(null,\"?file\",\"?file\",1533429675),new cljs.core.Keyword(null,\"error-level?\",\"error-level?\",778415885),new cljs.core.Keyword(null,\"?ns-str\",\"?ns-str\",2012733966),new cljs.core.Keyword(null,\"level\",\"level\",1290497552),new cljs.core.Keyword(null,\"?err\",\"?err\",549653299),new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"?line\",\"?line\",-631853385),new cljs.core.Keyword(null,\"?err_\",\"?err_\",789480858),new cljs.core.Keyword(null,\"?meta\",\"?meta\",-793560773),new cljs.core.Keyword(null,\"?msg-fmt\",\"?msg-fmt\",-852453891)],[instant_60282,spying_QMARK_,config,vargs_60289__$1,_QMARK_file,(function (){var fexpr__60039 = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"fatal\",\"fatal\",1874419888),null,new cljs.core.Keyword(null,\"error\",\"error\",-978969032),null], null), null);\nreturn (fexpr__60039.cljs$core$IFn$_invoke$arity$1 ? fexpr__60039.cljs$core$IFn$_invoke$arity$1(level) : fexpr__60039.call(null,level));\n})(),_QMARK_ns_str,level,_QMARK_err_60286__$1,context_60283,_QMARK_line,(new cljs.core.Delay((function (){\nreturn _QMARK_err_60286__$1;\n}),null)),_QMARK_meta_60287,_QMARK_msg_fmt_60288]));\nvar _QMARK_data_60291 = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (acc,mf){\nvar result = (mf.cljs$core$IFn$_invoke$arity$1 ? mf.cljs$core$IFn$_invoke$arity$1(acc) : mf.call(null,acc));\nif((result == null)){\nreturn cljs.core.reduced(null);\n} else {\nreturn result;\n}\n}),data_60290,new cljs.core.Keyword(null,\"middleware\",\"middleware\",1462115504).cljs$core$IFn$_invoke$arity$1(config));\nvar temp__5753__auto___60298 = _QMARK_data_60291;\nif(cljs.core.truth_(temp__5753__auto___60298)){\nvar data_60299__$1 = temp__5753__auto___60298;\nvar map__60044_60300 = data_60299__$1;\nvar map__60044_60301__$1 = cljs.core.__destructure_map(map__60044_60300);\nvar vargs_60302__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60044_60301__$1,new cljs.core.Keyword(null,\"vargs\",\"vargs\",-966597273));\nvar data_60303__$2 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(data_60299__$1,new cljs.core.Keyword(null,\"vargs_\",\"vargs_\",552132148),(new cljs.core.Delay((function (){\nreturn vargs_60302__$2;\n}),null)));\nvar data_60304__$3 = taoensso.encore.assoc_nx.cljs$core$IFn$_invoke$arity$variadic(data_60303__$2,new cljs.core.Keyword(null,\"msg_\",\"msg_\",-1925147000),(new cljs.core.Delay((function (){\nvar G__60048 = msg_type;\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(null,G__60048)){\nreturn \"\";\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"p\",\"p\",151049309),G__60048)){\nreturn taoensso.timbre.str_join(vargs_60302__$2);\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),G__60048)){\nif(typeof _QMARK_msg_fmt_60288 === 'string'){\n} else {\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(\"Timbre format-style logging call without a format pattern (string)\",new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"level\",\"level\",1290497552),level,new cljs.core.Keyword(null,\"location\",\"location\",1815599388),[cljs.core.str.cljs$core$IFn$_invoke$arity$1((function (){var or__5045__auto__ = _QMARK_ns_str;\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nvar or__5045__auto____$1 = _QMARK_file;\nif(cljs.core.truth_(or__5045__auto____$1)){\nreturn or__5045__auto____$1;\n} else {\nreturn \"?\";\n}\n}\n})()),\":\",cljs.core.str.cljs$core$IFn$_invoke$arity$1((function (){var or__5045__auto__ = _QMARK_line;\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn \"?\";\n}\n})())].join('')], null));\n}\n\nreturn taoensso.encore.format_STAR_(_QMARK_msg_fmt_60288,vargs_60302__$2);\n} else {\nthrow (new Error([\"No matching clause: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__60048)].join('')));\n\n}\n}\n}\n}),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"hash_\",\"hash_\",-827203612),(new cljs.core.Delay((function (){\nreturn cljs.core.hash(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [callsite_id,_QMARK_msg_fmt_60288,cljs.core.get.cljs$core$IFn$_invoke$arity$3(_QMARK_meta_60287,new cljs.core.Keyword(null,\"hash\",\"hash\",-13781596),vargs_60302__$2)], null));\n}),null))], 0));\nvar output_fn1_60305 = taoensso.encore.fmemoize(cljs.core.get.cljs$core$IFn$_invoke$arity$3(config,new cljs.core.Keyword(null,\"output-fn\",\"output-fn\",1600951539),taoensso.timbre.default_output_fn));\nvar timestamp_opts1_60306 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(taoensso.timbre.default_timestamp_opts,cljs.core.get.cljs$core$IFn$_invoke$arity$2(config,new cljs.core.Keyword(null,\"timestamp-opts\",\"timestamp-opts\",-1359534807)));\nvar get_timestamp__60307 = taoensso.encore.fmemoize((function (opts){\nreturn (new cljs.core.Delay((function (){\nreturn taoensso.timbre.get_timestamp(opts,cljs.core.get.cljs$core$IFn$_invoke$arity$2(data_60304__$3,new cljs.core.Keyword(null,\"instant\",\"instant\",655498374)));\n}),null));\n}));\ncljs.core.reduce_kv((function (_,id,appender){\nif(cljs.core.truth_((function (){var and__5043__auto__ = new cljs.core.Keyword(null,\"enabled?\",\"enabled?\",-1376075057).cljs$core$IFn$_invoke$arity$1(appender);\nif(cljs.core.truth_(and__5043__auto__)){\nreturn taoensso.timbre.may_log_QMARK_.cljs$core$IFn$_invoke$arity$4(new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),level,_QMARK_ns_str,appender);\n} else {\nreturn and__5043__auto__;\n}\n})())){\nvar rate_limit_specs = new cljs.core.Keyword(null,\"rate-limit\",\"rate-limit\",1748082022).cljs$core$IFn$_invoke$arity$1(appender);\nvar rate_limit_okay_QMARK_ = (function (){var or__5045__auto__ = cljs.core.empty_QMARK_(rate_limit_specs);\nif(or__5045__auto__){\nreturn or__5045__auto__;\n} else {\nvar rl_fn = taoensso.timbre.get_rate_limiter(id,rate_limit_specs);\nreturn cljs.core.not((function (){var G__60062 = cljs.core.force(new cljs.core.Keyword(null,\"hash_\",\"hash_\",-827203612).cljs$core$IFn$_invoke$arity$1(data_60304__$3));\nreturn (rl_fn.cljs$core$IFn$_invoke$arity$1 ? rl_fn.cljs$core$IFn$_invoke$arity$1(G__60062) : rl_fn.call(null,G__60062));\n})());\n}\n})();\nif(rate_limit_okay_QMARK_){\nvar map__60068 = appender;\nvar map__60068__$1 = cljs.core.__destructure_map(map__60068);\nvar apfn = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60068__$1,new cljs.core.Keyword(null,\"fn\",\"fn\",-1175266204));\nvar async_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__60068__$1,new cljs.core.Keyword(null,\"async?\",\"async?\",1523057758));\nvar output_fn = (function (){var f = new cljs.core.Keyword(null,\"output-fn\",\"output-fn\",1600951539).cljs$core$IFn$_invoke$arity$1(appender);\nif(cljs.core.truth_((function (){var or__5045__auto__ = (f == null);\nif(or__5045__auto__){\nreturn or__5045__auto__;\n} else {\nreturn (taoensso.encore.kw_identical_QMARK_.cljs$core$IFn$_invoke$arity$2 ? taoensso.encore.kw_identical_QMARK_.cljs$core$IFn$_invoke$arity$2(f,new cljs.core.Keyword(null,\"inherit\",\"inherit\",-1840815422)) : taoensso.encore.kw_identical_QMARK_.call(null,f,new cljs.core.Keyword(null,\"inherit\",\"inherit\",-1840815422)));\n}\n})())){\nreturn output_fn1_60305;\n} else {\nreturn f;\n}\n})();\nvar timestamp_ = (function (){var opts = new cljs.core.Keyword(null,\"timestamp-opts\",\"timestamp-opts\",-1359534807).cljs$core$IFn$_invoke$arity$1(appender);\nif(cljs.core.truth_((function (){var or__5045__auto__ = (opts == null);\nif(or__5045__auto__){\nreturn or__5045__auto__;\n} else {\nreturn (taoensso.encore.kw_identical_QMARK_.cljs$core$IFn$_invoke$arity$2 ? taoensso.encore.kw_identical_QMARK_.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,\"inherit\",\"inherit\",-1840815422)) : taoensso.encore.kw_identical_QMARK_.call(null,opts,new cljs.core.Keyword(null,\"inherit\",\"inherit\",-1840815422)));\n}\n})())){\nreturn get_timestamp__60307(timestamp_opts1_60306);\n} else {\nreturn get_timestamp__60307(cljs.core.conj.cljs$core$IFn$_invoke$arity$2(timestamp_opts1_60306,opts));\n}\n})();\nvar output_ = (new cljs.core.Delay((function (){\nvar G__60073 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(data_60304__$3,new cljs.core.Keyword(null,\"timestamp_\",\"timestamp_\",-954533417),timestamp_);\nreturn (output_fn.cljs$core$IFn$_invoke$arity$1 ? output_fn.cljs$core$IFn$_invoke$arity$1(G__60073) : output_fn.call(null,G__60073));\n}),null));\nvar data__$4 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(data_60304__$3,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"appender-id\",\"appender-id\",-1917983538),id,new cljs.core.Keyword(null,\"appender\",\"appender\",1267426510),appender,new cljs.core.Keyword(null,\"output-fn\",\"output-fn\",1600951539),output_fn,new cljs.core.Keyword(null,\"output_\",\"output_\",-36797880),output_,new cljs.core.Keyword(null,\"timestamp_\",\"timestamp_\",-954533417),timestamp_], null));\nvar _QMARK_data__$1 = (function (){var temp__5751__auto__ = new cljs.core.Keyword(null,\"middleware-fn\",\"middleware-fn\",-61585752).cljs$core$IFn$_invoke$arity$1(appender);\nif(cljs.core.truth_(temp__5751__auto__)){\nvar mfn = temp__5751__auto__;\nreturn (mfn.cljs$core$IFn$_invoke$arity$1 ? mfn.cljs$core$IFn$_invoke$arity$1(data__$4) : mfn.call(null,data__$4));\n} else {\nreturn data__$4;\n}\n})();\nvar temp__5753__auto____$1 = _QMARK_data__$1;\nif(cljs.core.truth_(temp__5753__auto____$1)){\nvar data__$5 = temp__5753__auto____$1;\nreturn (apfn.cljs$core$IFn$_invoke$arity$1 ? apfn.cljs$core$IFn$_invoke$arity$1(data__$5) : apfn.call(null,data__$5));\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n}),null,new cljs.core.Keyword(null,\"appenders\",\"appenders\",1245583998).cljs$core$IFn$_invoke$arity$1(config));\n} else {\n}\n} else {\n}\n\nreturn null;\n}));\n\n(taoensso.timbre._log_BANG_.cljs$lang$maxFixedArity = 11);\n\ntaoensso.timbre.fline = (function taoensso$timbre$fline(and_form){\nreturn new cljs.core.Keyword(null,\"line\",\"line\",212345235).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(and_form));\n});\ntaoensso.timbre.stacktrace = (function taoensso$timbre$stacktrace(var_args){\nvar G__60116 = arguments.length;\nswitch (G__60116) {\ncase 1:\nreturn taoensso.timbre.stacktrace.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn taoensso.timbre.stacktrace.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(taoensso.timbre.stacktrace.cljs$core$IFn$_invoke$arity$1 = (function (err){\nreturn taoensso.timbre.stacktrace.cljs$core$IFn$_invoke$arity$2(err,null);\n}));\n\n(taoensso.timbre.stacktrace.cljs$core$IFn$_invoke$arity$2 = (function (err,opts){\nvar or__5045__auto__ = err.stack;\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn cljs.core.str.cljs$core$IFn$_invoke$arity$1(err);\n}\n}));\n\n(taoensso.timbre.stacktrace.cljs$lang$maxFixedArity = 2);\n\ntaoensso.timbre.console__QMARK_appender = taoensso.timbre.appenders.core.console_appender;\n\ntaoensso.timbre.ordered_levels = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"trace\",\"trace\",-1082747415),new cljs.core.Keyword(null,\"debug\",\"debug\",-1608172596),new cljs.core.Keyword(null,\"info\",\"info\",-317069002),new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),new cljs.core.Keyword(null,\"error\",\"error\",-978969032),new cljs.core.Keyword(null,\"fatal\",\"fatal\",1874419888),new cljs.core.Keyword(null,\"report\",\"report\",1394055010)], null);\n\ntaoensso.timbre.log_QMARK_ = taoensso.timbre.may_log_QMARK_;\n\n/**\n * DEPRECATED, prefer `default-config`\n */\ntaoensso.timbre.example_config = taoensso.timbre.default_config;\n\ntaoensso.timbre.logging_enabled_QMARK_ = (function taoensso$timbre$logging_enabled_QMARK_(level,compile_time_ns){\nreturn taoensso.timbre.may_log_QMARK_.cljs$core$IFn$_invoke$arity$2(level,cljs.core.str.cljs$core$IFn$_invoke$arity$1(compile_time_ns));\n});\n\ntaoensso.timbre.str_println = (function taoensso$timbre$str_println(var_args){\nvar args__5775__auto__ = [];\nvar len__5769__auto___60336 = arguments.length;\nvar i__5770__auto___60337 = (0);\nwhile(true){\nif((i__5770__auto___60337 < len__5769__auto___60336)){\nargs__5775__auto__.push((arguments[i__5770__auto___60337]));\n\nvar G__60339 = (i__5770__auto___60337 + (1));\ni__5770__auto___60337 = G__60339;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ = ((((0) < args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((0)),(0),null)):null);\nreturn taoensso.timbre.str_println.cljs$core$IFn$_invoke$arity$variadic(argseq__5776__auto__);\n});\n\n(taoensso.timbre.str_println.cljs$core$IFn$_invoke$arity$variadic = (function (xs){\nreturn taoensso.timbre.str_join(xs);\n}));\n\n(taoensso.timbre.str_println.cljs$lang$maxFixedArity = (0));\n\n/** @this {Function} */\n(taoensso.timbre.str_println.cljs$lang$applyTo = (function (seq60124){\nvar self__5755__auto__ = this;\nreturn self__5755__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq60124));\n}));\n\n\nvar ret__5824__auto___60341 = (function (){\ntaoensso.timbre.with_log_level = (function taoensso$timbre$with_log_level(var_args){\nvar args__5775__auto__ = [];\nvar len__5769__auto___60343 = arguments.length;\nvar i__5770__auto___60344 = (0);\nwhile(true){\nif((i__5770__auto___60344 < len__5769__auto___60343)){\nargs__5775__auto__.push((arguments[i__5770__auto___60344]));\n\nvar G__60345 = (i__5770__auto___60344 + (1));\ni__5770__auto___60344 = G__60345;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ = ((((3) < args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((3)),(0),null)):null);\nreturn taoensso.timbre.with_log_level.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),argseq__5776__auto__);\n});\n\n(taoensso.timbre.with_log_level.cljs$core$IFn$_invoke$arity$variadic = (function (_AMPERSAND_form,_AMPERSAND_env,level,body){\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"taoensso.timbre\",\"with-level\",\"taoensso.timbre/with-level\",1514604232,null),null,(1),null)),(new cljs.core.List(null,level,null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([body], 0))));\n}));\n\n(taoensso.timbre.with_log_level.cljs$lang$maxFixedArity = (3));\n\n/** @this {Function} */\n(taoensso.timbre.with_log_level.cljs$lang$applyTo = (function (seq60128){\nvar G__60129 = cljs.core.first(seq60128);\nvar seq60128__$1 = cljs.core.next(seq60128);\nvar G__60130 = cljs.core.first(seq60128__$1);\nvar seq60128__$2 = cljs.core.next(seq60128__$1);\nvar G__60131 = cljs.core.first(seq60128__$2);\nvar seq60128__$3 = cljs.core.next(seq60128__$2);\nvar self__5754__auto__ = this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__60129,G__60130,G__60131,seq60128__$3);\n}));\n\nreturn null;\n})()\n;\n(taoensso.timbre.with_log_level.cljs$lang$macro = true);\n\n\nvar ret__5824__auto___60349 = (function (){\ntaoensso.timbre.with_logging_config = (function taoensso$timbre$with_logging_config(var_args){\nvar args__5775__auto__ = [];\nvar len__5769__auto___60350 = arguments.length;\nvar i__5770__auto___60351 = (0);\nwhile(true){\nif((i__5770__auto___60351 < len__5769__auto___60350)){\nargs__5775__auto__.push((arguments[i__5770__auto___60351]));\n\nvar G__60352 = (i__5770__auto___60351 + (1));\ni__5770__auto___60351 = G__60352;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ = ((((3) < args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((3)),(0),null)):null);\nreturn taoensso.timbre.with_logging_config.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),argseq__5776__auto__);\n});\n\n(taoensso.timbre.with_logging_config.cljs$core$IFn$_invoke$arity$variadic = (function (_AMPERSAND_form,_AMPERSAND_env,config,body){\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"taoensso.timbre\",\"with-config\",\"taoensso.timbre/with-config\",-1144239945,null),null,(1),null)),(new cljs.core.List(null,config,null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([body], 0))));\n}));\n\n(taoensso.timbre.with_logging_config.cljs$lang$maxFixedArity = (3));\n\n/** @this {Function} */\n(taoensso.timbre.with_logging_config.cljs$lang$applyTo = (function (seq60138){\nvar G__60139 = cljs.core.first(seq60138);\nvar seq60138__$1 = cljs.core.next(seq60138);\nvar G__60140 = cljs.core.first(seq60138__$1);\nvar seq60138__$2 = cljs.core.next(seq60138__$1);\nvar G__60141 = cljs.core.first(seq60138__$2);\nvar seq60138__$3 = cljs.core.next(seq60138__$2);\nvar self__5754__auto__ = this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__60139,G__60140,G__60141,seq60138__$3);\n}));\n\nreturn null;\n})()\n;\n(taoensso.timbre.with_logging_config.cljs$lang$macro = true);\n\n\nvar ret__5824__auto___60355 = (function (){\ntaoensso.timbre.logp = (function taoensso$timbre$logp(var_args){\nvar args__5775__auto__ = [];\nvar len__5769__auto___60356 = arguments.length;\nvar i__5770__auto___60357 = (0);\nwhile(true){\nif((i__5770__auto___60357 < len__5769__auto___60356)){\nargs__5775__auto__.push((arguments[i__5770__auto___60357]));\n\nvar G__60358 = (i__5770__auto___60357 + (1));\ni__5770__auto___60357 = G__60358;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ = ((((2) < args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((2)),(0),null)):null);\nreturn taoensso.timbre.logp.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__5776__auto__);\n});\n\n(taoensso.timbre.logp.cljs$core$IFn$_invoke$arity$variadic = (function (_AMPERSAND_form,_AMPERSAND_env,args){\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(\"taoensso.timbre\",\"log\",\"taoensso.timbre/log\",-1743194436,null),null,(1),null)),args)));\n}));\n\n(taoensso.timbre.logp.cljs$lang$maxFixedArity = (2));\n\n/** @this {Function} */\n(taoensso.timbre.logp.cljs$lang$applyTo = (function (seq60156){\nvar G__60157 = cljs.core.first(seq60156);\nvar seq60156__$1 = cljs.core.next(seq60156);\nvar G__60158 = cljs.core.first(seq60156__$1);\nvar seq60156__$2 = cljs.core.next(seq60156__$1);\nvar self__5754__auto__ = this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__60157,G__60158,seq60156__$2);\n}));\n\nreturn null;\n})()\n;\n(taoensso.timbre.logp.cljs$lang$macro = true);\n\n\nvar ret__5824__auto___60362 = (function (){\ntaoensso.timbre.log_env = (function taoensso$timbre$log_env(var_args){\nvar G__60173 = arguments.length;\nswitch (G__60173) {\ncase 2:\nreturn taoensso.timbre.log_env.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn taoensso.timbre.log_env.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ncase 4:\nreturn taoensso.timbre.log_env.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\n\nbreak;\ncase 5:\nreturn taoensso.timbre.log_env.cljs$core$IFn$_invoke$arity$5((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1((arguments.length - (2)))].join('')));\n\n}\n});\n\n(taoensso.timbre.log_env.cljs$core$IFn$_invoke$arity$2 = (function (_AMPERSAND_form,_AMPERSAND_env){\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(\"taoensso.timbre\",\"log-env\",\"taoensso.timbre/log-env\",-166251696,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Keyword(null,\"debug\",\"debug\",-1608172596),null,(1),null)))));\n}));\n\n(taoensso.timbre.log_env.cljs$core$IFn$_invoke$arity$3 = (function (_AMPERSAND_form,_AMPERSAND_env,level){\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"taoensso.timbre\",\"log-env\",\"taoensso.timbre/log-env\",-166251696,null),null,(1),null)),(new cljs.core.List(null,level,null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,\"&env\",null,(1),null))], 0))));\n}));\n\n(taoensso.timbre.log_env.cljs$core$IFn$_invoke$arity$4 = (function (_AMPERSAND_form,_AMPERSAND_env,level,name){\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"taoensso.timbre\",\"log-env\",\"taoensso.timbre/log-env\",-166251696,null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(\"taoensso.timbre\",\"*config*\",\"taoensso.timbre/*config*\",1821294766,null),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,level,null,(1),null)),(new cljs.core.List(null,name,null,(1),null))], 0))));\n}));\n\n(taoensso.timbre.log_env.cljs$core$IFn$_invoke$arity$5 = (function (_AMPERSAND_form,_AMPERSAND_env,config,level,name){\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"taoensso.timbre\",\"log*\",\"taoensso.timbre/log*\",1207553629,null),null,(1),null)),(new cljs.core.List(null,config,null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,level,null,(1),null)),(new cljs.core.List(null,name,null,(1),null)),(new cljs.core.List(null,\"=>\",null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1((new cljs.core.List(null,new cljs.core.Symbol(\"taoensso.timbre\",\"get-env\",\"taoensso.timbre/get-env\",92671901,null),null,(1),null))))),null,(1),null))], 0))));\n}));\n\n(taoensso.timbre.log_env.cljs$lang$maxFixedArity = 5);\n\nreturn null;\n})()\n;\n(taoensso.timbre.log_env.cljs$lang$macro = true);\n\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:author","Peter Taoussanis (@ptaoussanis)","~:doc","Simple, flexible logging for Clojure/Script. No XML.","~:file","taoensso/timbre.cljc","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",20],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$clojure.spec.alpha","~$cljs.spec.alpha","~$clojure.core.async","~$cljs.core.async","~$clojure.pprint","~$cljs.pprint"],"~:use-macros",["^ ","~$have","~$taoensso.encore","~$have?","^H"],"~:excludes",["~#set",[]],"~:macros",["^ ","~$get-env",["^ ","~:arglists",["~#list",[[]]],"^9",828,"^:",1,"^8","taoensso/timbre.cljc","~:name","~$taoensso.timbre/get-env","~:ns","~$taoensso.timbre","~:macro",true],"~$-log-and-rethrow-errors",["^ ","^N",["^O",[["~$?line","~$&","~$body"]]],"^9",776,"^:",1,"^8","taoensso/timbre.cljc","^P","~$taoensso.timbre/-log-and-rethrow-errors","^R","^S","^T",true],"~$log",["^ ","^N",["^O",[["~$level","~$&","~$args"]]],"^9",745,"^:",1,"^8","taoensso/timbre.cljc","^P","~$taoensso.timbre/log","^R","^S","^T",true],"~$logf",["^ ","^N",["^O",[["^Z","~$&","^["]]],"^9",756,"^:",1,"^8","taoensso/timbre.cljc","^P","~$taoensso.timbre/logf","^R","^S","^T",true],"~$reportf",["^ ","^N",["^O",[["~$&","^["]]],"^9",763,"^:",1,"^8","taoensso/timbre.cljc","^P","~$taoensso.timbre/reportf","^R","^S","^T",true],"~$fatalf",["^ ","^N",["^O",[["~$&","^["]]],"^9",762,"^:",1,"^8","taoensso/timbre.cljc","^P","~$taoensso.timbre/fatalf","^R","^S","^T",true],"~$with-context+",["^ ","^N",["^O",[["~$context","~$&","^W"]]],"^7","Like `with-context`, but merges given context into current context.","^9",458,"^:",1,"^8","taoensso/timbre.cljc","^P","~$taoensso.timbre/with-context+","^R","^S","^T",true],"~$warnf",["^ ","^N",["^O",[["~$&","^["]]],"^9",760,"^:",1,"^8","taoensso/timbre.cljc","^P","~$taoensso.timbre/warnf","^R","^S","^T",true],"~$log!",["^ ","^N",["^O",[["^Z","~$msg-type","^[","~$&",["~$opts"]]]],"^7","Core low-level log macro. Useful for tooling, etc.\n\n    * `level`    - must eval to a valid logging level\n    * `msg-type` - must eval to e/o #{:p :f nil}\n    * `opts`     - ks e/o #{:config :?err :?ns-str :?file :?line :?base-data :spying?}\n\n  Supports compile-time elision when compile-time const vals\n  provided for `level` and/or `?ns-str`.","^9",679,"^:",1,"^8","taoensso/timbre.cljc","^P","~$taoensso.timbre/log!","^R","^S","^T",true],"~$report",["^ ","^N",["^O",[["~$&","^["]]],"^9",752,"^:",1,"^8","taoensso/timbre.cljc","^P","~$taoensso.timbre/report","^R","^S","^T",true],"~$-spy",["^ ","^N",["^O",[["^V","~$config","^Z","~$name","~$expr"]]],"^9",809,"^:",1,"^8","taoensso/timbre.cljc","^P","~$taoensso.timbre/-spy","^R","^S","^T",true],"~$with-default-outs",["^ ","^N",["^O",[["~$&","^W"]]],"^9",864,"^:",1,"^8","taoensso/timbre.cljc","^P","~$taoensso.timbre/with-default-outs","^R","^S","^T",true],"~$logf*",["^ ","^N",["^O",[["^1C","^Z","~$&","^["]]],"^9",755,"^:",1,"^8","taoensso/timbre.cljc","^P","~$taoensso.timbre/logf*","^R","^S","^T",true],"~$spy",["^ ","^N",["^O",[["^1E"],["^Z","^1E"],["^Z","^1D","^1E"],["^1C","^Z","^1D","^1E"]]],"^7","Evaluates named expression and logs its result. Always returns the result.\n  Defaults to :debug logging level and unevaluated expression as name.","^9",820,"^:",1,"^8","taoensso/timbre.cljc","^P","~$taoensso.timbre/spy","^R","^S","^T",true],"~$sometimes",["^ ","^N",["^O",[["~$probability","~$&","^W"]]],"^7","Handy for sampled logging, etc.","^9",916,"^:",1,"^8","taoensso/timbre.cljc","^P","~$taoensso.timbre/sometimes","^R","^S","^T",true],"~$warn",["^ ","^N",["^O",[["~$&","^["]]],"^9",749,"^:",1,"^8","taoensso/timbre.cljc","^P","~$taoensso.timbre/warn","^R","^S","^T",true],"~$with-level",["^ ","^N",["^O",[["^Z","~$&","^W"]]],"^9",234,"^:",1,"^8","taoensso/timbre.cljc","^P","~$taoensso.timbre/with-level","^R","^S","^T",true],"~$trace",["^ ","^N",["^O",[["~$&","^["]]],"^9",746,"^:",1,"^8","taoensso/timbre.cljc","^P","~$taoensso.timbre/trace","^R","^S","^T",true],"~$-log-errors",["^ ","^N",["^O",[["^V","~$&","^W"]]],"^9",770,"^:",1,"^8","taoensso/timbre.cljc","^P","~$taoensso.timbre/-log-errors","^R","^S","^T",true],"~$debug",["^ ","^N",["^O",[["~$&","^["]]],"^9",747,"^:",1,"^8","taoensso/timbre.cljc","^P","~$taoensso.timbre/debug","^R","^S","^T",true],"~$log*",["^ ","^N",["^O",[["^1C","^Z","~$&","^["]]],"^9",744,"^:",1,"^8","taoensso/timbre.cljc","^P","~$taoensso.timbre/log*","^R","^S","^T",true],"~$debugf",["^ ","^N",["^O",[["~$&","^["]]],"^9",758,"^:",1,"^8","taoensso/timbre.cljc","^P","~$taoensso.timbre/debugf","^R","^S","^T",true],"~$tracef",["^ ","^N",["^O",[["~$&","^["]]],"^9",757,"^:",1,"^8","taoensso/timbre.cljc","^P","~$taoensso.timbre/tracef","^R","^S","^T",true],"~$-logged-future",["^ ","^N",["^O",[["^V","~$&","^W"]]],"^9",783,"^:",1,"^8","taoensso/timbre.cljc","^P","~$taoensso.timbre/-logged-future","^R","^S","^T",true],"~$infof",["^ ","^N",["^O",[["~$&","^["]]],"^9",759,"^:",1,"^8","taoensso/timbre.cljc","^P","~$taoensso.timbre/infof","^R","^S","^T",true],"~$logged-future",["^ ","^N",["^O",[["~$&","^W"]]],"^9",787,"^:",1,"^8","taoensso/timbre.cljc","^P","~$taoensso.timbre/logged-future","^R","^S","^T",true],"~$log-env",["^ ","^N",["^O",[[],["^Z"],["^Z","^1D"],["^1C","^Z","^1D"]]],"^9",933,"^:",3,"^8","taoensso/timbre.cljc","^P","~$taoensso.timbre/log-env","^R","^S","^T",true],"~$fatal",["^ ","^N",["^O",[["~$&","^["]]],"^9",751,"^:",1,"^8","taoensso/timbre.cljc","^P","~$taoensso.timbre/fatal","^R","^S","^T",true],"~$log-and-rethrow-errors",["^ ","^N",["^O",[["~$&","^W"]]],"^9",786,"^:",1,"^8","taoensso/timbre.cljc","^P","~$taoensso.timbre/log-and-rethrow-errors","^R","^S","^T",true],"~$with-logging-config",["^ ","^N",["^O",[["^1C","~$&","^W"]]],"^9",931,"^:",3,"^8","taoensso/timbre.cljc","^P","~$taoensso.timbre/with-logging-config","^R","^S","^T",true],"~$with-merged-config",["^ ","^N",["^O",[["^1C","~$&","^W"]]],"^9",224,"^:",1,"^8","taoensso/timbre.cljc","^P","~$taoensso.timbre/with-merged-config","^R","^S","^T",true],"~$with-context",["^ ","^N",["^O",[["^18","~$&","^W"]]],"^7","Executes body so that given arbitrary data will be passed (as `:context`)\n  to appenders for any enclosed logging calls.\n\n  (with-context\n    {:user-name \"Stu\"} ; Will be incl. in data dispatched to appenders\n    (info \"User request\"))\n\n  See also `with-context+`.","^9",446,"^:",1,"^8","taoensso/timbre.cljc","^P","~$taoensso.timbre/with-context","^R","^S","^T",true],"~$log-errors",["^ ","^N",["^O",[["~$&","^W"]]],"^9",785,"^:",1,"^8","taoensso/timbre.cljc","^P","~$taoensso.timbre/log-errors","^R","^S","^T",true],"~$errorf",["^ ","^N",["^O",[["~$&","^["]]],"^9",761,"^:",1,"^8","taoensso/timbre.cljc","^P","~$taoensso.timbre/errorf","^R","^S","^T",true],"~$info",["^ ","^N",["^O",[["~$&","^["]]],"^9",748,"^:",1,"^8","taoensso/timbre.cljc","^P","~$taoensso.timbre/info","^R","^S","^T",true],"~$logp",["^ ","^N",["^O",[["~$&","^["]]],"^9",932,"^:",3,"^8","taoensso/timbre.cljc","^P","~$taoensso.timbre/logp","^R","^S","^T",true],"~$with-config",["^ ","^N",["^O",[["^1C","~$&","^W"]]],"^9",223,"^:",1,"^8","taoensso/timbre.cljc","^P","~$taoensso.timbre/with-config","^R","^S","^T",true],"~$error",["^ ","^N",["^O",[["~$&","^["]]],"^9",750,"^:",1,"^8","taoensso/timbre.cljc","^P","~$taoensso.timbre/error","^R","^S","^T",true],"~$with-log-level",["^ ","^N",["^O",[["^Z","~$&","^W"]]],"^9",930,"^:",3,"^8","taoensso/timbre.cljc","^P","~$taoensso.timbre/with-log-level","^R","^S","^T",true]],"^P","^S","~:reader-aliases",["^ "],"~:op","^R","~:imports",null,"~:requires",["^ ","~$cljs.core","^2X","~$goog.i18n.DateTimeFormat","^2Y","~$taoensso.timbre.appenders.core","^2Z","~$goog","^2[","~$enc","^H","~$dtf","^2Y","~$str","~$clojure.string","^33","^33","^H","^H","~$core-appenders","^2Z"],"~:seen",["^K",["~:require","~:require-macros"]],"~:uses",null,"^37",["^ ","^H","^H","^30","^H","^S","^S","~$timbre-macros","^S","^2X","^2X"],"~:form",["^O",["~$ns","^S","Simple, flexible logging for Clojure/Script. No XML.",["^ ","^6","Peter Taoussanis (@ptaoussanis)"],["^O",["^36",["^33","~:as","^32"],["^2Y","^3<","^31"],["^H","^3<","^30","~:refer",[],"~:refer-macros",["^G","^I"]],["^2Z","^3<","^34"]]],["^O",["^37",["^S","^3<","^39","^3=",[]]]]]],"~:flags",["^ ","^36",["^K",[]],"^37",["^K",[]]],"~:js-deps",["^ "],"~:deps",["^2[","^2X","^33","^2Y","^H","^2Z"]],"^R","^S","~:resource-id",["~:shadow.build.classpath/resource","taoensso/timbre.cljc"],"~:compiled-at",1689300182796,"^2T",["^ ","^39","^S","^2X","^2X","^2Y","^2Y","^2Z","^2Z","^2[","^2[","^30","^H","^S","^S","^31","^2Y","^32","^33","^33","^33","^H","^H","^34","^2Z"],"~:resource-name","taoensso/timbre.cljc","~:warnings",[],"~:source","(ns taoensso.timbre\n  \"Simple, flexible logging for Clojure/Script. No XML.\"\n  {:author \"Peter Taoussanis (@ptaoussanis)\"}\n  #?(:clj\n     (:require\n      [clojure.string     :as str]\n      [io.aviso.exception :as aviso-ex]\n      [taoensso.encore    :as enc :refer [have have? qb]]\n      [taoensso.timbre.appenders.core :as core-appenders])\n\n     :cljs\n     (:require\n      [clojure.string  :as str]\n      [goog.i18n.DateTimeFormat :as dtf]\n      [taoensso.encore :as enc :refer [] :refer-macros [have have?]]\n      [taoensso.timbre.appenders.core :as core-appenders]))\n\n  #?(:cljs\n     (:require-macros\n      [taoensso.timbre :as timbre-macros :refer []])))\n\n(if (vector? taoensso.encore/encore-version)\n  (enc/assert-min-encore-version [2 126 2])\n  (enc/assert-min-encore-version  2.126))\n\n;;;; Config\n\n(def default-timestamp-opts\n  \"Controls (:timestamp_ data)\"\n  #?(:cljs {:pattern  :iso8601 #_\"yy-MM-dd HH:mm:ss\"}\n     :clj\n     {:pattern  :iso8601     #_\"yyyy-MM-dd'T'HH:mm:ss.SSSX\" #_\"yy-MM-dd HH:mm:ss\"\n      :locale   :jvm-default #_(java.util.Locale. \"en\")\n      :timezone :utc         #_(java.util.TimeZone/getTimeZone \"Europe/Amsterdam\")}))\n\n(declare stacktrace)\n(defn default-output-fn\n  \"Default (fn [data]) -> string output fn.\n    Use`(partial default-output-fn <opts-map>)` to modify default opts.\"\n  ([     data] (default-output-fn nil data))\n  ([opts data] ; For partials\n   (let [{:keys [no-stacktrace? stacktrace-fonts]} opts\n         {:keys [level ?err #_vargs msg_ ?ns-str ?file hostname_\n                 timestamp_ ?line]} data]\n     (str\n       (when-let [ts (force timestamp_)] (str ts \" \"))\n       #?(:clj (force hostname_))  #?(:clj \" \")\n       (str/upper-case (name level))  \" \"\n       \"[\" (or ?ns-str ?file \"?\") \":\" (or ?line \"?\") \"] - \"\n       (force msg_)\n       (when-not no-stacktrace?\n         (when-let [err ?err]\n           (str enc/system-newline (stacktrace err opts))))))))\n\n;;; Alias core appenders here for user convenience\n(declare default-err default-out)\n#?(:clj  (enc/defalias         core-appenders/println-appender))\n#?(:clj  (enc/defalias         core-appenders/spit-appender))\n#?(:cljs (def println-appender core-appenders/println-appender))\n#?(:cljs (def console-appender core-appenders/console-appender))\n\n(def default-config\n  \"Default/example Timbre `*config*` value:\n\n    {:min-level :debug #_[[\\\"taoensso.*\\\" :error] [\\\"*\\\" :debug]]\n     :ns-filter #{\\\"*\\\"} #_{:deny #{\\\"taoensso.*\\\"} :allow #{\\\"*\\\"}}\n\n     :middleware [] ; (fns [appender-data]) -> ?data, applied left->right\n\n     :timestamp-opts default-timestamp-opts ; {:pattern _ :locale _ :timezone _}\n     :output-fn      default-output-fn ; (fn [appender-data]) -> string\n\n     :appenders\n     #?(:clj\n        {:println (println-appender {:stream :auto})\n         ;; :spit (spit-appender    {:fname \\\"./timbre-spit.log\\\"})\n         }\n\n        :cljs\n        (if (exists? js/window)\n          {:console (console-appender {})}\n          {:println (println-appender {})}))}\n\n    See `*config*` for more info.\"\n\n  {:min-level :debug #_[[\"taoensso.*\" :error] [\"*\" :debug]]\n   :ns-filter #{\"*\"} #_{:deny #{\"taoensso.*\"} :allow #{\"*\"}}\n\n   :middleware [] ; (fns [appender-data]) -> ?data, applied left->right\n\n   :timestamp-opts default-timestamp-opts ; {:pattern _ :locale _ :timezone _}\n   :output-fn      default-output-fn ; (fn [appender-data]) -> string\n\n   :appenders\n   #?(:clj\n      {:println (println-appender {:stream :auto})\n       ;; :spit (spit-appender    {:fname \"./timbre-spit.log\"})\n       }\n\n      :cljs\n      (if (exists? js/window)\n        {:console (console-appender {})}\n        {:println (println-appender {})}))})\n\n(comment\n  (set-config! default-config)\n  (infof \"Hello %s\" \"world :-)\"))\n\n(enc/defonce ^:dynamic *config*\n  \"This map controls all Timbre behaviour including:\n    - When to log (via level and namespace filtering)\n    - How  to log (which appenders to use)\n    - What to log (config to control how data sent to appenders\n                   will be formatted to output string)\n\n  See `default-config` for default value (and example config).\n\n  Modify this config with `binding`, `alter-var-root`, or with utils:\n       `set-level!`,         `with-level`,\n      `set-config!`,        `with-config`,\n    `merge-config!`, `with-merged-config`.\n\n  MAIN OPTIONS\n\n    :min-level\n      Logging will occur only if a logging call's level is >= this\n      min-level. Possible values, in order:\n\n        :trace  = level 0\n        :debug  = level 1 ; Default min-level\n        :info   = level 2\n        :warn   = level 3\n        :error  = level 4 ; Error type\n        :fatal  = level 5 ; Error type\n        :report = level 6 ; High general-purpose (non-error) type\n\n      It's also possible to set the min-level based on the namespace\n      by providing a vector that maps `ns-pattern`s to min-levels, e.g.:\n      `[[#{\\\"taoensso.*\\\"} :error] ... [{\\\"*\\\"} :debug]]`.\n\n      Example `ns-pattern`s:\n        #{}, \\\"*\\\", \\\"foo.bar\\\", \\\"foo.bar.*\\\", #{\\\"foo\\\" \\\"bar.*\\\"},\n        {:allow #{\\\"foo\\\" \\\"bar.*\\\"} :deny #{\\\"foo.*.bar.*\\\"}}.\n\n    :ns-filter\n      Logging will occur only if a logging call's namespace is permitted\n      by this ns-filter. Possible values:\n\n        - Arbitrary (fn may-log-ns? [ns]) predicate fn.\n        - An `ns-pattern` (see :min-level docs above).\n\n      Useful for turning off logging in noisy libraries, etc.\n\n    :middleware\n      Vector of simple (fn [appender-data]) -> ?new-data fns (applied left->right)\n      that transform the data map dispatched to appender fns. If any middleware\n      returns nil, NO dispatch will occur (i.e. the event will be filtered).\n\n      Useful for layering advanced functionality. Similar to Ring middleware.\n\n    :timestamp-opts ; Config map, see `default-timestamp-opts`\n    :output-fn      ; (fn [appender-data]) -> string, see `default-output-fn`\n\n    :appenders ; {<appender-id> <appender-map>}\n\n      Where each appender-map has keys:\n        :enabled?        ; Must be truthy to log\n        :min-level       ; Optional *additional* appender-specific min-level\n        :ns-filter       ; Optional *additional* appender-specific ns-filter\n\n        :async?          ; Dispatch using agent? Useful for slow appenders (clj only)\n        :rate-limit      ; [[<ncalls-limit> <window-msecs>] ...], or nil\n                         ; Appender will noop after exceeding given maximum number\n                         ; of calls within given rolling window/s.\n                         ; e.g. [[100 (encore/ms :mins 1)] [1000 (encore/ms :hours 1)]]\n                         ; will limit noop after:\n                         ;   - >100  calls in 1 rolling minute, or\n                         ;   - >1000 calls in 1 rolling hour\n\n        :output-fn       ; Optional override for inherited (fn [appender-data]) -> string\n        :timestamp-opts  ; Optional override for inherited config map\n        :fn              ; (fn [appender-data]) -> side-effects, with keys described below\n\n  APPENDER DATA\n    An appender's fn takes a single data map with keys:\n      :config          ; Entire active config map\n      :appender-id     ; Id of appender currently dispatching\n      :appender        ; Entire map of appender currently dispatching\n      :instant         ; Platform date (java.util.Date or js/Date)\n      :level           ; Call's level keyword (e.g. :info) (>= active min-level)\n      :error-level?    ; Is level e/o #{:error :fatal}?\n      :?ns-str         ; String,  or nil\n      :?file           ; String,  or nil\n      :?line           ; Integer, or nil ; Waiting on CLJ-865\n      :?err            ; First-arg platform error, or nil\n      :?meta           ; First-arg map when it has ^:meta metadata, used as a\n                         way of passing advanced per-call options to appenders\n      :vargs           ; Vector of raw args provided to logging call\n      :output_         ; Forceable - final formatted output string created\n                       ; by calling (output-fn <this-data-map>)\n      :msg_            ; Forceable - args as a string\n      :timestamp_      ; Forceable - string\n      :hostname_       ; Forceable - string (clj only)\n      :output-fn       ; (fn [data]) -> formatted output string\n                       ; (see `default-output-fn` for details)\n      :context         ; `*context*` value at log time (see `with-context`)\n      :spying?         ; Is call occuring via the `spy` macro?\n\n      **NB** - any keys not specifically documented here should be\n      considered private / subject to change without notice.\n\n  COMPILE-TIME LEVEL/NS ELISION\n    To control :min-level and :ns-filter at compile-time, use:\n\n      - `taoensso.timbre.min-level.edn`  JVM property (read as edn)\n      - `taoensso.timbre.ns-pattern.edn` JVM property (read as edn)\n\n      - `TAOENSSO_TIMBRE_MIN_LEVEL_EDN`  env var      (read as edn)\n      - `TAOENSSO_TIMBRE_NS_PATTERN_EDN` env var      (read as edn)\"\n\n  default-config)\n\n(defmacro with-config        [config & body] `(binding [*config*                            ~config ] ~@body))\n(defmacro with-merged-config [config & body] `(binding [*config* (enc/nested-merge *config* ~config)] ~@body))\n\n(declare swap-config!)\n(defn     set-config! [m] (swap-config! (fn [_old] m)))\n(defn   merge-config! [m] (swap-config! (fn [ old] (enc/nested-merge old m))))\n(defn    swap-config! [f & args]\n  #?(:cljs (set!                   *config* (apply f *config* args))\n     :clj  (apply alter-var-root #'*config* f args)))\n\n(defn      set-level! [level] (swap-config! (fn [m] (assoc m :min-level level))))\n(defmacro with-level  [level & body]\n  `(binding [*config* (assoc *config* :min-level ~level)] ~@body))\n\n(comment (set-level! :info) *config*)\n\n;;;; Level filtering\n;; Terminology note: we loosely distinguish between call/form and min levels,\n;; though there's no motivation for a semantic (domain) difference between the\n;; two as in Tufte.\n\n(let [err \"Invalid Timbre logging level: should be e/o #{:trace :debug :info :warn :error :fatal :report}\"\n      level->int\n      #(case %\n         :trace  0\n         :debug  1\n         :info   2\n         :warn   3\n         :error  4\n         :fatal  5\n         :report 6 ; High-level non-error type\n         nil)]\n\n  (defn- valid-level?     [x] (if (level->int x) true false))\n  (defn- valid-level      [x] (if (level->int x) x (throw (ex-info err {:given x :type (type x)}))))\n  (defn- valid-level->int [x] (or (level->int x)   (throw (ex-info err {:given x :type (type x)})))))\n\n(let [valid-level->int valid-level->int]\n  (defn #?(:clj level>= :cljs ^:boolean level>=)\n    \"Implementation detail.\"\n    [x y] (>= ^long (valid-level->int x) ^long (valid-level->int y))))\n\n(comment (qb 1e6 (level>= :info :trace))) ; 89.77\n\n;;;; Namespace filtering\n;; Terminology note: we distinguish loosely between `ns-filter` (which may be a\n;; fn or `ns-pattern`) and `ns-pattern` (subtype of `ns-filter`).\n\n(let [fn?         fn?\n      compile     (enc/fmemoize (fn [x] (enc/compile-str-filter x)))\n      conform?*   (enc/fmemoize (fn [x ns] ((compile x) ns)))\n      ;; conform? (enc/fmemoize (fn [x ns] (if (fn? x) (x ns) ((compile x) ns))))\n      conform?\n      (fn [ns-filter ns]\n        (if (fn? ns-filter)\n          (ns-filter           ns) ; Intentionally uncached, can be handy\n          (conform?* ns-filter ns)))]\n\n  (defn- #?(:clj may-log-ns? :cljs ^boolean may-log-ns?)\n    \"Implementation detail.\"\n    [ns-filter ns] (if (conform? ns-filter ns) true false))\n\n  (def ^:private ns->?min-level\n    \"[[<ns-pattern> <min-level>] ... [\\\"*\\\" <default-min-level>]], ns -> ?min-level\"\n    (enc/fmemoize\n      (fn [specs ns]\n        (enc/rsome\n          (fn [[ns-pattern min-level]]\n            (when (conform?* ns-pattern ns)\n              (valid-level min-level)))\n          specs)))))\n\n(comment\n  (enc/qb 1e6 ; [145.78 275.69]\n    (may-log-ns? \"*\" \"taoensso.timbre\")\n    (ns->?min-level [[#{\"taoensso.*\" \"foo.bar\"} :info] [\"*\" :debug]] \"foo.bar\")\n    (ns->?min-level [[\"ns.1\" :info] [\"ns.2\" :debug]] \"ns.2\")))\n\n;;;; Combo filtering\n\n(let [valid-level    valid-level\n      ns->?min-level ns->?min-level]\n\n  (defn- get-min-level [default x ns]\n    (valid-level\n      (or\n        (if (vector? x) (ns->?min-level x ns) x)\n        default))))\n\n(comment\n  (get-min-level :report [[\"foo\" :info]] *ns*)\n  (let [ns *ns*]\n    (enc/qb 1e6 ; [128.1 191.52]\n      (get-min-level :report :info     ns)\n      (get-min-level :report [[\"*\" 0]] ns))))\n\n(let [;; Legacy API unfortunately treated empty colls as allow-all\n      leglist (fn [x] (when x (if (#{[] #{}} x) nil x)))]\n  (defn- legacy-ns-filter [ns-whitelist ns-blacklist]\n    (let [ns-whitelist (leglist ns-whitelist)\n          ns-blacklist (leglist ns-blacklist)]\n      (when (or ns-whitelist ns-blacklist)\n        {:allow ns-whitelist :deny ns-blacklist}))))\n\n(comment (legacy-ns-filter [] [\"foo\"]))\n\n(let [level>=          level>=\n      may-log-ns?      may-log-ns?\n      get-min-level    get-min-level\n      legacy-ns-filter legacy-ns-filter]\n\n  (defn #?(:clj may-log? :cljs ^:boolean may-log?)\n    \"Implementation detail.\n    Returns true iff level and ns are runtime unfiltered.\"\n    ([                  level                ] (may-log? :report level nil     nil))\n    ([                  level ?ns-str        ] (may-log? :report level ?ns-str nil))\n    ([                  level ?ns-str ?config] (may-log? :report level ?ns-str nil))\n    ([default-min-level level ?ns-str ?config]\n     (let [config (or ?config *config*) ; NB may also be appender map\n           min-level\n           (get-min-level default-min-level\n             (or\n               (get config :min-level)\n               (get config :level) ; Legacy\n               )\n             ?ns-str)]\n\n       (if (level>= level min-level)\n         (if-let [ns-filter\n                  (or\n                    (get config :ns-filter)\n                    (legacy-ns-filter ; Legacy\n                      (get config :ns-whitelist)\n                      (get config :ns-blacklist)))]\n\n           (if (may-log-ns? ns-filter ?ns-str) true false)\n           true)\n         false)))))\n\n(comment (qb 1e5 (may-log? :info))) ; 122.3\n\n;;;; Compile-time filtering\n\n#?(:clj\n   (def ^:private compile-time-min-level\n     (when-let [level\n                (or\n                  (enc/read-sys-val \"taoensso.timbre.min-level.edn\" \"TAOENSSO_TIMBRE_MIN_LEVEL_EDN\")\n                  (enc/read-sys-val \"TIMBRE_LEVEL\")     ; Legacy\n                  (enc/read-sys-val \"TIMBRE_LOG_LEVEL\") ; Legacy\n                  )]\n\n       (let [level (if (string? level) (keyword level) level)] ; Legacy\n         (valid-level level)\n         (println (str \"Compile-time (elision) Timbre min-level: \" level))\n         level))))\n\n#?(:clj\n   (def ^:private compile-time-ns-filter\n     (let [ns-pattern\n           (or\n             (enc/read-sys-val \"taoensso.timbre.ns-pattern.edn\" \"TAOENSSO_TIMBRE_NS_PATTERN_EDN\")\n             (enc/read-sys-val \"TIMBRE_NS_PATTERN\") ; Legacy\n             (legacy-ns-filter ; Legacy\n               (enc/read-sys-val \"TIMBRE_NS_WHITELIST\")\n               (enc/read-sys-val \"TIMBRE_NS_BLACKLIST\")))]\n\n       (let [ns-pattern ; Legacy\n             (if (map? ns-pattern)\n               {:allow (or (:allow ns-pattern) (:whitelist ns-pattern))\n                :deny  (or (:deny  ns-pattern) (:blacklist ns-pattern))}\n               ns-pattern)]\n\n         (when ns-pattern (println (str \"Compile-time (elision) Timbre ns-pattern: \" ns-pattern)))\n         (or   ns-pattern \"*\")))))\n\n#?(:clj\n   (defn -elide?\n     \"Returns true iff level or ns are compile-time filtered.\n     Called only at macro-expansiom time.\"\n     [level-form ns-str-form]\n     (not\n       (and\n         (or ; Level okay\n           (nil? compile-time-min-level)\n           (not (valid-level? level-form)) ; Not a compile-time level const\n           (level>= level-form compile-time-min-level))\n\n         (or ; Namespace okay\n           (not (string? ns-str-form)) ; Not a compile-time ns-str const\n           (may-log-ns? compile-time-ns-filter ns-str-form))))))\n\n;;;; Utils\n\n(defn- str-join [xs]\n  (enc/str-join \" \"\n    (map\n      (fn [x]\n        (let [x (enc/nil->str x)] ; Undefined, nil -> \"nil\"\n          (cond\n            (record?          x) (pr-str x)\n            ;; (enc/lazy-seq? x) (pr-str x) ; Dubious?\n            :else x))))\n    xs))\n\n(comment\n  (defrecord MyRec [x])\n  (str-join [\"foo\" (MyRec. \"foo\")]))\n\n#?(:clj\n   (enc/defonce ^:private get-agent\n     (enc/fmemoize (fn [appender-id] (agent nil :error-mode :continue)))))\n\n(comment (get-agent :my-appender))\n\n(defonce ^:private get-rate-limiter\n  (enc/fmemoize (fn [appender-id specs] (enc/limiter specs))))\n\n(comment (def rf (get-rate-limiter :my-appender [[10 5000]])))\n\n;;;; Internal logging core\n\n(def ^:dynamic *context* \"General-purpose dynamic logging context\" nil)\n(defmacro  with-context\n  \"Executes body so that given arbitrary data will be passed (as `:context`)\n  to appenders for any enclosed logging calls.\n\n  (with-context\n    {:user-name \\\"Stu\\\"} ; Will be incl. in data dispatched to appenders\n    (info \\\"User request\\\"))\n\n  See also `with-context+`.\"\n\n  [context & body] `(binding [*context* ~context] ~@body))\n\n(defmacro with-context+\n  \"Like `with-context`, but merges given context into current context.\"\n  [context & body]\n  `(binding [*context* (conj (or *context* {}) ~context)]\n     ~@body))\n\n(comment (with-context+ {:foo1 :bar1} (with-context+ {:foo2 :bar2} *context*)))\n\n(defn- parse-vargs\n  \"vargs -> [?err ?meta ?msg-fmt api-vargs]\"\n  [?err msg-type vargs]\n  (let [auto-error? (enc/kw-identical? ?err :auto)\n        fmt-msg?    (enc/kw-identical? msg-type :f)\n        [v0] vargs]\n\n    (if (and auto-error? (enc/error? v0))\n      (let [?err     v0\n            ?meta    nil\n            vargs    (enc/vrest vargs)\n            ?msg-fmt (if fmt-msg? (let [[v0] vargs] v0) nil)\n            vargs    (if fmt-msg? (enc/vrest vargs) vargs)]\n\n        [?err ?meta ?msg-fmt vargs])\n\n      (let [?meta    (if (and (map? v0) (:meta (meta v0))) v0 nil)\n            ?err     (or (:err ?meta) (if auto-error? nil ?err))\n            ?meta    (dissoc ?meta :err)\n            vargs    (if ?meta    (enc/vrest vargs) vargs)\n            ?msg-fmt (if fmt-msg? (let [[v0] vargs] v0) nil)\n            vargs    (if fmt-msg? (enc/vrest vargs) vargs)]\n\n        [?err ?meta ?msg-fmt vargs]))))\n\n(comment\n  (let [ex (Exception. \"ex\")]\n    (qb 10000\n      (parse-vargs :auto :f [\"fmt\" :a :b :c])\n      (parse-vargs :auto :p [ex    :a :b :c])\n      (parse-vargs :auto :p [^:meta {:foo :bar} :a :b :c])\n      (parse-vargs :auto :p [       {:foo :bar} :a :b :c])\n      (parse-vargs :auto :p [ex])\n      (parse-vargs :auto :p [^:meta {:err ex}   :a :b :c])))\n  ;; [2.79 2.51 6.13 1.65 1.94 6.2]\n  (infof                                 \"Hi %s\" \"steve\")\n  (infof ^:meta {:hash :bar}             \"Hi %s\" \"steve\")\n  (infof ^:meta {:err (Exception. \"ex\")} \"Hi %s\" \"steve\"))\n\n(declare get-hostname)\n\n(defn- get-timestamp [timestamp-opts instant]\n  #?(:clj\n     (let [{:keys [pattern locale timezone]} timestamp-opts]\n       ;; iso8601 example: 2020-09-14T08:31:17.040Z (UTC)\n       (.format ^java.text.SimpleDateFormat\n         (enc/simple-date-format* pattern locale timezone)\n         instant))\n\n     :cljs\n     (let [{:keys [pattern]} timestamp-opts]\n       (if (enc/kw-identical? pattern :iso8601)\n         (.toISOString (js/Date. instant)) ; e.g. 2020-09-14T08:29:49.711Z (UTC)\n         ;; Pattern can also be be `goog.i18n.DateTimeFormat.Format`, etc.\n         (.format\n           (goog.i18n.DateTimeFormat. pattern)\n           instant)))))\n\n(comment (get-timestamp default-timestamp-opts (enc/now-udt)))\n\n(defn -log! \"Core low-level log fn. Implementation detail!\"\n\n  ;; Backward-compatible arities for convenience of AOT tools, Ref.\n  ;; https://github.com/fzakaria/slf4j-timbre/issues/20\n  ([config level ?ns-str ?file ?line msg-type ?err vargs_ ?base-data            ] (-log! config level ?ns-str ?file ?line msg-type ?err vargs_ ?base-data nil         false))\n  ([config level ?ns-str ?file ?line msg-type ?err vargs_ ?base-data callsite-id] (-log! config level ?ns-str ?file ?line msg-type ?err vargs_ ?base-data callsite-id false))\n  ([config level ?ns-str ?file ?line msg-type ?err vargs_ ?base-data callsite-id spying?]\n   (when (may-log? :report level ?ns-str config)\n     (let [instant (enc/now-dt*)\n           context *context*\n           vargs   @vargs_\n\n           [?err ?meta ?msg-fmt vargs]\n           (parse-vargs ?err msg-type vargs)\n\n           data ; Pre-middleware\n           (conj\n             (or ?base-data {})\n             {:instant instant\n              :level   level\n              :context context\n              :config  config  ; Entire config!\n              :?ns-str ?ns-str\n              :?file   ?file\n              :?line   ?line\n              #?(:clj :hostname_) #?(:clj (delay (get-hostname)))\n              :error-level? (#{:error :fatal} level)\n              :?err     ?err\n              :?err_    (delay ?err) ; Deprecated\n              :?msg-fmt ?msg-fmt     ; Undocumented\n              :?meta    ?meta\n              :vargs    vargs\n              :spying?  spying?})\n\n           ?data ; Post middleware\n           (reduce ; Apply middleware: data->?data\n             (fn [acc mf]\n               (let [result (mf acc)]\n                 (if (nil? result)\n                   (reduced nil)\n                   result)))\n             data\n             (:middleware config))]\n\n       (when-let [data ?data] ; Not filtered by middleware\n         (let [{:keys [vargs]} data\n               data (assoc data :vargs_ (delay vargs)) ; Deprecated\n               data\n               (enc/assoc-nx data\n                 :msg_\n                 (delay\n                   (case msg-type\n                     nil \"\"\n                     :p  (str-join vargs)\n                     :f  #_(enc/format* (have string? ?msg-fmt) vargs)\n                     (do\n                       (when-not (string? ?msg-fmt)\n                         (throw\n                           (ex-info \"Timbre format-style logging call without a format pattern (string)\"\n                             #_data\n                             {:level    level\n                              :location (str (or ?ns-str ?file \"?\") \":\"\n                                             (or ?line         \"?\"))})))\n\n                       (enc/format* ?msg-fmt vargs))))\n\n                 ;; Uniquely identifies a particular logging call for\n                 ;; rate limiting, etc.\n                 :hash_\n                 (delay\n                   (hash\n                     ;; Nb excl. instant\n                     [callsite-id      ; Only useful for direct macro calls\n                      ?msg-fmt\n                      (get ?meta :hash ; Explicit hash provided\n                        vargs)])))\n\n               ;; Optimization: try maximize output+timestamp sharing\n               ;; between appenders\n               output-fn1 (enc/fmemoize (get config :output-fn default-output-fn))\n               timestamp-opts1 (conj default-timestamp-opts (get config :timestamp-opts))\n               get-timestamp_ ; (fn [timestamp-opts]) -> Shared delay\n               (enc/fmemoize\n                 (fn [opts]\n                   (delay (get-timestamp opts (get data :instant)))))]\n\n           (reduce-kv\n             (fn [_ id appender]\n               (when (and (:enabled? appender) (may-log? :trace level ?ns-str appender))\n\n                 (let [rate-limit-specs (:rate-limit appender)\n                       rate-limit-okay?\n                       (or\n                         (empty? rate-limit-specs)\n                         (let [rl-fn (get-rate-limiter id rate-limit-specs)]\n                           (not (rl-fn (force (:hash_ data))))))]\n\n                   (when rate-limit-okay?\n                     (let [{:keys [async?] apfn :fn} appender\n\n                           output-fn\n                           (let [f (:output-fn appender)]\n                             (if (or (nil? f) (enc/kw-identical? f :inherit))\n                               output-fn1\n                               f))\n\n                           timestamp_\n                           (let [opts (:timestamp-opts appender)]\n                             (if (or (nil? opts) (enc/kw-identical? opts :inherit))\n                               (get-timestamp_       timestamp-opts1)\n                               (get-timestamp_ (conj timestamp-opts1 opts))))\n\n                           output_\n                           (delay\n                             (output-fn (assoc data :timestamp_ timestamp_)))\n\n                           data\n                           (conj data\n                             {:appender-id id\n                              :appender    appender\n                              :output-fn   output-fn\n                              :output_     output_\n                              :timestamp_  timestamp_})\n\n                           ?data ; Final data prep before going to appender\n                           (if-let [mfn (:middleware-fn appender)]\n                             (mfn data) ; Deprecated, undocumented\n                             data)]\n\n                       (when-let [data ?data] ; Not filtered by middleware\n\n                         ;; NB Unless `async?`, we currently allow appenders\n                         ;; to throw since it's not particularly obvious\n                         ;; how/where we should report problems. Throwing\n                         ;; early seems preferable to just silently dropping\n                         ;; errors. In effect, we currently require appenders\n                         ;;  to take responsibility over appropriate trapping.\n\n                         #?(:cljs (apfn data)\n                            :clj\n                            (if async?\n                              (send-off (get-agent id) (fn [_] (apfn data)))\n                              (apfn data)))))))))\n             nil\n             (:appenders config))))))\n   nil))\n\n(comment\n  (-log! *config* :info nil nil nil :p :auto\n    (delay [(do (println \"hi\") :x) :y]) nil \"callsite-id\" false))\n\n(defn- fline [and-form] (:line (meta and-form)))\n\n(defmacro log! ; Public wrapper around `-log!`\n  \"Core low-level log macro. Useful for tooling, etc.\n\n    * `level`    - must eval to a valid logging level\n    * `msg-type` - must eval to e/o #{:p :f nil}\n    * `opts`     - ks e/o #{:config :?err :?ns-str :?file :?line :?base-data :spying?}\n\n  Supports compile-time elision when compile-time const vals\n  provided for `level` and/or `?ns-str`.\"\n  [level msg-type args & [opts]]\n  (have [:or nil? sequential?] args) ; To allow -> (delay [~@args])\n  (let [{:keys [?ns-str] :or {?ns-str (str *ns*)}} opts]\n    ;; level, ns may/not be compile-time consts:\n    (when-not #?(:clj (-elide? level ?ns-str) :cljs false)\n      (let [{:keys [config ?err ?file ?line ?base-data spying?]\n             :or   {config 'taoensso.timbre/*config*\n                    ?err   :auto ; => Extract as err-type v0\n                    ?file  #?(:clj *file* :cljs nil)\n                    ;; NB waiting on CLJ-865:\n                    ?line (fline &form)}} opts\n\n            ?file (when (not= ?file \"NO_SOURCE_PATH\") ?file)\n\n            ;; Identifies this particular macro expansion; note that this'll\n            ;; be fixed for any fns wrapping `log!` (notably `tools.logging`,\n            ;; `slf4j-timbre`, etc.):\n            callsite-id\n            (hash [level msg-type args ; Unevaluated args (arg forms)\n                   ?ns-str ?file ?line (rand)])]\n\n        `(-log! ~config ~level ~?ns-str ~?file ~?line ~msg-type ~?err\n           (delay [~@args]) ~?base-data ~callsite-id ~spying?)))))\n\n(comment\n  (do           (log! :info :p [\"foo\"]))\n  (macroexpand '(log! :info :p [\"foo\"]))\n  (macroexpand '(log! :info :p [\"foo\"] {:?line 42})))\n\n;;;; Benchmarking\n\n(comment\n  (set-level! :debug)\n  (may-log? :trace)\n  (with-level :trace (log? :trace))\n  (qb 1e4\n    (may-log? :trace)\n    (may-log? :trace \"foo\")\n    (tracef \"foo\")\n    (when false \"foo\"))\n  ;; [1.38 1.42 2.08 0.26]\n\n  (defmacro with-sole-appender [appender & body]\n    `(with-config (assoc *config* :appenders {:appender ~appender}) ~@body))\n\n  (with-sole-appender {:enabled? true :fn (fn [data] nil)}\n    (qb 1e4 (info \"foo\"))) ; ~74.58 ; Time to delays ready\n\n  (with-sole-appender {:enabled? true :fn (fn [data] (force (:output_ data)))}\n    (qb 1e4 (info \"foo\"))) ; ~136.68 ; Time to output ready\n  )\n\n;;;; Main public API-level stuff\n;; TODO Have a bunch of cruft here trying to work around CLJ-865 to some extent\n\n;;; Log using print-style args\n(defmacro log*  [config level & args] `(log! ~level  :p ~args ~{:?line (fline &form) :config config}))\n(defmacro log          [level & args] `(log! ~level  :p ~args ~{:?line (fline &form)}))\n(defmacro trace              [& args] `(log! :trace  :p ~args ~{:?line (fline &form)}))\n(defmacro debug              [& args] `(log! :debug  :p ~args ~{:?line (fline &form)}))\n(defmacro info               [& args] `(log! :info   :p ~args ~{:?line (fline &form)}))\n(defmacro warn               [& args] `(log! :warn   :p ~args ~{:?line (fline &form)}))\n(defmacro error              [& args] `(log! :error  :p ~args ~{:?line (fline &form)}))\n(defmacro fatal              [& args] `(log! :fatal  :p ~args ~{:?line (fline &form)}))\n(defmacro report             [& args] `(log! :report :p ~args ~{:?line (fline &form)}))\n\n;;; Log using format-style args\n(defmacro logf* [config level & args] `(log! ~level  :f ~args ~{:?line (fline &form) :config config}))\n(defmacro logf         [level & args] `(log! ~level  :f ~args ~{:?line (fline &form)}))\n(defmacro tracef             [& args] `(log! :trace  :f ~args ~{:?line (fline &form)}))\n(defmacro debugf             [& args] `(log! :debug  :f ~args ~{:?line (fline &form)}))\n(defmacro infof              [& args] `(log! :info   :f ~args ~{:?line (fline &form)}))\n(defmacro warnf              [& args] `(log! :warn   :f ~args ~{:?line (fline &form)}))\n(defmacro errorf             [& args] `(log! :error  :f ~args ~{:?line (fline &form)}))\n(defmacro fatalf             [& args] `(log! :fatal  :f ~args ~{:?line (fline &form)}))\n(defmacro reportf            [& args] `(log! :report :f ~args ~{:?line (fline &form)}))\n\n(comment\n  (infof \"hello %s\" \"world\")\n  (infof (Exception.) \"hello %s\" \"world\")\n  (infof (Exception.)))\n\n(defmacro -log-errors [?line & body]\n  `(enc/catching (do ~@body) e#\n     (do\n       #_(error e#) ; CLJ-865\n       (log! :error :p [e#] ~{:?line ?line}))))\n\n(defmacro -log-and-rethrow-errors [?line & body]\n  `(enc/catching (do ~@body) e#\n     (do\n       #_(error e#) ; CLJ-865\n       (log! :error :p [e#] ~{:?line ?line})\n       (throw e#))))\n\n(defmacro -logged-future [?line & body] `(future (-log-errors ~?line ~@body)))\n\n(defmacro log-errors             [& body] `(-log-errors             ~(fline &form) ~@body))\n(defmacro log-and-rethrow-errors [& body] `(-log-and-rethrow-errors ~(fline &form) ~@body))\n(defmacro logged-future          [& body] `(-logged-future          ~(fline &form) ~@body))\n\n#?(:clj\n   (defn handle-uncaught-jvm-exceptions!\n     \"Sets JVM-global DefaultUncaughtExceptionHandler.\"\n     [& [handler]]\n     (let [handler\n           (or handler\n             (fn [throwable ^Thread thread]\n               (errorf throwable \"Uncaught exception on thread: %s\"\n                 (.getName thread))))]\n\n       (Thread/setDefaultUncaughtExceptionHandler\n         (reify Thread$UncaughtExceptionHandler\n           (uncaughtException [this thread throwable] (handler throwable thread)))))))\n\n(comment\n  (log-errors             (/ 0))\n  (log-and-rethrow-errors (/ 0))\n  (logged-future          (/ 0))\n  (handle-uncaught-jvm-exceptions!))\n\n(defmacro -spy [?line config level name expr]\n  `(-log-and-rethrow-errors ~?line\n     (let [result# ~expr]\n       ;; Subject to elision:\n       ;; (log* ~config ~level ~name \"=>\" result#) ; CLJ-865\n       (log! ~level :p [~name \"=>\" result#]\n         ~{:?line ?line :config config :spying? true})\n\n       ;; NOT subject to elision:\n       result#)))\n\n(defmacro spy\n  \"Evaluates named expression and logs its result. Always returns the result.\n  Defaults to :debug logging level and unevaluated expression as name.\"\n  ([                  expr] `(-spy ~(fline &form) *config* :debug '~expr ~expr))\n  ([       level      expr] `(-spy ~(fline &form) *config* ~level '~expr ~expr))\n  ([       level name expr] `(-spy ~(fline &form) *config* ~level  ~name ~expr))\n  ([config level name expr] `(-spy ~(fline &form) ~config  ~level  ~name ~expr)))\n\n(defmacro get-env [] `(enc/get-env))\n\n(comment\n  ((fn foo [x y] (get-env)) 5 10)\n  (with-config\n    (assoc example-config :appenders\n      {:default {:enabled? true :fn (fn [m] (println #_(keys m) (:spying? m)))}})\n    (info \"foo\")\n    (spy  \"foo\")))\n\n#?(:clj\n   (defn refer-timbre\n     \"Shorthand for:\n     (require '[taoensso.timbre :as timbre\n                :refer (log  trace  debug  info  warn  error  fatal  report\n                        logf tracef debugf infof warnf errorf fatalf reportf\n                        spy get-env log-env)])\"\n     []\n     (require '[taoensso.timbre :as timbre\n                :refer (log  trace  debug  info  warn  error  fatal  report\n                         logf tracef debugf infof warnf errorf fatalf reportf\n                         spy get-env log-env)])))\n\n;;;; Misc public utils\n\n#?(:clj\n   (defn color-str [color & xs]\n     (let [ansi-color #(format \"\\u001b[%sm\"\n                         (case % :reset  \"0\"  :black  \"30\" :red   \"31\"\n                               :green  \"32\" :yellow \"33\" :blue  \"34\"\n                               :purple \"35\" :cyan   \"36\" :white \"37\"\n                               \"0\"))]\n       (str (ansi-color color) (apply str xs) (ansi-color :reset)))))\n\n#?(:clj (def default-out (java.io.OutputStreamWriter. System/out)))\n#?(:clj (def default-err (java.io.PrintWriter.        System/err)))\n(defmacro with-default-outs [& body]\n  `(binding [*out* default-out, *err* default-err] ~@body))\n\n#?(:clj\n   (do ; Hostname stuff\n     (defn get-?hostname \"Returns live local hostname, or nil.\" []\n       (try (.getHostName (java.net.InetAddress/getLocalHost))\n            (catch java.net.UnknownHostException _ nil)))\n\n     (let [unknown \"UnknownHost\"]\n       (def get-hostname \"Returns cached hostname string.\"\n         (enc/memoize (enc/ms :mins 1)\n           (fn []\n             (try\n               (let [p (promise)]\n                 ;; Android doesn't like hostname calls on the main thread.\n                 ;; Using `future` would start the Clojure agent threadpool though,\n                 ;; which can slow down application shutdown w/o a `(shutdown-agents)`\n                 ;; call.\n                 (.start (Thread. (fn [] (deliver p (get-?hostname)))))\n                 (or (deref p 5000 nil) unknown))\n               (catch Exception _ unknown))))))))\n\n(comment (get-hostname))\n\n#?(:clj\n   (def ^:private default-stacktrace-fonts\n     (or\n       (enc/read-sys-val \"taoensso.timbre.default-stacktrace-fonts.edn\" \"TAOENSSO_TIMBRE_DEFAULT_STACKTRACE_FONTS_EDN\")\n       (enc/read-sys-val \"TIMBRE_DEFAULT_STACKTRACE_FONTS\") ; Legacy\n       nil)))\n\n(defn stacktrace\n  ([err     ] (stacktrace err nil))\n  ([err opts]\n   #?(:cljs (or (.-stack err) (str err)) ; TODO Alternatives?\n      :clj\n      (let [stacktrace-fonts ; {:stacktrace-fonts nil->{}}\n            (if-let [e (find opts :stacktrace-fonts)]\n              (let [st-fonts (val e)]\n                (if (nil? st-fonts)\n                  {}\n                  st-fonts))\n              default-stacktrace-fonts)]\n\n        (if-let [fonts stacktrace-fonts]\n          (binding [aviso-ex/*fonts* fonts]\n            (do (aviso-ex/format-exception err)))\n          (do   (aviso-ex/format-exception err)))))))\n\n(comment (stacktrace (Exception. \"Boo\") {:stacktrace-fonts {}}))\n\n(defmacro sometimes \"Handy for sampled logging, etc.\"\n  [probability & body]\n   `(do (assert (<= 0 ~probability 1) \"Probability: 0 <= p <= 1\")\n        (when (< (rand) ~probability) ~@body)))\n\n;;;; Deprecated\n\n(enc/deprecated\n  #?(:cljs (def console-?appender core-appenders/console-appender))\n  (def ordered-levels [:trace :debug :info :warn :error :fatal :report])\n  (def log? may-log?)\n  (def example-config \"DEPRECATED, prefer `default-config`\" default-config)\n  (defn logging-enabled? [level compile-time-ns] (may-log? level (str compile-time-ns)))\n  (defn str-println      [& xs] (str-join xs))\n  (defmacro with-log-level      [level  & body] `(with-level  ~level  ~@body))\n  (defmacro with-logging-config [config & body] `(with-config ~config ~@body))\n  (defmacro logp [& args] `(log ~@args))\n  (defmacro log-env\n    ([                 ] `(log-env :debug))\n    ([       level     ] `(log-env ~level \"&env\"))\n    ([       level name] `(log-env *config* ~level ~name))\n    ([config level name] `(log* ~config ~level ~name \"=>\" (get-env)))))\n","~:reader-features",["^K",["~:cljs"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings","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","names",["cljs.core/vector?","taoensso.encore/encore-version","taoensso.encore/assert-min-encore-version","taoensso.timbre/default-timestamp-opts","var_args","G__59830","taoensso.timbre/default-output-fn","js/Error","data","taoensso.timbre.default_output_fn","opts","map__59840","cljs.core/--destructure-map","cljs.core.get","map__59841","no-stacktrace?","stacktrace-fonts","level","?err","msg_","?ns-str","?file","hostname_","timestamp_","?line","temp__5753__auto__","ts","cljs.core/force","clojure.string/upper-case","cljs.core/name","or__5045__auto__","err","taoensso.encore/system-newline","taoensso.timbre/stacktrace","taoensso.timbre/println-appender","taoensso.timbre.appenders.core/println-appender","taoensso.timbre/console-appender","taoensso.timbre.appenders.core/console-appender","taoensso.timbre/default-config","js/window","G__59874","G__59875","js/taoensso","js/taoensso.timbre","js/taoensso.timbre.*config*","taoensso.timbre/*config*","taoensso.timbre/set-config!","m","G__59881","taoensso.timbre/swap-config!","_old","taoensso.timbre/merge-config!","G__59886","old","taoensso.encore.nested_merge","args__5775__auto__","len__5769__auto__","i__5770__auto__","argseq__5776__auto__","cljs.core/IndexedSeq","seq59892","G__59893","cljs.core/first","cljs.core/next","self__5754__auto__","f","args","cljs.core.apply","taoensso.timbre/set-level!","cljs.core.assoc","p1__59901#","level->int","G__59903","cljs.core/Keyword","taoensso.timbre/valid-level?","x","taoensso.timbre/valid-level","cljs.core.ex_info","cljs.core/type","taoensso.timbre/valid-level->int","valid-level->int","taoensso.timbre/level>=","y","fn?","cljs.core/fn?","compile","taoensso.encore/fmemoize","taoensso.encore/compile-str-filter","conform?*","ns","fexpr__59909","conform?","ns-filter","taoensso.timbre/may-log-ns?","taoensso.timbre/ns->?min-level","specs","taoensso.encore/rsome","p__59917","vec__59919","cljs.core.nth","ns-pattern","min-level","valid-level","ns->?min-level","taoensso.timbre/get-min-level","default","G__59927","leglist","fexpr__59932","taoensso.timbre/legacy-ns-filter","ns-whitelist","ns-blacklist","level>=","may-log-ns?","get-min-level","legacy-ns-filter","G__59943","taoensso.timbre/may-log?","taoensso.timbre.may_log_QMARK_","?config","default-min-level","config","G__59953","G__59954","G__59955","temp__5751__auto__","G__59960","G__59961","taoensso.timbre/str-join","xs","taoensso.encore.str_join","cljs.core.map","taoensso.encore/nil->str","cljs.core/record?","cljs.core.pr_str","js/taoensso.timbre.get-rate-limiter","taoensso.timbre/get-rate-limiter","appender-id","taoensso.encore/limiter","taoensso.timbre/*context*","taoensso.timbre/parse-vargs","msg-type","vargs","vec__59984","auto-error?","taoensso.encore/kw-identical?","fmt-msg?","v0","and__5043__auto__","taoensso.encore/error?","?meta","taoensso.encore/vrest","?msg-fmt","vec__59993","cljs.core/map?","cljs.core/meta","cljs.core.dissoc","vec__60002","taoensso.timbre/get-timestamp","timestamp-opts","instant","map__60010","pattern","js/Date","js/goog.i18n.DateTimeFormat","G__60020","taoensso.timbre/-log!","vargs_","?base-data","taoensso.timbre._log_BANG_","callsite-id","spying?","cljs.core/deref","vec__60036","context","cljs.core.conj","fexpr__60039","cljs.core/Delay","?data","cljs.core.reduce","acc","mf","result","cljs.core/reduced","map__60044","taoensso.encore.assoc_nx","G__60048","cljs.core._EQ_","taoensso.encore/format*","cljs.core/hash","output-fn1","timestamp-opts1","get-timestamp_","cljs.core/reduce-kv","_","id","appender","rate-limit-specs","rate-limit-okay?","cljs.core/empty?","rl-fn","cljs.core/not","G__60062","map__60068","async?","apfn","output-fn","output_","G__60073","mfn","taoensso.timbre/fline","and-form","G__60116","taoensso.timbre.stacktrace","taoensso.timbre/console-?appender","taoensso.timbre/ordered-levels","taoensso.timbre/log?","taoensso.timbre/example-config","taoensso.timbre/logging-enabled?","compile-time-ns","taoensso.timbre/str-println","seq60124","self__5755__auto__","cljs.core/seq","ret__5824__auto__","taoensso.timbre/with-log-level","&form","&env","cljs.core.sequence","cljs.core.concat","cljs.core/List","seq60128","G__60129","G__60130","G__60131","body","taoensso.timbre/with-logging-config","seq60138","G__60139","G__60140","G__60141","taoensso.timbre/logp","seq60156","G__60157","G__60158","G__60173","taoensso.timbre/log-env","name"]],"~:used-vars",["^K",["~$cljs.core/--destructure-map","~$taoensso.timbre/ordered-levels","~$taoensso.timbre/valid-level?","~$taoensso.timbre.appenders.core/println-appender","~$taoensso.encore/kw-identical?","^2A","~$taoensso.encore/fmemoize","~$taoensso.timbre/ns->?min-level","~$taoensso.timbre/println-appender","~$clojure.string/upper-case","~$taoensso.timbre/fline","~$js/goog.i18n.DateTimeFormat","~$taoensso.timbre/str-join","~$taoensso.timbre/default-config","~$taoensso.timbre/may-log-ns?","~$taoensso.encore/assoc-nx","~$taoensso.encore/nil->str","~$cljs.core/vector?","~$cljs.core/=","~$taoensso.timbre/stacktrace","~$js/Date","~$taoensso.timbre/parse-vargs","~$taoensso.timbre/get-hostname","~$taoensso.timbre/-log!","~$cljs.core/IndexedSeq","~$cljs.core/hash","~$taoensso.encore/rsome","~$cljs.core/deref","^2M","~$cljs.core/reduce","~$cljs.core/seq","~$cljs.core/apply","~$taoensso.timbre/set-config!","~$cljs.core/Keyword","~$taoensso.timbre/logging-enabled?","~$cljs.core/dissoc","~$cljs.core/Delay","~$taoensso.timbre/may-log?","~$cljs.core/concat","~$taoensso.timbre/default-err","~$cljs.core/pr-str","~$taoensso.timbre/valid-level","~$taoensso.timbre/str-println","~$taoensso.timbre/get-rate-limiter","~$js/taoensso.timbre.get-rate-limiter","~$taoensso.encore/vrest","~$js/taoensso","~$cljs.core/empty?","~$taoensso.timbre/*context*","~$cljs.core/map?","~$taoensso.timbre/valid-level->int","~$cljs.core/conj","~$taoensso.timbre/*config*","~$taoensso.timbre/console-?appender","~$cljs.core/map","~$taoensso.timbre/legacy-ns-filter","~$taoensso.encore/assert-min-encore-version","~$cljs.core/fn?","~$taoensso.timbre/swap-config!","~$taoensso.encore/system-newline","~$taoensso.encore/format*","~$taoensso.timbre/console-appender","~$cljs.core/List","^2;","~$cljs.core/get","~$taoensso.encore/nested-merge","~$taoensso.timbre.appenders.core/console-appender","~$cljs.core/record?","~$cljs.core/reduced","~$taoensso.timbre/level>=","~$cljs.core/nth","~$cljs.core/ex-info","~$cljs.core/meta","~$js/taoensso.timbre","~$cljs.core/force","~$taoensso.encore/str-join","~$taoensso.timbre/example-config","~$taoensso.encore/encore-version","~$taoensso.timbre/default-timestamp-opts","~$taoensso.timbre/get-timestamp","~$cljs.core/next","~$taoensso.encore/limiter","~$cljs.core/sequence","~$cljs.core/not","^2S","~$taoensso.timbre/get-min-level","~$cljs.core/assoc","~$taoensso.timbre/set-level!","~$cljs.core/reduce-kv","~$taoensso.timbre/merge-config!","~$cljs.core/first","~$js/window","~$taoensso.encore/compile-str-filter","~$js/taoensso.timbre.*config*","~$cljs.core/name","~$taoensso.timbre/log?","~$taoensso.encore/error?","~$js/Error","~$taoensso.timbre/default-output-fn","~$cljs.core/type","~$taoensso.timbre/default-out"]]],"~:cache-keys",["~#cmap",[["^3C","goog/dom/tagname.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^K",[]],"~:deps-syms",["^2[","~$goog.dom.HtmlElement"]]],["^3C","goog/async/freelist.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2["]]],["^3C","goog/i18n/datetimesymbols.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2[","~$goog.i18n.cldrversion"]]],["^3C","goog/labs/useragent/platform.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2[","~$goog.string.internal","~$goog.labs.userAgent.util","~$goog.labs.userAgent.highEntropy.highEntropyValue","~$goog.labs.userAgent.highEntropy.highEntropyData","~$goog.labs.userAgent"]]],["^3C","goog/timer/timer.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2[","~$goog.Promise","~$goog.events.EventTarget"]]],["^3C","cljs/tools/reader/impl/utils.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2[","^2X","^33","~$goog.string"]]],["^3C","goog/math/math.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2[","~$goog.asserts"]]],["^3C","goog/html/trustedtypes.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2["]]],["^3C","goog/string/stringformat.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2[","^6;"]]],["^3C","goog/events/eventtype.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2[","~$goog.events.eventTypeHelpers","~$goog.userAgent"]]],["^3C","goog/labs/useragent/browser.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2[","^65","^66","^6<","^64","^67","^68"]]],["^3C","goog/html/safeurl.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2[","^6<","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.string.Const","~$goog.string.TypedString","^64"]]],["^3C","goog/array/array.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2[","^6<"]]],["^3C","goog/useragent/useragent.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2[","~$goog.labs.userAgent.browser","~$goog.labs.userAgent.engine","~$goog.labs.userAgent.platform","^65","~$goog.reflect","^64"]]],["^3C","goog/structs/prioritypool.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2[","~$goog.structs.Pool","~$goog.structs.PriorityQueue"]]],["^3C","goog/async/run.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2[","~$goog.async.WorkQueue","~$goog.debug.asyncStackTag","~$goog.async.nextTick","~$goog.async.throwException"]]],["^3C","goog/debug/error.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2["]]],["^3C","goog/async/workqueue.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2[","~$goog.async.FreeList","^6<"]]],["^3C","goog/flags/flags.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2["]]],["^3C","goog/events/events.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2[","^6<","~$goog.debug.entryPointRegistry","~$goog.events.BrowserEvent","~$goog.events.BrowserFeature","~$goog.events.Listenable","~$goog.events.ListenerMap"]]],["^3C","goog/promise/resolver.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2["]]],["^3C","goog/events/browserfeature.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2["]]],["^3C","cljs/tools/reader/edn.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2[","^2X","~$cljs.tools.reader.impl.errors","~$cljs.tools.reader.reader-types","~$cljs.tools.reader.impl.utils","~$cljs.tools.reader.impl.commons","~$cljs.tools.reader","^6;","~$goog.string.StringBuffer"]]],["^3C","goog/structs/priorityqueue.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2[","~$goog.structs.Heap"]]],["^3C","goog/net/xhrio.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2[","~$goog.Timer","~$goog.array","^6<","~$goog.collections.maps","^6N","^6:","~$goog.json.hybrid","~$goog.log","~$goog.net.ErrorCode","~$goog.net.EventType","~$goog.net.HttpStatus","~$goog.net.XmlHttp","~$goog.object","^6;","~$goog.uri.utils","^6>"]]],["^3C","goog/promise/thenable.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2["]]],["^3C","goog/collections/iters.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2["]]],["^3C","goog/dom/nodetype.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2["]]],["^3C","cljs/tools/reader/impl/inspect.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2[","^2X"]]],["^3C","goog/labs/useragent/highentropy/highentropyvalue.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2[","^65","^64"]]],["^3C","cljs/tools/reader.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2[","^2X","^6T","^6U","^6V","^6S","^6[","^6;","^6X"]]],["^3C","taoensso/timbre.cljc"],["ed86c0ab3cf1c4771c5f9bf201405e20c3027ced","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2[","^2X","^33","^2Y","^H","^2Z"]]],["^3C","goog/net/wrapperxmlhttpfactory.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2[","~$goog.net.XhrLike","~$goog.net.XmlHttpFactory"]]],["^3C","goog/date/utcdatetime.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2[","~$goog.date","~$goog.date.Date","~$goog.date.DateTime","~$goog.date.Interval"]]],["^3C","goog/i18n/nativelocaledigits.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2["]]],["^3C","goog/events/eventtarget.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2[","~$goog.Disposable","^6<","~$goog.events","~$goog.events.Event","^6Q","^6R","^77"]]],["^3C","goog/disposable/disposable.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2[","~$goog.disposable.IDisposable","~$goog.dispose","~$goog.disposeAll"]]],["^3C","goog/string/typedstring.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2["]]],["^3C","goog/object/object.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2["]]],["^3C","goog/dom/asserts.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2[","^6<"]]],["^3C","taoensso/encore.cljc"],["8ce32d99c08a853f8a56322b5aab80e59c3bd4d6","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2[","^2X","^33","~$clojure.set","~$cljs.reader","~$cljs.tools.reader.edn","^77","^6[","^6;","~$goog.string.format","^6X","^7@","~$goog.net.XhrIo","~$goog.net.XhrIoPool","~$goog.Uri.QueryData","^74","^73","~$taoensso.truss"]]],["^3C","goog/structs/set.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2[","~$goog.structs","~$goog.structs.Collection","~$goog.structs.Map"]]],"~:SHADOW-TIMESTAMP",[1689298966000,1689298966000,1689298966000],["^3C","taoensso/timbre/appenders/core.cljc"],["ed86c0ab3cf1c4771c5f9bf201405e20c3027ced","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2[","^2X","^33","^H"]]],["^3C","goog/math/long.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2[","^6<","^6F"]]],["^3C","goog/events/listener.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2[","~$goog.events.ListenableKey"]]],["^3C","goog/html/trustedresourceurl.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2[","^6<","~$goog.fs.blob","^6?","~$goog.html.SafeScript","~$goog.html.trustedtypes","^6A","^6B"]]],["^3C","goog/events/listenermap.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2[","^6[","~$goog.events.Listener","^77"]]],["^3C","goog/events/eventid.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2["]]],["^3C","taoensso/truss.cljs"],["02c08dae83153a50eb946c4d742f574a24bb2a76","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2[","^2X","~$taoensso.truss.impl"]]],["^3C","goog/string/internal.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2["]]],["^3C","goog/functions/functions.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2["]]],["^3C","goog/html/safestyle.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2[","^6A","~$goog.html.SafeUrl","^6B","^6<","^64"]]],["^3C","goog/dom/safe.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2[","^6<","~$goog.asserts.dom","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","^7S","~$goog.html.SafeStyle","^7W","^6@","~$goog.html.uncheckedconversions","^6A","^64"]]],["^3C","goog/asserts/dom.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2[","~$goog.dom.TagName","^6<","~$goog.dom.element"]]],["^3C","goog/i18n/dayperiodsymbols.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2["]]],["^3C","taoensso/truss/impl.cljs"],["02c08dae83153a50eb946c4d742f574a24bb2a76","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2[","^2X","^7E"]]],["^3C","goog/net/eventtype.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2["]]],["^3C","goog/structs/map.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2[","~$goog.collections.iters","~$goog.iter","~$goog.iter.Iterator","~$goog.iter.es6"]]],["^3C","goog/net/xhriopool.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2[","^7I","~$goog.structs.PriorityPool"]]],["^3C","goog/date/date.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2[","^6<","~$goog.i18n.DateTimeSymbols","^6;"]]],["^3C","goog/html/safehtml.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2[","^6A","^7S","^80","~$goog.html.SafeStyleSheet","^7W","^82","^6@","^6B","^6<","^6C","^6[","^77","^64","~$goog.dom.tags","^7T"]]],["^3C","goog/dom/tags.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2[","^77"]]],["^3C","goog/math/size.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2["]]],["^3C","goog/structs/queue.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2[","^6["]]],["^3C","goog/labs/useragent/engine.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2[","^6[","^64","^65"]]],["^3C","goog/fs/blob.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2["]]],["^3C","cljs/reader.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2[","^2X","^77","^6W","^7G","^6X"]]],["^3C","goog/dom/dom.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2[","^6[","^6<","^7X","~$goog.dom.BrowserFeature","~$goog.dom.NodeType","^82","~$goog.dom.safe","^7[","^81","~$goog.math.Coordinate","~$goog.math.Size","^77","^6;","^6A","~$goog.string.Unicode","^6>"]]],["^3C","goog/asserts/asserts.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2[","~$goog.debug.Error","^8="]]],["^3C","goog/i18n/timezone.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2[","^6[","^77","^6;"]]],["^3C","goog/uri/uri.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2[","^6[","^6<","^70","^6;","^7M","^78","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^3C","goog/i18n/cldrversion.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2["]]],["^3C","goog/net/errorcode.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2["]]],["^3C","goog/labs/useragent/highentropy/highentropydata.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2[","^66"]]],["^3C","goog/collections/maps.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2["]]],["^3C","goog/iter/es6.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2[","~$goog.iter.Iterable","^86"]]],["^3C","goog/events/eventtypehelpers.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2[","^6P","^6>"]]],["^3C","goog/debug/asyncstacktag.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2[","^6<"]]],["^3C","goog/disposable/idisposable.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2["]]],["^3C","goog/promise/promise.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2[","~$goog.Thenable","^6<","^6M","~$goog.async.run","^6L","^8B","^6J","^7Z","~$goog.promise.Resolver"]]],["^3C","goog/fs/url.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2["]]],["^3C","goog/base.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",[]]],["^3C","goog/json/hybrid.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2[","^6<","~$goog.json"]]],["^3C","goog/structs/structs.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2[","^6[","^77"]]],["^3C","cljs/tools/reader/impl/errors.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2[","^2X","^6T","^33","~$cljs.tools.reader.impl.inspect"]]],["^3C","goog/disposable/dispose.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2["]]],["^3C","clojure/string.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2[","^2X","^6;","^6X"]]],["^3C","goog/structs/pool.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2[","^7?","~$goog.structs.Queue","~$goog.structs.Set"]]],["^3C","goog/net/httpstatus.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2["]]],["^3C","goog/i18n/datetimeformat.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2[","^6<","^7;","~$goog.date.UtcDateTime","^89","~$goog.i18n.DayPeriods","~$goog.i18n.LocaleFeature","~$goog.i18n.NativeLocaleDigits","~$goog.i18n.TimeZone","^6;"]]],["^3C","goog/structs/heap.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2[","~$goog.structs.Node","^77"]]],["^3C","goog/debug/entrypointregistry.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2[","^6<"]]],["^3C","goog/string/string.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2[","^8>","^81","^6A","^64"]]],["^3C","goog/reflect/reflect.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2["]]],["^3C","goog/labs/useragent/util.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2[","^64","^68"]]],["^3C","goog/debug/debug.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2[","^6[","~$goog.debug.errorcontext"]]],["^3C","goog/string/stringbuffer.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2["]]],["^3C","goog/math/coordinate.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2[","~$goog.math"]]],["^3C","goog/debug/errorcontext.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2["]]],["^3C","cljs/tools/reader/reader_types.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2[","^2X","^6U","^6;","^6X"]]],["^3C","goog/iter/iter.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2[","^6[","^6<","~$goog.debug","^7Z","^8T"]]],["^3C","goog/labs/useragent/useragent.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2[","~$goog.flags"]]],["^3C","goog/async/nexttick.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2[","^6N","~$goog.dom","^82","^7Z","^6C","^6D"]]],["^3C","goog/dom/element.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2[","^8=","^82"]]],["^3C","goog/html/uncheckedconversions.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2[","^6<","^7[","^7S","^80","^8:","^7W","^6@","^6A","^64"]]],["^3C","goog/events/event.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2[","^7?","~$goog.events.EventId"]]],["^3C","cljs/tools/reader/impl/commons.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2[","^2X","^6S","^6T","^6U"]]],["^3C","goog/dom/htmlelement.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2["]]],["^3C","cljs/core.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2[","~$goog.math.Long","~$goog.math.Integer","^6;","^77","^6[","~$goog.Uri","^6X"]]],["^3C","goog/html/safescript.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2[","^6A","^6B","^7T","^6<"]]],["^3C","goog/log/log.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2[","^6<","^8U"]]],["^3C","goog/async/throwexception.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2["]]],["^3C","goog/html/safestylesheet.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2[","^6A","^80","^6B","^77","^6<","^64"]]],["^3C","goog/structs/collection.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2["]]],["^3C","goog/events/browserevent.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2[","^8U","^7A","~$goog.events.EventType","^6F","^6>"]]],["^3C","goog/math/integer.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2[","^6F"]]],["^3C","goog/structs/node.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2["]]],["^3C","goog/dom/browserfeature.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2[","^6>"]]],["^3C","clojure/set.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2[","^2X"]]],["^3C","goog/uri/utils.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2[","^6<","^6;"]]],["^3C","goog/string/const.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2[","^6<","^6B"]]],["^3C","goog/disposable/disposeall.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2[","^7C"]]],["^3C","goog/json/json.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2["]]],["^3C","goog/i18n/localefeature.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2["]]],["^3C","goog/events/listenable.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2["]]],["^3C","goog/events/listenablekey.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2["]]],["^3C","goog/net/xmlhttpfactory.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2[","^79"]]],["^3C","goog/net/xmlhttp.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2[","^6<","~$goog.net.WrapperXmlHttpFactory","^7:"]]],["^3C","goog/net/xhrlike.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^5Z",["^ ","^5[",null,"^60",["^K",[]],"^61",["^2["]]]]],"~:clj-info",["^ ","jar:file:/Users/alejandroherrera/.m2/repository/io/aviso/pretty/0.1.37/pretty-0.1.37.jar!/io/aviso/exception.clj",1689258836000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/default_data_readers.clj",1689298966000,"jar:file:/Users/alejandroherrera/.m2/repository/binaryage/devtools/1.0.4/devtools-1.0.4.jar!/devtools/defaults.clj",1689298965000,"jar:file:/Users/alejandroherrera/.m2/repository/com/taoensso/truss/1.6.0/truss-1.6.0.jar!/taoensso/truss/impl.clj",1689258840000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/pprint.clj",1689292450000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader.clj",1689298966000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/instant.clj",1689292450000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/impl/inspect.clj",1689298966000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/data/json.clj",1689298966000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/passes/and_or.cljc",1689298966000,"jar:file:/Users/alejandroherrera/.m2/repository/com/taoensso/timbre/5.1.1/timbre-5.1.1.jar!/taoensso/timbre.cljc",1689292470000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/impl/errors.clj",1689298966000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/impl/inspect.clj",1689258845000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/reader.clj",1689298966000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/core.clj",1689292450000,"jar:file:/Users/alejandroherrera/.m2/repository/com/taoensso/timbre/5.1.1/timbre-5.1.1.jar!/taoensso/timbre/appenders/core.cljc",1689292470000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/impl/errors.clj",1689258845000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/java/io.clj",1689292450000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer.cljc",1689298966000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/reader_types.clj",1689298966000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/passes.cljc",1689298966000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/compiler.cljc",1689298966000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/util.cljc",1689298966000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/externs.clj",1689298966000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/walk.clj",1689292450000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/source_map/base64.clj",1689298966000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/impl.cljc",1689298966000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/edn.clj",1689292450000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/edn.clj",1689258845000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/set.clj",1689292450000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/string.clj",1689292450000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/impl/namespaces.cljc",1689298966000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/core.cljc",1689298966000,"jar:file:/Users/alejandroherrera/.m2/repository/io/aviso/pretty/0.1.37/pretty-0.1.37.jar!/io/aviso/ansi.clj",1689258836000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/tagged_literals.cljc",1689298966000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/instant.clj",1689298966000,"jar:file:/Users/alejandroherrera/.m2/repository/com/taoensso/truss/1.6.0/truss-1.6.0.jar!/taoensso/truss.clj",1689258840000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/source_map/base64_vlq.clj",1689298966000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/source_map.clj",1689298966000,"jar:file:/Users/alejandroherrera/.m2/repository/io/aviso/pretty/0.1.37/pretty-0.1.37.jar!/io/aviso/columns.clj",1689258836000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/reader_types.clj",1689258845000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/js_deps.cljc",1689298966000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/env.cljc",1689298966000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/cljs/tools/reader/reader_types.clj",1689258845000,"jar:file:/Users/alejandroherrera/.m2/repository/com/taoensso/encore/3.10.1/encore-3.10.1.jar!/taoensso/encore.cljc",1689292466000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","Peter Taoussanis (@ptaoussanis)","^7","Simple, flexible logging for Clojure/Script. No XML.","^8","taoensso/timbre.cljc","^9",1,"^:",5,"^;",1,"^<",20],"^=",["^ ","^>","^?","^@","^A","^B","^C","^D","^E"],"^F",["^ ","^G","^H","^I","^H"],"^J",["^K",[]],"^L",["^ ","^M",["^ ","^N",["^O",[[]]],"^9",828,"^:",1,"^8","taoensso/timbre.cljc","^P","^Q","^R","^S","^T",true],"^U",["^ ","^N",["^O",[["^V","~$&","^W"]]],"^9",776,"^:",1,"^8","taoensso/timbre.cljc","^P","^X","^R","^S","^T",true],"^Y",["^ ","^N",["^O",[["^Z","~$&","^["]]],"^9",745,"^:",1,"^8","taoensso/timbre.cljc","^P","^10","^R","^S","^T",true],"^11",["^ ","^N",["^O",[["^Z","~$&","^["]]],"^9",756,"^:",1,"^8","taoensso/timbre.cljc","^P","^12","^R","^S","^T",true],"^13",["^ ","^N",["^O",[["~$&","^["]]],"^9",763,"^:",1,"^8","taoensso/timbre.cljc","^P","^14","^R","^S","^T",true],"^15",["^ ","^N",["^O",[["~$&","^["]]],"^9",762,"^:",1,"^8","taoensso/timbre.cljc","^P","^16","^R","^S","^T",true],"^17",["^ ","^N",["^O",[["^18","~$&","^W"]]],"^7","Like `with-context`, but merges given context into current context.","^9",458,"^:",1,"^8","taoensso/timbre.cljc","^P","^19","^R","^S","^T",true],"^1:",["^ ","^N",["^O",[["~$&","^["]]],"^9",760,"^:",1,"^8","taoensso/timbre.cljc","^P","^1;","^R","^S","^T",true],"^1<",["^ ","^N",["^O",[["^Z","^1=","^[","~$&",["^1>"]]]],"^7","Core low-level log macro. Useful for tooling, etc.\n\n    * `level`    - must eval to a valid logging level\n    * `msg-type` - must eval to e/o #{:p :f nil}\n    * `opts`     - ks e/o #{:config :?err :?ns-str :?file :?line :?base-data :spying?}\n\n  Supports compile-time elision when compile-time const vals\n  provided for `level` and/or `?ns-str`.","^9",679,"^:",1,"^8","taoensso/timbre.cljc","^P","^1?","^R","^S","^T",true],"^1@",["^ ","^N",["^O",[["~$&","^["]]],"^9",752,"^:",1,"^8","taoensso/timbre.cljc","^P","^1A","^R","^S","^T",true],"^1B",["^ ","^N",["^O",[["^V","^1C","^Z","^1D","^1E"]]],"^9",809,"^:",1,"^8","taoensso/timbre.cljc","^P","^1F","^R","^S","^T",true],"^1G",["^ ","^N",["^O",[["~$&","^W"]]],"^9",864,"^:",1,"^8","taoensso/timbre.cljc","^P","^1H","^R","^S","^T",true],"^1I",["^ ","^N",["^O",[["^1C","^Z","~$&","^["]]],"^9",755,"^:",1,"^8","taoensso/timbre.cljc","^P","^1J","^R","^S","^T",true],"^1K",["^ ","^N",["^O",[["^1E"],["^Z","^1E"],["^Z","^1D","^1E"],["^1C","^Z","^1D","^1E"]]],"^7","Evaluates named expression and logs its result. Always returns the result.\n  Defaults to :debug logging level and unevaluated expression as name.","^9",820,"^:",1,"^8","taoensso/timbre.cljc","^P","^1L","^R","^S","^T",true],"^1M",["^ ","^N",["^O",[["^1N","~$&","^W"]]],"^7","Handy for sampled logging, etc.","^9",916,"^:",1,"^8","taoensso/timbre.cljc","^P","^1O","^R","^S","^T",true],"^1P",["^ ","^N",["^O",[["~$&","^["]]],"^9",749,"^:",1,"^8","taoensso/timbre.cljc","^P","^1Q","^R","^S","^T",true],"^1R",["^ ","^N",["^O",[["^Z","~$&","^W"]]],"^9",234,"^:",1,"^8","taoensso/timbre.cljc","^P","^1S","^R","^S","^T",true],"^1T",["^ ","^N",["^O",[["~$&","^["]]],"^9",746,"^:",1,"^8","taoensso/timbre.cljc","^P","^1U","^R","^S","^T",true],"^1V",["^ ","^N",["^O",[["^V","~$&","^W"]]],"^9",770,"^:",1,"^8","taoensso/timbre.cljc","^P","^1W","^R","^S","^T",true],"^1X",["^ ","^N",["^O",[["~$&","^["]]],"^9",747,"^:",1,"^8","taoensso/timbre.cljc","^P","^1Y","^R","^S","^T",true],"^1Z",["^ ","^N",["^O",[["^1C","^Z","~$&","^["]]],"^9",744,"^:",1,"^8","taoensso/timbre.cljc","^P","^1[","^R","^S","^T",true],"^20",["^ ","^N",["^O",[["~$&","^["]]],"^9",758,"^:",1,"^8","taoensso/timbre.cljc","^P","^21","^R","^S","^T",true],"^22",["^ ","^N",["^O",[["~$&","^["]]],"^9",757,"^:",1,"^8","taoensso/timbre.cljc","^P","^23","^R","^S","^T",true],"^24",["^ ","^N",["^O",[["^V","~$&","^W"]]],"^9",783,"^:",1,"^8","taoensso/timbre.cljc","^P","^25","^R","^S","^T",true],"^26",["^ ","^N",["^O",[["~$&","^["]]],"^9",759,"^:",1,"^8","taoensso/timbre.cljc","^P","^27","^R","^S","^T",true],"^28",["^ ","^N",["^O",[["~$&","^W"]]],"^9",787,"^:",1,"^8","taoensso/timbre.cljc","^P","^29","^R","^S","^T",true],"^2:",["^ ","^N",["^O",[[],["^Z"],["^Z","^1D"],["^1C","^Z","^1D"]]],"^9",933,"^:",3,"^8","taoensso/timbre.cljc","^P","^2;","^R","^S","^T",true],"^2<",["^ ","^N",["^O",[["~$&","^["]]],"^9",751,"^:",1,"^8","taoensso/timbre.cljc","^P","^2=","^R","^S","^T",true],"^2>",["^ ","^N",["^O",[["~$&","^W"]]],"^9",786,"^:",1,"^8","taoensso/timbre.cljc","^P","^2?","^R","^S","^T",true],"^2@",["^ ","^N",["^O",[["^1C","~$&","^W"]]],"^9",931,"^:",3,"^8","taoensso/timbre.cljc","^P","^2A","^R","^S","^T",true],"^2B",["^ ","^N",["^O",[["^1C","~$&","^W"]]],"^9",224,"^:",1,"^8","taoensso/timbre.cljc","^P","^2C","^R","^S","^T",true],"^2D",["^ ","^N",["^O",[["^18","~$&","^W"]]],"^7","Executes body so that given arbitrary data will be passed (as `:context`)\n  to appenders for any enclosed logging calls.\n\n  (with-context\n    {:user-name \"Stu\"} ; Will be incl. in data dispatched to appenders\n    (info \"User request\"))\n\n  See also `with-context+`.","^9",446,"^:",1,"^8","taoensso/timbre.cljc","^P","^2E","^R","^S","^T",true],"^2F",["^ ","^N",["^O",[["~$&","^W"]]],"^9",785,"^:",1,"^8","taoensso/timbre.cljc","^P","^2G","^R","^S","^T",true],"^2H",["^ ","^N",["^O",[["~$&","^["]]],"^9",761,"^:",1,"^8","taoensso/timbre.cljc","^P","^2I","^R","^S","^T",true],"^2J",["^ ","^N",["^O",[["~$&","^["]]],"^9",748,"^:",1,"^8","taoensso/timbre.cljc","^P","^2K","^R","^S","^T",true],"^2L",["^ ","^N",["^O",[["~$&","^["]]],"^9",932,"^:",3,"^8","taoensso/timbre.cljc","^P","^2M","^R","^S","^T",true],"^2N",["^ ","^N",["^O",[["^1C","~$&","^W"]]],"^9",223,"^:",1,"^8","taoensso/timbre.cljc","^P","^2O","^R","^S","^T",true],"^2P",["^ ","^N",["^O",[["~$&","^["]]],"^9",750,"^:",1,"^8","taoensso/timbre.cljc","^P","^2Q","^R","^S","^T",true],"^2R",["^ ","^N",["^O",[["^Z","~$&","^W"]]],"^9",930,"^:",3,"^8","taoensso/timbre.cljc","^P","^2S","^R","^S","^T",true]],"^P","^S","^2T",["^ "],"^2V",null,"^2W",["^ ","^2X","^2X","^2Y","^2Y","^2Z","^2Z","^2[","^2[","^30","^H","^31","^2Y","^32","^33","^33","^33","^H","^H","^34","^2Z"],"^35",["^K",["^36","^37"]],"~:shadow/js-access-global",["^K",["window","Date","Error"]],"^38",null,"~:defs",["^ ","~$get-rate-limiter",["^ ","^5",["^ ","^8","taoensso/timbre.cljc","^9",438,"^:",20,"^;",438,"^<",36,"~:private",true],"^:8",true,"^P","^4L","^8","taoensso/timbre.cljc","^<",36,"^:",1,"^9",438,"^;",438,"~:tag","~$function"],"~$logging-enabled?",["^ ","~:protocol-inline",null,"^5",["^ ","^8","taoensso/timbre.cljc","^9",928,"^:",9,"^;",928,"^<",25,"^N",["^O",["~$quote",["^O",[["^Z","~$compile-time-ns"]]]]]],"^P","^4C","^8","taoensso/timbre.cljc","^<",25,"~:method-params",["^O",[["^Z","^:>"]]],"~:protocol-impl",null,"~:arglists-meta",["^O",[null,null]],"^:",3,"~:variadic?",false,"^9",928,"~:ret-tag","~$any","^;",928,"~:max-fixed-arity",2,"~:fn-var",true,"^N",["^O",["^:=",["^O",[["^Z","^:>"]]]]]],"~$valid-level",["^ ","^:<",null,"^5",["^ ","^8","taoensso/timbre.cljc","^9",257,"^:",10,"^;",257,"^<",21,"^:8",true,"^N",["^O",["^:=",["^O",[["~$x"]]]]]],"^:8",true,"^P","^4J","^8","taoensso/timbre.cljc","^<",21,"^:?",["^O",[["~$x"]]],"^:@",null,"^:A",["^O",[null,null]],"^:",3,"^:B",false,"^9",257,"^;",257,"^:E",1,"^:F",true,"^N",["^O",["^:=",["^O",[["~$x"]]]]]],"~$merge-config!",["^ ","^:<",null,"^5",["^ ","^8","taoensso/timbre.cljc","^9",228,"^:",9,"^;",228,"^<",22,"^N",["^O",["^:=",["^O",[["~$m"]]]]]],"^P","^5L","^8","taoensso/timbre.cljc","^<",22,"^:?",["^O",[["~$m"]]],"^:@",null,"^:A",["^O",[null,null]],"^:",1,"^:B",false,"^9",228,"^:C","^:D","^;",228,"^:E",1,"^:F",true,"^N",["^O",["^:=",["^O",[["~$m"]]]]]],"~$log?",["^ ","^P","^5R","^8","taoensso/timbre.cljc","^9",926,"^:",3,"^;",926,"^<",12,"^5",["^ ","^8","taoensso/timbre.cljc","^9",926,"^:",8,"^;",926,"^<",12]],"~$str-join",["^ ","^:<",null,"^5",["^ ","^8","taoensso/timbre.cljc","^9",417,"^:",8,"^;",417,"^<",16,"^:8",true,"^N",["^O",["^:=",["^O",[["~$xs"]]]]]],"^:8",true,"^P","^3Z","^8","taoensso/timbre.cljc","^<",16,"^:?",["^O",[["^:K"]]],"^:@",null,"^:A",["^O",[null,null]],"^:",1,"^:B",false,"^9",417,"^:C",["^K",["^:D","~$string"]],"^;",417,"^:E",1,"^:F",true,"^N",["^O",["^:=",["^O",[["^:K"]]]]]],"~$legacy-ns-filter",["^ ","^:<",null,"^5",["^ ","^8","taoensso/timbre.cljc","^9",321,"^:",10,"^;",321,"^<",26,"^:8",true,"^N",["^O",["^:=",["^O",[["~$ns-whitelist","~$ns-blacklist"]]]]]],"^:8",true,"^P","^4X","^8","taoensso/timbre.cljc","^<",26,"^:?",["^O",[["^:N","^:O"]]],"^:@",null,"^:A",["^O",[null,null]],"^:",3,"^:B",false,"^9",321,"^:C",["^K",["~$cljs.core/IMap","~$clj-nil"]],"^;",321,"^:E",2,"^:F",true,"^N",["^O",["^:=",["^O",[["^:N","^:O"]]]]]],"~$*config*",["^ ","^5",["^ ","^8","taoensso/timbre.cljc","^9",109,"^:",24,"^;",109,"^<",32,"~:dynamic",true,"^7","This map controls all Timbre behaviour including:\n    - When to log (via level and namespace filtering)\n    - How  to log (which appenders to use)\n    - What to log (config to control how data sent to appenders\n                   will be formatted to output string)\n\n  See `default-config` for default value (and example config).\n\n  Modify this config with `binding`, `alter-var-root`, or with utils:\n       `set-level!`,         `with-level`,\n      `set-config!`,        `with-config`,\n    `merge-config!`, `with-merged-config`.\n\n  MAIN OPTIONS\n\n    :min-level\n      Logging will occur only if a logging call's level is >= this\n      min-level. Possible values, in order:\n\n        :trace  = level 0\n        :debug  = level 1 ; Default min-level\n        :info   = level 2\n        :warn   = level 3\n        :error  = level 4 ; Error type\n        :fatal  = level 5 ; Error type\n        :report = level 6 ; High general-purpose (non-error) type\n\n      It's also possible to set the min-level based on the namespace\n      by providing a vector that maps `ns-pattern`s to min-levels, e.g.:\n      `[[#{\"taoensso.*\"} :error] ... [{\"*\"} :debug]]`.\n\n      Example `ns-pattern`s:\n        #{}, \"*\", \"foo.bar\", \"foo.bar.*\", #{\"foo\" \"bar.*\"},\n        {:allow #{\"foo\" \"bar.*\"} :deny #{\"foo.*.bar.*\"}}.\n\n    :ns-filter\n      Logging will occur only if a logging call's namespace is permitted\n      by this ns-filter. Possible values:\n\n        - Arbitrary (fn may-log-ns? [ns]) predicate fn.\n        - An `ns-pattern` (see :min-level docs above).\n\n      Useful for turning off logging in noisy libraries, etc.\n\n    :middleware\n      Vector of simple (fn [appender-data]) -> ?new-data fns (applied left->right)\n      that transform the data map dispatched to appender fns. If any middleware\n      returns nil, NO dispatch will occur (i.e. the event will be filtered).\n\n      Useful for layering advanced functionality. Similar to Ring middleware.\n\n    :timestamp-opts ; Config map, see `default-timestamp-opts`\n    :output-fn      ; (fn [appender-data]) -> string, see `default-output-fn`\n\n    :appenders ; {<appender-id> <appender-map>}\n\n      Where each appender-map has keys:\n        :enabled?        ; Must be truthy to log\n        :min-level       ; Optional *additional* appender-specific min-level\n        :ns-filter       ; Optional *additional* appender-specific ns-filter\n\n        :async?          ; Dispatch using agent? Useful for slow appenders (clj only)\n        :rate-limit      ; [[<ncalls-limit> <window-msecs>] ...], or nil\n                         ; Appender will noop after exceeding given maximum number\n                         ; of calls within given rolling window/s.\n                         ; e.g. [[100 (encore/ms :mins 1)] [1000 (encore/ms :hours 1)]]\n                         ; will limit noop after:\n                         ;   - >100  calls in 1 rolling minute, or\n                         ;   - >1000 calls in 1 rolling hour\n\n        :output-fn       ; Optional override for inherited (fn [appender-data]) -> string\n        :timestamp-opts  ; Optional override for inherited config map\n        :fn              ; (fn [appender-data]) -> side-effects, with keys described below\n\n  APPENDER DATA\n    An appender's fn takes a single data map with keys:\n      :config          ; Entire active config map\n      :appender-id     ; Id of appender currently dispatching\n      :appender        ; Entire map of appender currently dispatching\n      :instant         ; Platform date (java.util.Date or js/Date)\n      :level           ; Call's level keyword (e.g. :info) (>= active min-level)\n      :error-level?    ; Is level e/o #{:error :fatal}?\n      :?ns-str         ; String,  or nil\n      :?file           ; String,  or nil\n      :?line           ; Integer, or nil ; Waiting on CLJ-865\n      :?err            ; First-arg platform error, or nil\n      :?meta           ; First-arg map when it has ^:meta metadata, used as a\n                         way of passing advanced per-call options to appenders\n      :vargs           ; Vector of raw args provided to logging call\n      :output_         ; Forceable - final formatted output string created\n                       ; by calling (output-fn <this-data-map>)\n      :msg_            ; Forceable - args as a string\n      :timestamp_      ; Forceable - string\n      :hostname_       ; Forceable - string (clj only)\n      :output-fn       ; (fn [data]) -> formatted output string\n                       ; (see `default-output-fn` for details)\n      :context         ; `*context*` value at log time (see `with-context`)\n      :spying?         ; Is call occuring via the `spy` macro?\n\n      **NB** - any keys not specifically documented here should be\n      considered private / subject to change without notice.\n\n  COMPILE-TIME LEVEL/NS ELISION\n    To control :min-level and :ns-filter at compile-time, use:\n\n      - `taoensso.timbre.min-level.edn`  JVM property (read as edn)\n      - `taoensso.timbre.ns-pattern.edn` JVM property (read as edn)\n\n      - `TAOENSSO_TIMBRE_MIN_LEVEL_EDN`  env var      (read as edn)\n      - `TAOENSSO_TIMBRE_NS_PATTERN_EDN` env var      (read as edn)"],"^P","^4U","^8","taoensso/timbre.cljc","^<",32,"^:",1,"^:S",true,"^9",109,"^;",109,"^:9","^:D","^7","This map controls all Timbre behaviour including:\n    - When to log (via level and namespace filtering)\n    - How  to log (which appenders to use)\n    - What to log (config to control how data sent to appenders\n                   will be formatted to output string)\n\n  See `default-config` for default value (and example config).\n\n  Modify this config with `binding`, `alter-var-root`, or with utils:\n       `set-level!`,         `with-level`,\n      `set-config!`,        `with-config`,\n    `merge-config!`, `with-merged-config`.\n\n  MAIN OPTIONS\n\n    :min-level\n      Logging will occur only if a logging call's level is >= this\n      min-level. Possible values, in order:\n\n        :trace  = level 0\n        :debug  = level 1 ; Default min-level\n        :info   = level 2\n        :warn   = level 3\n        :error  = level 4 ; Error type\n        :fatal  = level 5 ; Error type\n        :report = level 6 ; High general-purpose (non-error) type\n\n      It's also possible to set the min-level based on the namespace\n      by providing a vector that maps `ns-pattern`s to min-levels, e.g.:\n      `[[#{\"taoensso.*\"} :error] ... [{\"*\"} :debug]]`.\n\n      Example `ns-pattern`s:\n        #{}, \"*\", \"foo.bar\", \"foo.bar.*\", #{\"foo\" \"bar.*\"},\n        {:allow #{\"foo\" \"bar.*\"} :deny #{\"foo.*.bar.*\"}}.\n\n    :ns-filter\n      Logging will occur only if a logging call's namespace is permitted\n      by this ns-filter. Possible values:\n\n        - Arbitrary (fn may-log-ns? [ns]) predicate fn.\n        - An `ns-pattern` (see :min-level docs above).\n\n      Useful for turning off logging in noisy libraries, etc.\n\n    :middleware\n      Vector of simple (fn [appender-data]) -> ?new-data fns (applied left->right)\n      that transform the data map dispatched to appender fns. If any middleware\n      returns nil, NO dispatch will occur (i.e. the event will be filtered).\n\n      Useful for layering advanced functionality. Similar to Ring middleware.\n\n    :timestamp-opts ; Config map, see `default-timestamp-opts`\n    :output-fn      ; (fn [appender-data]) -> string, see `default-output-fn`\n\n    :appenders ; {<appender-id> <appender-map>}\n\n      Where each appender-map has keys:\n        :enabled?        ; Must be truthy to log\n        :min-level       ; Optional *additional* appender-specific min-level\n        :ns-filter       ; Optional *additional* appender-specific ns-filter\n\n        :async?          ; Dispatch using agent? Useful for slow appenders (clj only)\n        :rate-limit      ; [[<ncalls-limit> <window-msecs>] ...], or nil\n                         ; Appender will noop after exceeding given maximum number\n                         ; of calls within given rolling window/s.\n                         ; e.g. [[100 (encore/ms :mins 1)] [1000 (encore/ms :hours 1)]]\n                         ; will limit noop after:\n                         ;   - >100  calls in 1 rolling minute, or\n                         ;   - >1000 calls in 1 rolling hour\n\n        :output-fn       ; Optional override for inherited (fn [appender-data]) -> string\n        :timestamp-opts  ; Optional override for inherited config map\n        :fn              ; (fn [appender-data]) -> side-effects, with keys described below\n\n  APPENDER DATA\n    An appender's fn takes a single data map with keys:\n      :config          ; Entire active config map\n      :appender-id     ; Id of appender currently dispatching\n      :appender        ; Entire map of appender currently dispatching\n      :instant         ; Platform date (java.util.Date or js/Date)\n      :level           ; Call's level keyword (e.g. :info) (>= active min-level)\n      :error-level?    ; Is level e/o #{:error :fatal}?\n      :?ns-str         ; String,  or nil\n      :?file           ; String,  or nil\n      :?line           ; Integer, or nil ; Waiting on CLJ-865\n      :?err            ; First-arg platform error, or nil\n      :?meta           ; First-arg map when it has ^:meta metadata, used as a\n                         way of passing advanced per-call options to appenders\n      :vargs           ; Vector of raw args provided to logging call\n      :output_         ; Forceable - final formatted output string created\n                       ; by calling (output-fn <this-data-map>)\n      :msg_            ; Forceable - args as a string\n      :timestamp_      ; Forceable - string\n      :hostname_       ; Forceable - string (clj only)\n      :output-fn       ; (fn [data]) -> formatted output string\n                       ; (see `default-output-fn` for details)\n      :context         ; `*context*` value at log time (see `with-context`)\n      :spying?         ; Is call occuring via the `spy` macro?\n\n      **NB** - any keys not specifically documented here should be\n      considered private / subject to change without notice.\n\n  COMPILE-TIME LEVEL/NS ELISION\n    To control :min-level and :ns-filter at compile-time, use:\n\n      - `taoensso.timbre.min-level.edn`  JVM property (read as edn)\n      - `taoensso.timbre.ns-pattern.edn` JVM property (read as edn)\n\n      - `TAOENSSO_TIMBRE_MIN_LEVEL_EDN`  env var      (read as edn)\n      - `TAOENSSO_TIMBRE_NS_PATTERN_EDN` env var      (read as edn)"],"~$*context*",["^ ","^5",["^ ","^8","taoensso/timbre.cljc","^9",445,"^:",16,"^;",445,"^<",25,"^:S",true],"^P","^4Q","^8","taoensso/timbre.cljc","^<",25,"^:",1,"^:S",true,"^9",445,"^;",445,"^:9","^:D","^7","General-purpose dynamic logging context"],"~$valid-level?",["^ ","^:<",null,"^5",["^ ","^8","taoensso/timbre.cljc","^9",256,"^:",10,"^;",256,"^<",22,"^:8",true,"^N",["^O",["^:=",["^O",[["~$x"]]]]]],"^:8",true,"^P","^3Q","^8","taoensso/timbre.cljc","^<",22,"^:?",["^O",[["~$x"]]],"^:@",null,"^:A",["^O",[null,null]],"^:",3,"^:B",false,"^9",256,"^:C","~$boolean","^;",256,"^:E",1,"^:F",true,"^N",["^O",["^:=",["^O",[["~$x"]]]]]],"~$-log!",["^ ","^:<",null,"^5",["^ ","^8","taoensso/timbre.cljc","^9",526,"^:",7,"^;",526,"^<",12,"^N",["^O",["^:=",["^O",[["^1C","^Z","~$?ns-str","~$?file","^V","^1=","~$?err","~$vargs_","~$?base-data"],["^1C","^Z","^:X","^:Y","^V","^1=","^:Z","^:[","^;0","~$callsite-id"],["^1C","^Z","^:X","^:Y","^V","^1=","^:Z","^:[","^;0","^;1","~$spying?"]]]]],"^7","Core low-level log fn. Implementation detail!","~:top-fn",["^ ","^:B",false,"~:fixed-arity",11,"^:E",11,"^:?",[["^1C","^Z","^:X","^:Y","^V","^1=","^:Z","^:[","^;0"],["^1C","^Z","^:X","^:Y","^V","^1=","^:Z","^:[","^;0","^;1"],["^1C","^Z","^:X","^:Y","^V","^1=","^:Z","^:[","^;0","^;1","^;2"]],"^N",["^O",[["^1C","^Z","^:X","^:Y","^V","^1=","^:Z","^:[","^;0"],["^1C","^Z","^:X","^:Y","^V","^1=","^:Z","^:[","^;0","^;1"],["^1C","^Z","^:X","^:Y","^V","^1=","^:Z","^:[","^;0","^;1","^;2"]]],"^:A",["^O",[null,null,null]]]],"^P","^49","^8","taoensso/timbre.cljc","^<",12,"^;3",["^ ","^:B",false,"^;4",11,"^:E",11,"^:?",[["^1C","^Z","^:X","^:Y","^V","^1=","^:Z","^:[","^;0"],["^1C","^Z","^:X","^:Y","^V","^1=","^:Z","^:[","^;0","^;1"],["^1C","^Z","^:X","^:Y","^V","^1=","^:Z","^:[","^;0","^;1","^;2"]],"^N",["^O",[["^1C","^Z","^:X","^:Y","^V","^1=","^:Z","^:[","^;0"],["^1C","^Z","^:X","^:Y","^V","^1=","^:Z","^:[","^;0","^;1"],["^1C","^Z","^:X","^:Y","^V","^1=","^:Z","^:[","^;0","^;1","^;2"]]],"^:A",["^O",[null,null,null]]],"^:?",[["^1C","^Z","^:X","^:Y","^V","^1=","^:Z","^:[","^;0"],["^1C","^Z","^:X","^:Y","^V","^1=","^:Z","^:[","^;0","^;1"],["^1C","^Z","^:X","^:Y","^V","^1=","^:Z","^:[","^;0","^;1","^;2"]],"^:@",null,"^;4",11,"^:A",["^O",[null,null,null]],"^:",1,"^:B",false,"~:methods",[["^ ","^;4",9,"^:B",false,"^:9","^:D"],["^ ","^;4",10,"^:B",false,"^:9","^:D"],["^ ","^;4",11,"^:B",false,"^:9","^:Q"]],"^9",526,"^;",526,"^:E",11,"^:F",true,"^N",["^O",[["^1C","^Z","^:X","^:Y","^V","^1=","^:Z","^:[","^;0"],["^1C","^Z","^:X","^:Y","^V","^1=","^:Z","^:[","^;0","^;1"],["^1C","^Z","^:X","^:Y","^V","^1=","^:Z","^:[","^;0","^;1","^;2"]]],"^7","Core low-level log fn. Implementation detail!"],"~$may-log-ns?",["^ ","^:<",null,"^5",["^ ","^:8",true,"^8","taoensso/timbre.cljc","^<",56,"^:",45,"^9",281,"^;",281,"^:9","^:V","^N",["^O",["^:=",["^O",[["~$ns-filter","^3;"]]]]],"^7","Implementation detail."],"^:8",true,"^P","^40","^8","taoensso/timbre.cljc","^<",56,"^:?",["^O",[["^;7","^3;"]]],"^:@",null,"^:A",["^O",[null,null]],"^:",3,"^:B",false,"^9",281,"^:C","^:V","^;",281,"^:E",2,"^:9","^:V","^:F",true,"^N",["^O",["^:=",["^O",[["^;7","^3;"]]]]],"^7","Implementation detail."],"~$default-config",["^ ","^5",["^ ","^8","taoensso/timbre.cljc","^9",62,"^:",6,"^;",62,"^<",20],"^P","^3[","^8","taoensso/timbre.cljc","^<",20,"^:",1,"^9",62,"^;",62,"^:9","^:P","^7","Default/example Timbre `*config*` value:\n\n    {:min-level :debug #_[[\"taoensso.*\" :error] [\"*\" :debug]]\n     :ns-filter #{\"*\"} #_{:deny #{\"taoensso.*\"} :allow #{\"*\"}}\n\n     :middleware [] ; (fns [appender-data]) -> ?data, applied left->right\n\n     :timestamp-opts default-timestamp-opts ; {:pattern _ :locale _ :timezone _}\n     :output-fn      default-output-fn ; (fn [appender-data]) -> string\n\n     :appenders\n     #?(:clj\n        {:println (println-appender {:stream :auto})\n         ;; :spit (spit-appender    {:fname \"./timbre-spit.log\"})\n         }\n\n        :cljs\n        (if (exists? js/window)\n          {:console (console-appender {})}\n          {:println (println-appender {})}))}\n\n    See `*config*` for more info."],"~$fline",["^ ","^:<",null,"^5",["^ ","^8","taoensso/timbre.cljc","^9",677,"^:",8,"^;",677,"^<",13,"^:8",true,"^N",["^O",["^:=",["^O",[["~$and-form"]]]]]],"^:8",true,"^P","^3X","^8","taoensso/timbre.cljc","^<",13,"^:?",["^O",[["^;:"]]],"^:@",null,"^:A",["^O",[null,null]],"^:",1,"^:B",false,"^9",677,"^:C","^:D","^;",677,"^:E",1,"^:F",true,"^N",["^O",["^:=",["^O",[["^;:"]]]]]],"~$console-appender",["^ ","^P","^52","^8","taoensso/timbre.cljc","^9",60,"^:",10,"^;",60,"^<",31,"^5",["^ ","^8","taoensso/timbre.cljc","^9",60,"^:",15,"^;",60,"^<",31]],"~$default-timestamp-opts",["^ ","^5",["^ ","^8","taoensso/timbre.cljc","^9",28,"^:",6,"^;",28,"^<",28],"^P","^5B","^8","taoensso/timbre.cljc","^<",28,"^:",1,"^9",28,"^;",28,"^:9","^:P","^7","Controls (:timestamp_ data)"],"~$parse-vargs",["^ ","^:<",null,"^5",["^ ","^8","taoensso/timbre.cljc","^9",466,"^:",8,"^;",466,"^<",19,"^:8",true,"^N",["^O",["^:=",["^O",[["^:Z","^1=","~$vargs"]]]]],"^7","vargs -> [?err ?meta ?msg-fmt api-vargs]"],"^:8",true,"^P","^47","^8","taoensso/timbre.cljc","^<",19,"^:?",["^O",[["^:Z","^1=","^;>"]]],"^:@",null,"^:A",["^O",[null,null]],"^:",1,"^:B",false,"^9",466,"^:C","~$cljs.core/IVector","^;",466,"^:E",3,"^:F",true,"^N",["^O",["^:=",["^O",[["^:Z","^1=","^;>"]]]]],"^7","vargs -> [?err ?meta ?msg-fmt api-vargs]"],"~$default-err",["^ ","^P","^4H","^8","taoensso/timbre.cljc","^9",56,"^:",1,"^;",56,"^<",21,"~:declared",true,"^5",["^ ","^8","taoensso/timbre.cljc","^9",56,"^:",10,"^;",56,"^<",21,"^;A",true]],"~$example-config",["^ ","^5",["^ ","^8","taoensso/timbre.cljc","^9",927,"^:",8,"^;",927,"^<",22],"^P","^5@","^8","taoensso/timbre.cljc","^<",22,"^:",3,"^9",927,"^;",927,"^:9","^:P","^7","DEPRECATED, prefer `default-config`"],"~$may-log?",["^ ","^:<",null,"^5",["^ ","^8","taoensso/timbre.cljc","^<",50,"^;3",["^ ","^:B",false,"^;4",4,"^:E",4,"^:?",[["^Z"],["^Z","^:X"],["^Z","^:X","~$?config"],["~$default-min-level","^Z","^:X","^;D"]],"^N",["^O",[["^Z"],["^Z","^:X"],["^Z","^:X","^;D"],["^;E","^Z","^:X","^;D"]]],"^:A",["^O",[null,null,null,null]]],"^:",42,"^9",334,"^;",334,"^N",["^O",["^:=",["^O",[["^Z"],["^Z","^:X"],["^Z","^:X","^;D"],["^;E","^Z","^:X","^;D"]]]]],"^7","Implementation detail.\n    Returns true iff level and ns are runtime unfiltered.","~:boolean",true],"^P","^4F","^8","taoensso/timbre.cljc","^<",50,"^;3",["^ ","^:B",false,"^;4",4,"^:E",4,"^:?",[["^Z"],["^Z","^:X"],["^Z","^:X","^;D"],["^;E","^Z","^:X","^;D"]],"^N",["^O",[["^Z"],["^Z","^:X"],["^Z","^:X","^;D"],["^;E","^Z","^:X","^;D"]]],"^:A",["^O",[null,null,null,null]]],"^:?",[["^Z"],["^Z","^:X"],["^Z","^:X","^;D"],["^;E","^Z","^:X","^;D"]],"^:@",null,"^;4",4,"^:A",["^O",[null,null,null,null]],"^:",3,"^:B",false,"^;5",[["^ ","^;4",1,"^:B",false,"^:9","^:D"],["^ ","^;4",2,"^:B",false,"^:9","^:D"],["^ ","^;4",3,"^:B",false,"^:9","^:D"],["^ ","^;4",4,"^:B",false,"^:9","^:V"]],"^9",334,"^;",334,"^:E",4,"^:F",true,"^N",["^O",[["^Z"],["^Z","^:X"],["^Z","^:X","^;D"],["^;E","^Z","^:X","^;D"]]],"^7","Implementation detail.\n    Returns true iff level and ns are runtime unfiltered.","^;F",true],"~$level>=",["^ ","^:<",null,"^5",["^ ","^8","taoensso/timbre.cljc","^9",261,"^:",41,"^;",261,"^<",48,"^;F",true,"^N",["^O",["^:=",["^O",[["~$x","~$y"]]]]],"^7","Implementation detail."],"^P","^59","^8","taoensso/timbre.cljc","^<",48,"^:?",["^O",[["~$x","~$y"]]],"^:@",null,"^:A",["^O",[null,null]],"^:",3,"^:B",false,"^9",261,"^:C","^:V","^;",261,"^:E",2,"^:F",true,"^N",["^O",["^:=",["^O",[["~$x","~$y"]]]]],"^7","Implementation detail.","^;F",true],"~$set-config!",["^ ","^:<",null,"^5",["^ ","^8","taoensso/timbre.cljc","^9",227,"^:",11,"^;",227,"^<",22,"^N",["^O",["^:=",["^O",[["~$m"]]]]]],"^P","^4A","^8","taoensso/timbre.cljc","^<",22,"^:?",["^O",[["~$m"]]],"^:@",null,"^:A",["^O",[null,null]],"^:",1,"^:B",false,"^9",227,"^:C","^:D","^;",227,"^:E",1,"^:F",true,"^N",["^O",["^:=",["^O",[["~$m"]]]]]],"~$get-timestamp",["^ ","^:<",null,"^5",["^ ","^8","taoensso/timbre.cljc","^9",507,"^:",8,"^;",507,"^<",21,"^:8",true,"^N",["^O",["^:=",["^O",[["~$timestamp-opts","~$instant"]]]]]],"^:8",true,"^P","^5C","^8","taoensso/timbre.cljc","^<",21,"^:?",["^O",[["^;J","^;K"]]],"^:@",null,"^:A",["^O",[null,null]],"^:",1,"^:B",false,"^9",507,"^:C","~$js","^;",507,"^:E",2,"^:F",true,"^N",["^O",["^:=",["^O",[["^;J","^;K"]]]]]],"~$swap-config!",["^ ","^:<",null,"^5",["^ ","^8","taoensso/timbre.cljc","^9",229,"^:",10,"^;",229,"^<",22,"^N",["^O",["^:=",["^O",[["~$f","~$&","^["]]]]],"^;3",["^ ","^:B",true,"^;4",1,"^:E",1,"^:?",[["^O",["~$f","^["]]],"^N",["^O",[["~$f","~$&","^["]]],"^:A",["^O",[null]]]],"^P","^4[","^8","taoensso/timbre.cljc","^<",22,"^;3",["^ ","^:B",true,"^;4",1,"^:E",1,"^:?",[["^O",["~$f","^["]]],"^N",["^O",[["~$f","~$&","^["]]],"^:A",["^O",[null]]],"^:?",[["^O",["~$f","^["]]],"^:@",null,"^;4",1,"^:A",["^O",[null]],"^:",1,"^:B",true,"^;5",[["^ ","^;4",1,"^:B",true]],"^9",229,"^:C","^:D","^;",229,"^:E",1,"^:F",true,"^N",["^O",[["~$f","~$&","^["]]]],"~$console-?appender",["^ ","^P","^4V","^8","taoensso/timbre.cljc","^9",924,"^:",12,"^;",924,"^<",34,"^5",["^ ","^8","taoensso/timbre.cljc","^9",924,"^:",17,"^;",924,"^<",34]],"~$str-println",["^ ","^:<",null,"^5",["^ ","^8","taoensso/timbre.cljc","^9",929,"^:",9,"^;",929,"^<",20,"^N",["^O",["^:=",["^O",[["~$&","^:K"]]]]],"^;3",["^ ","^:B",true,"^;4",0,"^:E",0,"^:?",[["^O",["^:K"]]],"^N",["^O",[["~$&","^:K"]]],"^:A",["^O",[null]]]],"^P","^4K","^8","taoensso/timbre.cljc","^<",20,"^;3",["^ ","^:B",true,"^;4",0,"^:E",0,"^:?",[["^O",["^:K"]]],"^N",["^O",[["~$&","^:K"]]],"^:A",["^O",[null]]],"^:?",[["^O",["^:K"]]],"^:@",null,"^;4",0,"^:A",["^O",[null]],"^:",3,"^:B",true,"^;5",[["^ ","^;4",0,"^:B",true,"^:9",["^K",["^:D","^:L"]]]],"^9",929,"^:C","^:D","^;",929,"^:E",0,"^:F",true,"^N",["^O",[["~$&","^:K"]]]],"~$set-level!",["^ ","^:<",null,"^5",["^ ","^8","taoensso/timbre.cljc","^9",233,"^:",12,"^;",233,"^<",22,"^N",["^O",["^:=",["^O",[["^Z"]]]]]],"^P","^5J","^8","taoensso/timbre.cljc","^<",22,"^:?",["^O",[["^Z"]]],"^:@",null,"^:A",["^O",[null,null]],"^:",1,"^:B",false,"^9",233,"^:C","^:D","^;",233,"^:E",1,"^:F",true,"^N",["^O",["^:=",["^O",[["^Z"]]]]]],"~$valid-level->int",["^ ","^:<",null,"^5",["^ ","^8","taoensso/timbre.cljc","^9",258,"^:",10,"^;",258,"^<",26,"^:8",true,"^N",["^O",["^:=",["^O",[["~$x"]]]]]],"^:8",true,"^P","^4S","^8","taoensso/timbre.cljc","^<",26,"^:?",["^O",[["~$x"]]],"^:@",null,"^:A",["^O",[null,null]],"^:",3,"^:B",false,"^9",258,"^:C","^:D","^;",258,"^:E",1,"^:F",true,"^N",["^O",["^:=",["^O",[["~$x"]]]]]],"~$default-output-fn",["^ ","^:<",null,"^5",["^ ","^8","taoensso/timbre.cljc","^9",37,"^:",7,"^;",37,"^<",24,"^N",["^O",["^:=",["^O",[["~$data"],["^1>","^;S"]]]]],"^7","Default (fn [data]) -> string output fn.\n    Use`(partial default-output-fn <opts-map>)` to modify default opts.","^;3",["^ ","^:B",false,"^;4",2,"^:E",2,"^:?",[["^;S"],["^1>","^;S"]],"^N",["^O",[["^;S"],["^1>","^;S"]]],"^:A",["^O",[null,null]]]],"^P","^5U","^8","taoensso/timbre.cljc","^<",24,"^;3",["^ ","^:B",false,"^;4",2,"^:E",2,"^:?",[["^;S"],["^1>","^;S"]],"^N",["^O",[["^;S"],["^1>","^;S"]]],"^:A",["^O",[null,null]]],"^:?",[["^;S"],["^1>","^;S"]],"^:@",null,"^;4",2,"^:A",["^O",[null,null]],"^:",1,"^:B",false,"^;5",[["^ ","^;4",1,"^:B",false,"^:9","^:D"],["^ ","^;4",2,"^:B",false,"^:9","^:L"]],"^9",37,"^;",37,"^:E",2,"^:F",true,"^N",["^O",[["^;S"],["^1>","^;S"]]],"^7","Default (fn [data]) -> string output fn.\n    Use`(partial default-output-fn <opts-map>)` to modify default opts."],"~$default-out",["^ ","^P","^5W","^8","taoensso/timbre.cljc","^9",56,"^:",1,"^;",56,"^<",33,"^;A",true,"^5",["^ ","^8","taoensso/timbre.cljc","^9",56,"^:",22,"^;",56,"^<",33,"^;A",true]],"^2:",["^ ","^:<",null,"^5",["^ ","^8","taoensso/timbre.cljc","^9",933,"^:",13,"^;",933,"^<",20,"^T",true,"^N",["^O",["^:=",["^O",[[],["^Z"],["^Z","^1D"],["^1C","^Z","^1D"]]]]],"^;3",["^ ","^:B",false,"^;4",3,"^:E",3,"^:?",["^O",[[],["^Z"],["^Z","^1D"],["^1C","^Z","^1D"]]],"^N",["^O",[[],["^Z"],["^Z","^1D"],["^1C","^Z","^1D"]]],"^:A",["^O",[null,null,null,null]]]],"^P","^2;","^8","taoensso/timbre.cljc","^<",20,"^;3",["^ ","^:B",false,"^;4",3,"^:E",3,"^:?",["^O",[[],["^Z"],["^Z","^1D"],["^1C","^Z","^1D"]]],"^N",["^O",[[],["^Z"],["^Z","^1D"],["^1C","^Z","^1D"]]],"^:A",["^O",[null,null,null,null]]],"^:?",["^O",[[],["^Z"],["^Z","^1D"],["^1C","^Z","^1D"]]],"^:@",null,"^;4",3,"^:A",["^O",[null,null,null,null]],"^:",3,"^:B",false,"^;5",[["^ ","^;4",2,"^:B",false,"^:9",["^K",["~$seq","~$cljs.core/IList"]]],["^ ","^;4",3,"^:B",false,"^:9",["^K",["^;U","^;V"]]],["^ ","^;4",4,"^:B",false,"^:9",["^K",["^;U","^;V"]]],["^ ","^;4",5,"^:B",false,"^:9",["^K",["^;U","^;V"]]]],"^9",933,"^T",true,"^;",933,"^:E",3,"^:F",false,"^N",["^O",[[],["^Z"],["^Z","^1D"],["^1C","^Z","^1D"]]]],"~$ns->?min-level",["^ ","^5",["^ ","^8","taoensso/timbre.cljc","^9",285,"^:",18,"^;",285,"^<",32,"^:8",true],"^:8",true,"^P","^3U","^8","taoensso/timbre.cljc","^<",32,"^:",3,"^9",285,"^;",285,"^:9","^::","^7","[[<ns-pattern> <min-level>] ... [\"*\" <default-min-level>]], ns -> ?min-level"],"~$println-appender",["^ ","^P","^3V","^8","taoensso/timbre.cljc","^9",59,"^:",10,"^;",59,"^<",31,"^5",["^ ","^8","taoensso/timbre.cljc","^9",59,"^:",15,"^;",59,"^<",31]],"^2@",["^ ","^:<",null,"^5",["^ ","^8","taoensso/timbre.cljc","^9",931,"^:",13,"^;",931,"^<",32,"^T",true,"^N",["^O",["^:=",["^O",[["^1C","~$&","^W"]]]]],"^;3",["^ ","^:B",true,"^;4",1,"^:E",1,"^:?",["^O",[["^O",["^1C","^W"]]]],"^N",["^O",[["^1C","~$&","^W"]]],"^:A",["^O",[null]]]],"^P","^2A","^8","taoensso/timbre.cljc","^<",32,"^;3",["^ ","^:B",true,"^;4",1,"^:E",1,"^:?",["^O",[["^O",["^1C","^W"]]]],"^N",["^O",[["^1C","~$&","^W"]]],"^:A",["^O",[null]]],"^:?",["^O",[["^O",["^1C","^W"]]]],"^:@",null,"^;4",1,"^:A",["^O",[null]],"^:",3,"^:B",true,"^;5",[["^ ","^;4",1,"^:B",true,"^:9",["^K",["^;U","^;V"]]]],"^9",931,"^T",true,"^:C","^:D","^;",931,"^:E",1,"^:F",false,"^N",["^O",[["^1C","~$&","^W"]]]],"~$ordered-levels",["^ ","^P","^3P","^8","taoensso/timbre.cljc","^9",925,"^:",3,"^;",925,"^<",22,"^5",["^ ","^8","taoensso/timbre.cljc","^9",925,"^:",8,"^;",925,"^<",22],"^:9","^;?"],"~$get-hostname",["^ ","^P","^48","^8","taoensso/timbre.cljc","^9",505,"^:",1,"^;",505,"^<",22,"^;A",true,"^5",["^ ","^8","taoensso/timbre.cljc","^9",505,"^:",10,"^;",505,"^<",22,"^;A",true]],"~$stacktrace",["^ ","^:<",null,"^5",["^ ","^8","taoensso/timbre.cljc","^9",896,"^:",7,"^;",896,"^<",17,"^N",["^O",["^:=",["^O",[["~$err"],["^<0","^1>"]]]]],"^;3",["^ ","^:B",false,"^;4",2,"^:E",2,"^:?",[["^<0"],["^<0","^1>"]],"^N",["^O",[["^<0"],["^<0","^1>"]]],"^:A",["^O",[null,null]]]],"^P","^45","^8","taoensso/timbre.cljc","^<",17,"^;3",["^ ","^:B",false,"^;4",2,"^:E",2,"^:?",[["^<0"],["^<0","^1>"]],"^N",["^O",[["^<0"],["^<0","^1>"]]],"^:A",["^O",[null,null]]],"^:?",[["^<0"],["^<0","^1>"]],"^:@",null,"^;4",2,"^:A",["^O",[null,null]],"^:",1,"^:B",false,"^;5",[["^ ","^;4",1,"^:B",false,"^:9","^:D"],["^ ","^;4",2,"^:B",false,"^:9",["^K",["^:D","^:L"]]]],"^9",896,"^;",896,"^:E",2,"^:F",true,"^N",["^O",[["^<0"],["^<0","^1>"]]]],"^2L",["^ ","^:<",null,"^5",["^ ","^8","taoensso/timbre.cljc","^9",932,"^:",13,"^;",932,"^<",17,"^T",true,"^N",["^O",["^:=",["^O",[["~$&","^["]]]]],"^;3",["^ ","^:B",true,"^;4",0,"^:E",0,"^:?",["^O",[["^O",["^["]]]],"^N",["^O",[["~$&","^["]]],"^:A",["^O",[null]]]],"^P","^2M","^8","taoensso/timbre.cljc","^<",17,"^;3",["^ ","^:B",true,"^;4",0,"^:E",0,"^:?",["^O",[["^O",["^["]]]],"^N",["^O",[["~$&","^["]]],"^:A",["^O",[null]]],"^:?",["^O",[["^O",["^["]]]],"^:@",null,"^;4",0,"^:A",["^O",[null]],"^:",3,"^:B",true,"^;5",[["^ ","^;4",0,"^:B",true,"^:9",["^K",["^;U","^;V"]]]],"^9",932,"^T",true,"^:C","^:D","^;",932,"^:E",0,"^:F",false,"^N",["^O",[["~$&","^["]]]],"~$get-min-level",["^ ","^:<",null,"^5",["^ ","^8","taoensso/timbre.cljc","^9",306,"^:",10,"^;",306,"^<",23,"^:8",true,"^N",["^O",["^:=",["^O",[["~$default","~$x","^3;"]]]]]],"^:8",true,"^P","^5H","^8","taoensso/timbre.cljc","^<",23,"^:?",["^O",[["^<2","~$x","^3;"]]],"^:@",null,"^:A",["^O",[null,null]],"^:",3,"^:B",false,"^9",306,"^:C","^:D","^;",306,"^:E",3,"^:F",true,"^N",["^O",["^:=",["^O",[["^<2","~$x","^3;"]]]]]],"^2R",["^ ","^:<",null,"^5",["^ ","^8","taoensso/timbre.cljc","^9",930,"^:",13,"^;",930,"^<",27,"^T",true,"^N",["^O",["^:=",["^O",[["^Z","~$&","^W"]]]]],"^;3",["^ ","^:B",true,"^;4",1,"^:E",1,"^:?",["^O",[["^O",["^Z","^W"]]]],"^N",["^O",[["^Z","~$&","^W"]]],"^:A",["^O",[null]]]],"^P","^2S","^8","taoensso/timbre.cljc","^<",27,"^;3",["^ ","^:B",true,"^;4",1,"^:E",1,"^:?",["^O",[["^O",["^Z","^W"]]]],"^N",["^O",[["^Z","~$&","^W"]]],"^:A",["^O",[null]]],"^:?",["^O",[["^O",["^Z","^W"]]]],"^:@",null,"^;4",1,"^:A",["^O",[null]],"^:",3,"^:B",true,"^;5",[["^ ","^;4",1,"^:B",true,"^:9",["^K",["^;U","^;V"]]]],"^9",930,"^T",true,"^:C","^:D","^;",930,"^:E",1,"^:F",false,"^N",["^O",[["^Z","~$&","^W"]]]]],"^37",["^ ","^H","^H","^30","^H","^S","^S","^39","^S","^2X","^2X"],"~:cljs.analyzer/constants",["^ ","^35",["^K",["~:given","~:ns-whitelist","~:inherit","~:report","~:fn","~:hash","^5","~:hash_","~:ns-blacklist","~:instant","~:rate-limit","~:else","~:spying?","~:config","~:vargs","~:output_","~:msg_","~:middleware-fn","^1S","~:warn","~:timestamp-opts","~:trace","~:println","~:iso8601","~:err","~:?file","~:type","~:debug","~:hostname_","~:error-level?","^4U","~:appender","~:appender-id","~:?ns-str","~:allow","~:enabled?","~:ns-filter","~:middleware","~:fatal","~:level","^2;","~:output-fn","^9","~:?err","~:vargs_","~:info","~:stacktrace-fonts","~:no-stacktrace?","^2O","~:timestamp_","~:context","~:?line","~:min-level","~:f","~:error","~:console","~:?err_","~:?meta","~:deny","~:location","~:auto","^10","~:p","~:?msg-fmt","^1[","^Q","~:async?","~:appenders","~:pattern"]],"~:order",["^=A","^<I","^=2","^=1","^<X","^<Z","^<C","^<R","^<K","^<N","^=3","^=5","^=6","^<U","^<V","^<F","^<Y","^=@","^<M","^=8","^<H","^<4","^<L","^<S","^=;","^<7","^<5","^<;","^<>","^==","~:f","^5","^<J","^<<","^<?","^<@","^<A","^<O","^=4","^=9","^=:","^=>","^<W","^=7","^<[","~:p","^=<","^<:","^<9","^<T","^<G","^<=","^<8","^=?","^<6","^<Q","^<P","^<B","^<D","^9","^=0","^<E","^1S","^2O","^10","^2;","^4U","^1[","^Q"]],"^3?",["^ ","^36",["^K",[]],"^37",["^K",[]]],"^3@",["^ "],"^3A",["^2[","^2X","^33","^2Y","^H","^2Z"]],"^R","^S","~:ns-specs",["^ "],"~:ns-spec-vars",["^K",[]],"~:compiler-options",["^5Y",[["^=E","~:static-fns"],true,["^=E","~:shadow-tweaks"],null,["^=E","~:source-map-inline"],null,["^=E","~:elide-asserts"],false,["^=E","~:optimize-constants"],null,["^=E","^3F"],null,["^=E","~:external-config"],null,["^=E","~:tooling-config"],null,["^=E","~:emit-constants"],null,["^=E","~:load-tests"],null,["^=E","~:form-size-threshold"],null,["^=E","~:global-goog-object&array"],null,["^=E","~:data-readers"],null,["^=E","~:infer-externs"],"^==",["^=E","^3H"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^=E","~:fn-invoke-direct"],null,["^=E","~:source-map"],"/dev/null"]]]