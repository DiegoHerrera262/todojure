["^ ","~:output",["^ ","~:js","goog.provide('com.fulcrologic.fulcro.rendering.multiple_roots_renderer');\ngoog.scope(function(){\n  com.fulcrologic.fulcro.rendering.multiple_roots_renderer.goog$module$goog$object = goog.module.get('goog.object');\n});\nvar module$node_modules$react$index=shadow.js.require(\"module$node_modules$react$index\", {});\n/**\n * Register a mounted react component as a new root that should be managed. The\n *   options map can contain:\n * \n *   - `:initialize?`: Should the initial state be pushed into the app state (if not already present)? Defaults\n *   to true, which causes it to happen once (on initial mount).\n */\ncom.fulcrologic.fulcro.rendering.multiple_roots_renderer.register_root_BANG_ = (function com$fulcrologic$fulcro$rendering$multiple_roots_renderer$register_root_BANG_(var_args){\nvar G__64590 = arguments.length;\nswitch (G__64590) {\ncase 1:\nreturn com.fulcrologic.fulcro.rendering.multiple_roots_renderer.register_root_BANG_.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn com.fulcrologic.fulcro.rendering.multiple_roots_renderer.register_root_BANG_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(com.fulcrologic.fulcro.rendering.multiple_roots_renderer.register_root_BANG_.cljs$core$IFn$_invoke$arity$1 = (function (react_instance){\nreturn com.fulcrologic.fulcro.rendering.multiple_roots_renderer.register_root_BANG_.cljs$core$IFn$_invoke$arity$2(react_instance,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"initialize?\",\"initialize?\",-1238334118),true], null));\n}));\n\n(com.fulcrologic.fulcro.rendering.multiple_roots_renderer.register_root_BANG_.cljs$core$IFn$_invoke$arity$2 = (function (react_instance,p__64591){\nvar map__64592 = p__64591;\nvar map__64592__$1 = cljs.core.__destructure_map(map__64592);\nvar app__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64592__$1,new cljs.core.Keyword(null,\"app\",\"app\",-560961707));\nvar initialize_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64592__$1,new cljs.core.Keyword(null,\"initialize?\",\"initialize?\",-1238334118));\nvar app__$2 = (function (){var or__5045__auto__ = app__$1;\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nvar or__5045__auto____$1 = com.fulcrologic.fulcro.components.any__GT_app(react_instance);\nif(cljs.core.truth_(or__5045__auto____$1)){\nreturn or__5045__auto____$1;\n} else {\nreturn com.fulcrologic.fulcro.components._STAR_app_STAR_;\n}\n}\n})();\nif(cljs.core.map_QMARK_(app__$2)){\nvar class$ = com.fulcrologic.fulcro.components.react_type(react_instance);\nvar k = (com.fulcrologic.fulcro.components.class__GT_registry_key.cljs$core$IFn$_invoke$arity$1 ? com.fulcrologic.fulcro.components.class__GT_registry_key.cljs$core$IFn$_invoke$arity$1(class$) : com.fulcrologic.fulcro.components.class__GT_registry_key.call(null,class$));\nvar initialize_state_BANG_ = com.fulcrologic.fulcro.algorithms.lookup.app_algorithm(app__$2,new cljs.core.Keyword(null,\"initialize-state!\",\"initialize-state!\",-1114074844));\nvar schedule_render_BANG_ = com.fulcrologic.fulcro.algorithms.lookup.app_algorithm(app__$2,new cljs.core.Keyword(null,\"schedule-render!\",\"schedule-render!\",2095050350));\nvar known_roots = (function (){var G__64604 = app__$2;\nvar G__64604__$1 = (((G__64604 == null))?null:new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"runtime-atom\",\"com.fulcrologic.fulcro.application/runtime-atom\",-1167397772).cljs$core$IFn$_invoke$arity$1(G__64604));\nvar G__64604__$2 = (((G__64604__$1 == null))?null:cljs.core.deref(G__64604__$1));\nif((G__64604__$2 == null)){\nreturn null;\n} else {\nreturn new cljs.core.Keyword(\"com.fulcrologic.fulcro.rendering.multiple-roots-renderer\",\"known-roots\",\"com.fulcrologic.fulcro.rendering.multiple-roots-renderer/known-roots\",1422774853).cljs$core$IFn$_invoke$arity$1(G__64604__$2);\n}\n})();\nvar initialized_QMARK_ = cljs.core.contains_QMARK_(known_roots,k);\nif(cljs.core.truth_((function (){var and__5043__auto__ = initialize_QMARK_;\nif(cljs.core.truth_(and__5043__auto__)){\nreturn (!(initialized_QMARK_));\n} else {\nreturn and__5043__auto__;\n}\n})())){\n(initialize_state_BANG_.cljs$core$IFn$_invoke$arity$2 ? initialize_state_BANG_.cljs$core$IFn$_invoke$arity$2(app__$2,class$) : initialize_state_BANG_.call(null,app__$2,class$));\n\nvar G__64614_64949 = app__$2;\nvar G__64615_64950 = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"force-root?\",\"force-root?\",-1598741683),true], null);\n(schedule_render_BANG_.cljs$core$IFn$_invoke$arity$2 ? schedule_render_BANG_.cljs$core$IFn$_invoke$arity$2(G__64614_64949,G__64615_64950) : schedule_render_BANG_.call(null,G__64614_64949,G__64615_64950));\n} else {\n}\n\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$11(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"debug\",\"debug\",-1608172596),\"com.fulcrologic.fulcro.rendering.multiple-roots-renderer\",null,90,new cljs.core.Keyword(null,\"p\",\"p\",151049309),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Adding root of type \",k], null);\n}),null)),null,858732443,null);\n\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"runtime-atom\",\"com.fulcrologic.fulcro.application/runtime-atom\",-1167397772).cljs$core$IFn$_invoke$arity$1(app__$2),cljs.core.update_in,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"com.fulcrologic.fulcro.rendering.multiple-roots-renderer\",\"known-roots\",\"com.fulcrologic.fulcro.rendering.multiple-roots-renderer/known-roots\",1422774853),k], null),cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(cljs.core.conj,cljs.core.PersistentHashSet.EMPTY),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([react_instance], 0));\n} else {\nreturn taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$11(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"error\",\"error\",-978969032),\"com.fulcrologic.fulcro.rendering.multiple-roots-renderer\",null,92,new cljs.core.Keyword(null,\"p\",\"p\",151049309),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Register-root cannot find app. Pass your Fulcro app via options. See https://book.fulcrologic.com/#err-mrr-reg-root-no-app\"], null);\n}),null)),null,-553541256,null);\n}\n}));\n\n(com.fulcrologic.fulcro.rendering.multiple_roots_renderer.register_root_BANG_.cljs$lang$maxFixedArity = 2);\n\n/**\n * Deregister a mounted root that should no longer be managed.\n */\ncom.fulcrologic.fulcro.rendering.multiple_roots_renderer.deregister_root_BANG_ = (function com$fulcrologic$fulcro$rendering$multiple_roots_renderer$deregister_root_BANG_(var_args){\nvar G__64649 = arguments.length;\nswitch (G__64649) {\ncase 1:\nreturn com.fulcrologic.fulcro.rendering.multiple_roots_renderer.deregister_root_BANG_.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn com.fulcrologic.fulcro.rendering.multiple_roots_renderer.deregister_root_BANG_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(com.fulcrologic.fulcro.rendering.multiple_roots_renderer.deregister_root_BANG_.cljs$core$IFn$_invoke$arity$1 = (function (react_instance){\nreturn com.fulcrologic.fulcro.rendering.multiple_roots_renderer.deregister_root_BANG_.cljs$core$IFn$_invoke$arity$2(react_instance,cljs.core.PersistentArrayMap.EMPTY);\n}));\n\n(com.fulcrologic.fulcro.rendering.multiple_roots_renderer.deregister_root_BANG_.cljs$core$IFn$_invoke$arity$2 = (function (react_instance,p__64668){\nvar map__64669 = p__64668;\nvar map__64669__$1 = cljs.core.__destructure_map(map__64669);\nvar options = map__64669__$1;\nvar app__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64669__$1,new cljs.core.Keyword(null,\"app\",\"app\",-560961707));\nvar app__$2 = (function (){var or__5045__auto__ = app__$1;\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nvar or__5045__auto____$1 = com.fulcrologic.fulcro.components.any__GT_app(react_instance);\nif(cljs.core.truth_(or__5045__auto____$1)){\nreturn or__5045__auto____$1;\n} else {\nreturn com.fulcrologic.fulcro.components._STAR_app_STAR_;\n}\n}\n})();\nif(cljs.core.map_QMARK_(app__$2)){\nvar class$ = com.fulcrologic.fulcro.components.react_type(react_instance);\nvar k = (com.fulcrologic.fulcro.components.class__GT_registry_key.cljs$core$IFn$_invoke$arity$1 ? com.fulcrologic.fulcro.components.class__GT_registry_key.cljs$core$IFn$_invoke$arity$1(class$) : com.fulcrologic.fulcro.components.class__GT_registry_key.call(null,class$));\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$11(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"debug\",\"debug\",-1608172596),\"com.fulcrologic.fulcro.rendering.multiple-roots-renderer\",null,103,new cljs.core.Keyword(null,\"p\",\"p\",151049309),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Adding root of type \",k], null);\n}),null)),null,265309766,null);\n\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"runtime-atom\",\"com.fulcrologic.fulcro.application/runtime-atom\",-1167397772).cljs$core$IFn$_invoke$arity$1(app__$2),cljs.core.update_in,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"com.fulcrologic.fulcro.rendering.multiple-roots-renderer\",\"known-roots\",\"com.fulcrologic.fulcro.rendering.multiple-roots-renderer/known-roots\",1422774853),k], null),cljs.core.disj,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([react_instance], 0));\n} else {\nreturn taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$11(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"error\",\"error\",-978969032),\"com.fulcrologic.fulcro.rendering.multiple-roots-renderer\",null,105,new cljs.core.Keyword(null,\"p\",\"p\",151049309),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Deregister-root cannot find app. Pass your Fulcro app via options. See https://book.fulcrologic.com/#err-mrr-dereg-root-no-app\"], null);\n}),null)),null,2118895794,null);\n}\n}));\n\n(com.fulcrologic.fulcro.rendering.multiple_roots_renderer.deregister_root_BANG_.cljs$lang$maxFixedArity = 2);\n\ncom.fulcrologic.fulcro.rendering.multiple_roots_renderer.render_roots_BANG_ = (function com$fulcrologic$fulcro$rendering$multiple_roots_renderer$render_roots_BANG_(app__$1,options){\nvar state_map = (function (){var G__64714 = app__$1;\nvar G__64714__$1 = (((G__64714 == null))?null:new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"state-atom\",\"com.fulcrologic.fulcro.application/state-atom\",648128366).cljs$core$IFn$_invoke$arity$1(G__64714));\nif((G__64714__$1 == null)){\nreturn null;\n} else {\nreturn cljs.core.deref(G__64714__$1);\n}\n})();\nvar known_roots = (function (){var G__64727 = app__$1;\nvar G__64727__$1 = (((G__64727 == null))?null:new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"runtime-atom\",\"com.fulcrologic.fulcro.application/runtime-atom\",-1167397772).cljs$core$IFn$_invoke$arity$1(G__64727));\nvar G__64727__$2 = (((G__64727__$1 == null))?null:cljs.core.deref(G__64727__$1));\nif((G__64727__$2 == null)){\nreturn null;\n} else {\nreturn new cljs.core.Keyword(\"com.fulcrologic.fulcro.rendering.multiple-roots-renderer\",\"known-roots\",\"com.fulcrologic.fulcro.rendering.multiple-roots-renderer/known-roots\",1422774853).cljs$core$IFn$_invoke$arity$1(G__64727__$2);\n}\n})();\ncom.fulcrologic.fulcro.rendering.keyframe_render.render_BANG_(app__$1,options);\n\nvar seq__64736 = cljs.core.seq(cljs.core.keys(known_roots));\nvar chunk__64738 = null;\nvar count__64739 = (0);\nvar i__64740 = (0);\nwhile(true){\nif((i__64740 < count__64739)){\nvar k = chunk__64738.cljs$core$IIndexed$_nth$arity$2(null,i__64740);\nvar cls_64959 = (com.fulcrologic.fulcro.components.registry_key__GT_class.cljs$core$IFn$_invoke$arity$1 ? com.fulcrologic.fulcro.components.registry_key__GT_class.cljs$core$IFn$_invoke$arity$1(k) : com.fulcrologic.fulcro.components.registry_key__GT_class.call(null,k));\nvar query_64960 = com.fulcrologic.fulcro.components.get_query.cljs$core$IFn$_invoke$arity$2(cls_64959,state_map);\nvar root_props_64961 = com.fulcrologic.fulcro.algorithms.denormalize.db__GT_tree(query_64960,state_map,state_map);\nvar seq__64864_64962 = cljs.core.seq(cljs.core.get.cljs$core$IFn$_invoke$arity$2(known_roots,k));\nvar chunk__64865_64963 = null;\nvar count__64866_64964 = (0);\nvar i__64867_64965 = (0);\nwhile(true){\nif((i__64867_64965 < count__64866_64964)){\nvar root_64966 = chunk__64865_64963.cljs$core$IIndexed$_nth$arity$2(null,i__64867_64965);\ncom.fulcrologic.fulcro.components.tunnel_props_BANG_(root_64966,root_props_64961);\n\n\nvar G__64967 = seq__64864_64962;\nvar G__64968 = chunk__64865_64963;\nvar G__64969 = count__64866_64964;\nvar G__64970 = (i__64867_64965 + (1));\nseq__64864_64962 = G__64967;\nchunk__64865_64963 = G__64968;\ncount__64866_64964 = G__64969;\ni__64867_64965 = G__64970;\ncontinue;\n} else {\nvar temp__5753__auto___64972 = cljs.core.seq(seq__64864_64962);\nif(temp__5753__auto___64972){\nvar seq__64864_64973__$1 = temp__5753__auto___64972;\nif(cljs.core.chunked_seq_QMARK_(seq__64864_64973__$1)){\nvar c__5568__auto___64974 = cljs.core.chunk_first(seq__64864_64973__$1);\nvar G__64975 = cljs.core.chunk_rest(seq__64864_64973__$1);\nvar G__64976 = c__5568__auto___64974;\nvar G__64977 = cljs.core.count(c__5568__auto___64974);\nvar G__64978 = (0);\nseq__64864_64962 = G__64975;\nchunk__64865_64963 = G__64976;\ncount__64866_64964 = G__64977;\ni__64867_64965 = G__64978;\ncontinue;\n} else {\nvar root_64979 = cljs.core.first(seq__64864_64973__$1);\ncom.fulcrologic.fulcro.components.tunnel_props_BANG_(root_64979,root_props_64961);\n\n\nvar G__64980 = cljs.core.next(seq__64864_64973__$1);\nvar G__64981 = null;\nvar G__64982 = (0);\nvar G__64983 = (0);\nseq__64864_64962 = G__64980;\nchunk__64865_64963 = G__64981;\ncount__64866_64964 = G__64982;\ni__64867_64965 = G__64983;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\n\nvar G__64984 = seq__64736;\nvar G__64985 = chunk__64738;\nvar G__64986 = count__64739;\nvar G__64987 = (i__64740 + (1));\nseq__64736 = G__64984;\nchunk__64738 = G__64985;\ncount__64739 = G__64986;\ni__64740 = G__64987;\ncontinue;\n} else {\nvar temp__5753__auto__ = cljs.core.seq(seq__64736);\nif(temp__5753__auto__){\nvar seq__64736__$1 = temp__5753__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__64736__$1)){\nvar c__5568__auto__ = cljs.core.chunk_first(seq__64736__$1);\nvar G__64988 = cljs.core.chunk_rest(seq__64736__$1);\nvar G__64989 = c__5568__auto__;\nvar G__64990 = cljs.core.count(c__5568__auto__);\nvar G__64991 = (0);\nseq__64736 = G__64988;\nchunk__64738 = G__64989;\ncount__64739 = G__64990;\ni__64740 = G__64991;\ncontinue;\n} else {\nvar k = cljs.core.first(seq__64736__$1);\nvar cls_64993 = (com.fulcrologic.fulcro.components.registry_key__GT_class.cljs$core$IFn$_invoke$arity$1 ? com.fulcrologic.fulcro.components.registry_key__GT_class.cljs$core$IFn$_invoke$arity$1(k) : com.fulcrologic.fulcro.components.registry_key__GT_class.call(null,k));\nvar query_64994 = com.fulcrologic.fulcro.components.get_query.cljs$core$IFn$_invoke$arity$2(cls_64993,state_map);\nvar root_props_64995 = com.fulcrologic.fulcro.algorithms.denormalize.db__GT_tree(query_64994,state_map,state_map);\nvar seq__64873_64996 = cljs.core.seq(cljs.core.get.cljs$core$IFn$_invoke$arity$2(known_roots,k));\nvar chunk__64874_64997 = null;\nvar count__64875_64998 = (0);\nvar i__64876_64999 = (0);\nwhile(true){\nif((i__64876_64999 < count__64875_64998)){\nvar root_65000 = chunk__64874_64997.cljs$core$IIndexed$_nth$arity$2(null,i__64876_64999);\ncom.fulcrologic.fulcro.components.tunnel_props_BANG_(root_65000,root_props_64995);\n\n\nvar G__65001 = seq__64873_64996;\nvar G__65002 = chunk__64874_64997;\nvar G__65003 = count__64875_64998;\nvar G__65004 = (i__64876_64999 + (1));\nseq__64873_64996 = G__65001;\nchunk__64874_64997 = G__65002;\ncount__64875_64998 = G__65003;\ni__64876_64999 = G__65004;\ncontinue;\n} else {\nvar temp__5753__auto___65005__$1 = cljs.core.seq(seq__64873_64996);\nif(temp__5753__auto___65005__$1){\nvar seq__64873_65006__$1 = temp__5753__auto___65005__$1;\nif(cljs.core.chunked_seq_QMARK_(seq__64873_65006__$1)){\nvar c__5568__auto___65007 = cljs.core.chunk_first(seq__64873_65006__$1);\nvar G__65008 = cljs.core.chunk_rest(seq__64873_65006__$1);\nvar G__65009 = c__5568__auto___65007;\nvar G__65010 = cljs.core.count(c__5568__auto___65007);\nvar G__65011 = (0);\nseq__64873_64996 = G__65008;\nchunk__64874_64997 = G__65009;\ncount__64875_64998 = G__65010;\ni__64876_64999 = G__65011;\ncontinue;\n} else {\nvar root_65012 = cljs.core.first(seq__64873_65006__$1);\ncom.fulcrologic.fulcro.components.tunnel_props_BANG_(root_65012,root_props_64995);\n\n\nvar G__65013 = cljs.core.next(seq__64873_65006__$1);\nvar G__65014 = null;\nvar G__65015 = (0);\nvar G__65016 = (0);\nseq__64873_64996 = G__65013;\nchunk__64874_64997 = G__65014;\ncount__64875_64998 = G__65015;\ni__64876_64999 = G__65016;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\n\nvar G__65017 = cljs.core.next(seq__64736__$1);\nvar G__65018 = null;\nvar G__65019 = (0);\nvar G__65020 = (0);\nseq__64736 = G__65017;\nchunk__64738 = G__65018;\ncount__64739 = G__65019;\ni__64740 = G__65020;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n});\n/**\n * This function tracks the state of the app at the time of prior render in the app's runtime-atom. It\n * uses that to do a comparison of old vs. current application state (bounded by the needs of on-screen components).\n * When it finds data that has changed it renders all of the components that depend on that data.\n */\ncom.fulcrologic.fulcro.rendering.multiple_roots_renderer.render_stale_components_BANG_ = (function com$fulcrologic$fulcro$rendering$multiple_roots_renderer$render_stale_components_BANG_(app__$1,options){\nvar map__64879 = app__$1;\nvar map__64879__$1 = cljs.core.__destructure_map(map__64879);\nvar runtime_atom = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64879__$1,new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"runtime-atom\",\"com.fulcrologic.fulcro.application/runtime-atom\",-1167397772));\nvar map__64880 = cljs.core.deref(runtime_atom);\nvar map__64880__$1 = cljs.core.__destructure_map(map__64880);\nvar only_refresh = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64880__$1,new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"only-refresh\",\"com.fulcrologic.fulcro.application/only-refresh\",1300408206));\nvar limited_refresh_QMARK_ = cljs.core.seq(only_refresh);\nif(limited_refresh_QMARK_){\nvar map__64881 = cljs.core.group_by(edn_query_language.core.ident_QMARK_,only_refresh);\nvar map__64881__$1 = cljs.core.__destructure_map(map__64881);\nvar limited_idents = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64881__$1,true);\nvar seq__64882 = cljs.core.seq(limited_idents);\nvar chunk__64883 = null;\nvar count__64884 = (0);\nvar i__64885 = (0);\nwhile(true){\nif((i__64885 < count__64884)){\nvar i = chunk__64883.cljs$core$IIndexed$_nth$arity$2(null,i__64885);\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_components_with_ident_BANG_(app__$1,i);\n\n\nvar G__65025 = seq__64882;\nvar G__65026 = chunk__64883;\nvar G__65027 = count__64884;\nvar G__65028 = (i__64885 + (1));\nseq__64882 = G__65025;\nchunk__64883 = G__65026;\ncount__64884 = G__65027;\ni__64885 = G__65028;\ncontinue;\n} else {\nvar temp__5753__auto__ = cljs.core.seq(seq__64882);\nif(temp__5753__auto__){\nvar seq__64882__$1 = temp__5753__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__64882__$1)){\nvar c__5568__auto__ = cljs.core.chunk_first(seq__64882__$1);\nvar G__65029 = cljs.core.chunk_rest(seq__64882__$1);\nvar G__65030 = c__5568__auto__;\nvar G__65031 = cljs.core.count(c__5568__auto__);\nvar G__65032 = (0);\nseq__64882 = G__65029;\nchunk__64883 = G__65030;\ncount__64884 = G__65031;\ni__64885 = G__65032;\ncontinue;\n} else {\nvar i = cljs.core.first(seq__64882__$1);\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_components_with_ident_BANG_(app__$1,i);\n\n\nvar G__65033 = cljs.core.next(seq__64882__$1);\nvar G__65034 = null;\nvar G__65035 = (0);\nvar G__65036 = (0);\nseq__64882 = G__65033;\nchunk__64883 = G__65034;\ncount__64884 = G__65035;\ni__64885 = G__65036;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n} else {\nreturn com.fulcrologic.fulcro.rendering.multiple_roots_renderer.render_roots_BANG_(app__$1,options);\n}\n});\n/**\n * The top-level call for using this optimized render in your application.\n * \n *   If `:force-root? true` is passed in options, then it just forces a keyframe root render.\n * \n *   This renderer always does a keyframe render *unless* an `:only-refresh` option is passed to the stack\n *   (usually as an option on `(transact! this [(f)] {:only-refresh [...idents...]})`. In that case the renderer\n *   will ignore *all* data diffing and will target refresh only to the on-screen components that have the listed\n *   ident(s). This allows you to get component-local state refresh rates on transactions that are responding to\n *   events that should really only affect a known set of components (like the input field).\n * \n *   This option does *not* currently support using query keywords in the refresh set. Only idents.\n */\ncom.fulcrologic.fulcro.rendering.multiple_roots_renderer.render_BANG_ = (function com$fulcrologic$fulcro$rendering$multiple_roots_renderer$render_BANG_(var_args){\nvar G__64893 = arguments.length;\nswitch (G__64893) {\ncase 1:\nreturn com.fulcrologic.fulcro.rendering.multiple_roots_renderer.render_BANG_.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn com.fulcrologic.fulcro.rendering.multiple_roots_renderer.render_BANG_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(com.fulcrologic.fulcro.rendering.multiple_roots_renderer.render_BANG_.cljs$core$IFn$_invoke$arity$1 = (function (app__$1){\nreturn com.fulcrologic.fulcro.rendering.multiple_roots_renderer.render_BANG_.cljs$core$IFn$_invoke$arity$2(app__$1,cljs.core.PersistentArrayMap.EMPTY);\n}));\n\n(com.fulcrologic.fulcro.rendering.multiple_roots_renderer.render_BANG_.cljs$core$IFn$_invoke$arity$2 = (function (app__$1,p__64896){\nvar map__64897 = p__64896;\nvar map__64897__$1 = cljs.core.__destructure_map(map__64897);\nvar options = map__64897__$1;\nvar force_root_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64897__$1,new cljs.core.Keyword(null,\"force-root?\",\"force-root?\",-1598741683));\nvar root_props_changed_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__64897__$1,new cljs.core.Keyword(null,\"root-props-changed?\",\"root-props-changed?\",1999614835));\nif(cljs.core.truth_((function (){var or__5045__auto__ = force_root_QMARK_;\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn root_props_changed_QMARK_;\n}\n})())){\nreturn com.fulcrologic.fulcro.rendering.multiple_roots_renderer.render_roots_BANG_(app__$1,options);\n} else {\ntry{return com.fulcrologic.fulcro.rendering.multiple_roots_renderer.render_stale_components_BANG_(app__$1,options);\n}catch (e64898){var e = e64898;\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$11(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"info\",\"info\",-317069002),\"com.fulcrologic.fulcro.rendering.multiple-roots-renderer\",null,152,new cljs.core.Keyword(null,\"p\",\"p\",151049309),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Optimized render failed. Falling back to root render.\"], null);\n}),null)),null,1136068274,null);\n\nreturn com.fulcrologic.fulcro.rendering.multiple_roots_renderer.render_roots_BANG_(app__$1,options);\n}}\n}));\n\n(com.fulcrologic.fulcro.rendering.multiple_roots_renderer.render_BANG_.cljs$lang$maxFixedArity = 2);\n\n/**\n * Generate a plain React class that can render a Fulcro UIRoot. NOTE: The UIRoot must register/deregister itself\n *   in the component lifecycle:\n * \n *   ```\n *   (defsc UIRoot [this props]\n *  {:componentDidMount     (fn [this] (mroot/register-root! this))\n *   :componentWillUnmount  (fn [this] (mroot/deregister-root! this))\n *   :initial-state {}\n *   :query [root-like-query]}\n *  ...)\n *   ```\n * \n *   The `fulcro-app` is the app under which this root will be rendered. Create different factories if you have more than\n *   one mounted app.\n *   \n */\ncom.fulcrologic.fulcro.rendering.multiple_roots_renderer.floating_root_react_class = (function com$fulcrologic$fulcro$rendering$multiple_roots_renderer$floating_root_react_class(UIRoot,fulcro_app){\nvar cls = (function (){\nreturn null;\n});\nvar ui_root = com.fulcrologic.fulcro.components.computed_factory.cljs$core$IFn$_invoke$arity$1(UIRoot);\ncom.fulcrologic.fulcro.rendering.multiple_roots_renderer.goog$module$goog$object.extend(cls.prototype,module$node_modules$react$index.Component.prototype,cljs.core.clj__GT_js(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"shouldComponentUpdate\",\"shouldComponentUpdate\",1795750960),(function (){\nreturn false;\n}),new cljs.core.Keyword(null,\"render\",\"render\",-1408033454),(function (){\nvar this$ = this;\nvar js_props = this$.props;\nvar app__45130__auto__ = (function (){var or__5045__auto__ = com.fulcrologic.fulcro.components._STAR_app_STAR_;\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn fulcro_app;\n}\n})();\nvar d__45131__auto__ = (function (){var or__5045__auto__ = com.fulcrologic.fulcro.components._STAR_depth_STAR_;\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn (0);\n}\n})();\nvar _STAR_app_STAR__orig_val__64905 = com.fulcrologic.fulcro.components._STAR_app_STAR_;\nvar _STAR_shared_STAR__orig_val__64906 = com.fulcrologic.fulcro.components._STAR_shared_STAR_;\nvar _STAR_depth_STAR__orig_val__64907 = com.fulcrologic.fulcro.components._STAR_depth_STAR_;\nvar _STAR_app_STAR__temp_val__64908 = app__45130__auto__;\nvar _STAR_shared_STAR__temp_val__64909 = com.fulcrologic.fulcro.components.shared.cljs$core$IFn$_invoke$arity$1(app__45130__auto__);\nvar _STAR_depth_STAR__temp_val__64910 = d__45131__auto__;\n(com.fulcrologic.fulcro.components._STAR_app_STAR_ = _STAR_app_STAR__temp_val__64908);\n\n(com.fulcrologic.fulcro.components._STAR_shared_STAR_ = _STAR_shared_STAR__temp_val__64909);\n\n(com.fulcrologic.fulcro.components._STAR_depth_STAR_ = _STAR_depth_STAR__temp_val__64910);\n\ntry{var _STAR_denormalize_time_STAR__orig_val__64912 = com.fulcrologic.fulcro.algorithms.denormalize._STAR_denormalize_time_STAR_;\nvar _STAR_denormalize_time_STAR__temp_val__64913 = new cljs.core.Keyword(\"com.fulcrologic.fulcro.rendering.multiple-roots-renderer\",\"basis-t\",\"com.fulcrologic.fulcro.rendering.multiple-roots-renderer/basis-t\",1789052925).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"runtime-atom\",\"com.fulcrologic.fulcro.application/runtime-atom\",-1167397772).cljs$core$IFn$_invoke$arity$1(fulcro_app)));\n(com.fulcrologic.fulcro.algorithms.denormalize._STAR_denormalize_time_STAR_ = _STAR_denormalize_time_STAR__temp_val__64913);\n\ntry{var query = com.fulcrologic.fulcro.components.get_query.cljs$core$IFn$_invoke$arity$1(UIRoot);\nvar state_map = (function (){var G__64914 = fulcro_app;\nvar G__64914__$1 = (((G__64914 == null))?null:new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"state-atom\",\"com.fulcrologic.fulcro.application/state-atom\",648128366).cljs$core$IFn$_invoke$arity$1(G__64914));\nif((G__64914__$1 == null)){\nreturn null;\n} else {\nreturn cljs.core.deref(G__64914__$1);\n}\n})();\nvar props = com.fulcrologic.fulcro.algorithms.denormalize.db__GT_tree(query,state_map,state_map);\nvar G__64915 = props;\nvar G__64917 = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"js-props\",\"js-props\",1900369280),js_props], null);\nreturn (ui_root.cljs$core$IFn$_invoke$arity$2 ? ui_root.cljs$core$IFn$_invoke$arity$2(G__64915,G__64917) : ui_root.call(null,G__64915,G__64917));\n}finally {(com.fulcrologic.fulcro.algorithms.denormalize._STAR_denormalize_time_STAR_ = _STAR_denormalize_time_STAR__orig_val__64912);\n}}finally {(com.fulcrologic.fulcro.components._STAR_depth_STAR_ = _STAR_depth_STAR__orig_val__64907);\n\n(com.fulcrologic.fulcro.components._STAR_shared_STAR_ = _STAR_shared_STAR__orig_val__64906);\n\n(com.fulcrologic.fulcro.components._STAR_app_STAR_ = _STAR_app_STAR__orig_val__64905);\n}})], null)));\n\nreturn cls;\n});\n/**\n * Create a factory that renders a floating root in a normal Fulcro context (body of a Fulcro component). This factory\n * has the same sync constraints as normal `component/factory` functions. See `components/with-parent-context`.\n * \n *   `UIClass`: A class that will behave as a floating root. NOTE: that class MUST have a mount/unmount hook\n *   to regsiter/deregister itself as a root.\n * \n *   `options`: An options map. Same as for `component/factory`. Note, however, that this factory will *not* receive\n *   props, so a `:keyfn` would have to be based on something else.\n * \n *   You normally do not pass any props to this factory because it is controlling the component and feeding props from\n *   the database. Props sent to this factory are only used by the wrapper, however, `:react-key` is useful if you\n *   have a bunch of sibling roots and need to set the react key for each.\n *   \n */\ncom.fulcrologic.fulcro.rendering.multiple_roots_renderer.floating_root_factory = (function com$fulcrologic$fulcro$rendering$multiple_roots_renderer$floating_root_factory(var_args){\nvar G__64922 = arguments.length;\nswitch (G__64922) {\ncase 1:\nreturn com.fulcrologic.fulcro.rendering.multiple_roots_renderer.floating_root_factory.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn com.fulcrologic.fulcro.rendering.multiple_roots_renderer.floating_root_factory.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(com.fulcrologic.fulcro.rendering.multiple_roots_renderer.floating_root_factory.cljs$core$IFn$_invoke$arity$1 = (function (UIClass){\nreturn com.fulcrologic.fulcro.rendering.multiple_roots_renderer.floating_root_factory.cljs$core$IFn$_invoke$arity$2(UIClass,cljs.core.PersistentArrayMap.EMPTY);\n}));\n\n(com.fulcrologic.fulcro.rendering.multiple_roots_renderer.floating_root_factory.cljs$core$IFn$_invoke$arity$2 = (function (UIClass,options){\nvar constructor$ = (function (){\nreturn null;\n});\nvar ui_factory = com.fulcrologic.fulcro.components.computed_factory.cljs$core$IFn$_invoke$arity$1(UIClass);\nvar render = (function (this$){\nvar _STAR_denormalize_time_STAR__orig_val__64925 = com.fulcrologic.fulcro.algorithms.denormalize._STAR_denormalize_time_STAR_;\nvar _STAR_denormalize_time_STAR__temp_val__64926 = new cljs.core.Keyword(\"com.fulcrologic.fulcro.rendering.multiple-roots-renderer\",\"basis-t\",\"com.fulcrologic.fulcro.rendering.multiple-roots-renderer/basis-t\",1789052925).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"runtime-atom\",\"com.fulcrologic.fulcro.application/runtime-atom\",-1167397772).cljs$core$IFn$_invoke$arity$1(com.fulcrologic.fulcro.components._STAR_app_STAR_)));\n(com.fulcrologic.fulcro.algorithms.denormalize._STAR_denormalize_time_STAR_ = _STAR_denormalize_time_STAR__temp_val__64926);\n\ntry{var state_map = (function (){var G__64927 = com.fulcrologic.fulcro.components._STAR_app_STAR_;\nvar G__64927__$1 = (((G__64927 == null))?null:new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"state-atom\",\"com.fulcrologic.fulcro.application/state-atom\",648128366).cljs$core$IFn$_invoke$arity$1(G__64927));\nif((G__64927__$1 == null)){\nreturn null;\n} else {\nreturn cljs.core.deref(G__64927__$1);\n}\n})();\nvar query = com.fulcrologic.fulcro.components.get_query.cljs$core$IFn$_invoke$arity$2(UIClass,state_map);\nvar props = com.fulcrologic.fulcro.algorithms.denormalize.db__GT_tree(query,state_map,state_map);\nvar G__64929 = (function (){var or__5045__auto__ = props;\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn cljs.core.PersistentArrayMap.EMPTY;\n}\n})();\nvar G__64930 = (com.fulcrologic.fulcro.components.props.cljs$core$IFn$_invoke$arity$1 ? com.fulcrologic.fulcro.components.props.cljs$core$IFn$_invoke$arity$1(this$) : com.fulcrologic.fulcro.components.props.call(null,this$));\nreturn (ui_factory.cljs$core$IFn$_invoke$arity$2 ? ui_factory.cljs$core$IFn$_invoke$arity$2(G__64929,G__64930) : ui_factory.call(null,G__64929,G__64930));\n}finally {(com.fulcrologic.fulcro.algorithms.denormalize._STAR_denormalize_time_STAR_ = _STAR_denormalize_time_STAR__orig_val__64925);\n}});\nvar wrapper_class = com.fulcrologic.fulcro.components.configure_component_BANG_(constructor$,new cljs.core.Keyword(\"com.fulcrologic.fulcro.rendering.multiple-roots-renderer\",\"wrapper\",\"com.fulcrologic.fulcro.rendering.multiple-roots-renderer/wrapper\",-2035797237),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"shouldComponentUpdate\",\"shouldComponentUpdate\",1795750960),(function (_,___$1,___$2){\nreturn false;\n}),new cljs.core.Keyword(null,\"render\",\"render\",-1408033454),render], null));\nvar wrapper_factory = com.fulcrologic.fulcro.components.factory.cljs$core$IFn$_invoke$arity$2(wrapper_class,options);\nreturn wrapper_factory;\n}));\n\n(com.fulcrologic.fulcro.rendering.multiple_roots_renderer.floating_root_factory.cljs$lang$maxFixedArity = 2);\n\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:doc","Like keyframe-render2, but also supports free-floating roots.\n\n  WARNING: THIS RENDERER IS ALPHA. Lightly tested, but not heavily used yet.\n\n  General usage:\n\n  1. Set this nses `render!` as your application's optimized render function.\n  2. Create a class that follows all of the normal rules for a Fulcro root (no ident, has initial state,\n  composes children queries/initial-state, etc.\n     a. Add mount/unmount register/deregister calls\n  2. Use floating-root-factory to generate a Fulcro factory, or floating-root-react-class to generate\n  a vanilla React wrapper class that renders the new root.\n     a. Use the factory in normal Fuclro rendering, but don't pass it props, or\n     b. Use `(dom/create-element ReactClass)` to render the vanilla wrapper, or\n     c. Use the vanilla wrapper class when a js library controls rendering (like routing).\n\n  Example:\n\n  ```\n  (defonce app (app/fulcro-app {:optimized-render! mroot/render!}))\n\n  (defsc AltRoot [this {:keys [alt-child]}]\n    ;; query is from ROOT of the db, just like normal root.\n    {:query                 [{:alt-child (comp/get-query OtherChild)}]\n     :componentDidMount     (fn [this] (mroot/register-root! this {:app app}))\n     :componentWillUnmount  (fn [this] (mroot/deregister-root! this {:app app}))\n     :shouldComponentUpdate (fn [] true)\n     :initial-state         {:alt-child [{:id 1 :n 22}\n                                         {:id 2 :n 44}]}}\n    (dom/div\n      (mapv ui-other-child alt-child)))\n\n  ;; For use in the body of normal defsc components.\n  (def ui-alt-root (mroot/floating-root-factory AltRoot))\n\n  ;; For use as plain React class\n  (def PlainAltRoot (mroot/floating-root-react-class AltRoot app))\n\n  ...\n\n  (some-js-library #js {:thing PlainAltRoot})\n\n  (defsc NormalFulcroClass [this props]\n    {:query [:stuff]\n     :ident (fn [] [:x 1])\n     ...}\n    (dom/div\n      ;; ok to use within defsc components:\n      (ui-alt-root)\n      ;; how to use the plain react class, which is how js libs would use it:\n      (dom/create-element PlainAltRoot)))\n\n  ```\n  ","~:file","com/fulcrologic/fulcro/rendering/multiple_roots_renderer.cljc","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",61],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$clojure.spec.alpha","~$cljs.spec.alpha","~$clojure.core.async","~$cljs.core.async","~$clojure.pprint","~$cljs.pprint"],"~:use-macros",["^ ","~$with-app-context","~$com.fulcrologic.fulcro.rendering.multiple-roots-renderer"],"~:excludes",["~#set",[]],"~:macros",["^ ","^F",["^ ","~:arglists",["~#list",[["~$fulcro-app","~$&","~$body"]]],"^6","Wraps the given body with the correct internal bindings of the given fulcro-app so that Fulcro internals\n     will work when that body is embedded in unusual ways.\n\n     You should use this around the render body of any floating root that will be rendered outside of\n     the synchronous fulcro render (e.g. you pass a floating root class to a React library).\n     ","^8",156,"^9",4,"^7","com/fulcrologic/fulcro/rendering/multiple_roots_renderer.cljc","~:name","~$com.fulcrologic.fulcro.rendering.multiple-roots-renderer/with-app-context","~:ns","^G","~:macro",true]],"^O","^G","~:reader-aliases",["^ "],"~:js-aliases",["^ ","react","~$module$node_modules$react$index"],"~:op","^Q","~:imports",null,"~:requires",["^ ","~$ah","~$com.fulcrologic.fulcro.algorithms.lookup","~$edn-query-language.core","^10","~$log","~$taoensso.timbre","~$ior","~$com.fulcrologic.fulcro.rendering.ident-optimized-render","~$kr","~$com.fulcrologic.fulcro.rendering.keyframe-render","~$comp","~$com.fulcrologic.fulcro.components","~$eql","^10","~$com.fulcrologic.fulcro.algorithms.denormalize","^1:","~$react","^V","~$cljs.core","^1<","^V","^V","~$gobj","~$goog.object","~$goog","^1?","^1>","^1>","^16","^16","^[","^[","^14","^14","^18","^18","^12","^12","~$fdn","^1:"],"~:seen",["^I",["~:require","~:require-macros"]],"~:uses",null,"^1C",["^ ","^G","^G","^1<","^1<","^11","^12","^17","^18","^18","^18","^12","^12"],"~:form",["^L",["~$ns","^G","Like keyframe-render2, but also supports free-floating roots.\n\n  WARNING: THIS RENDERER IS ALPHA. Lightly tested, but not heavily used yet.\n\n  General usage:\n\n  1. Set this nses `render!` as your application's optimized render function.\n  2. Create a class that follows all of the normal rules for a Fulcro root (no ident, has initial state,\n  composes children queries/initial-state, etc.\n     a. Add mount/unmount register/deregister calls\n  2. Use floating-root-factory to generate a Fulcro factory, or floating-root-react-class to generate\n  a vanilla React wrapper class that renders the new root.\n     a. Use the factory in normal Fuclro rendering, but don't pass it props, or\n     b. Use `(dom/create-element ReactClass)` to render the vanilla wrapper, or\n     c. Use the vanilla wrapper class when a js library controls rendering (like routing).\n\n  Example:\n\n  ```\n  (defonce app (app/fulcro-app {:optimized-render! mroot/render!}))\n\n  (defsc AltRoot [this {:keys [alt-child]}]\n    ;; query is from ROOT of the db, just like normal root.\n    {:query                 [{:alt-child (comp/get-query OtherChild)}]\n     :componentDidMount     (fn [this] (mroot/register-root! this {:app app}))\n     :componentWillUnmount  (fn [this] (mroot/deregister-root! this {:app app}))\n     :shouldComponentUpdate (fn [] true)\n     :initial-state         {:alt-child [{:id 1 :n 22}\n                                         {:id 2 :n 44}]}}\n    (dom/div\n      (mapv ui-other-child alt-child)))\n\n  ;; For use in the body of normal defsc components.\n  (def ui-alt-root (mroot/floating-root-factory AltRoot))\n\n  ;; For use as plain React class\n  (def PlainAltRoot (mroot/floating-root-react-class AltRoot app))\n\n  ...\n\n  (some-js-library #js {:thing PlainAltRoot})\n\n  (defsc NormalFulcroClass [this props]\n    {:query [:stuff]\n     :ident (fn [] [:x 1])\n     ...}\n    (dom/div\n      ;; ok to use within defsc components:\n      (ui-alt-root)\n      ;; how to use the plain react class, which is how js libs would use it:\n      (dom/create-element PlainAltRoot)))\n\n  ```\n  ",["^L",["^1C",["^G","~:refer",["^F"]]]],["^L",["^1B",["^1:","~:as","^1@"],["^[","^1H","^Z"],["^18","^1H","^17"],["^14","^1H","^13"],["^16","^1H","^15"],["^10","^1H","^19"],["^12","^1H","^11"],["react","^1H","^1;"],["^1>","^1H","^1="]]]]],"~:flags",["^ ","^1C",["^I",[]],"^1B",["^I",[]]],"~:js-deps",["^ ","^U",["^ ","^1H","^1;"]],"~:deps",["^1?","^1<","^1:","^[","^18","^14","^16","^10","^12","^V","^1>"]],"^Q","^G","~:resource-id",["~:shadow.build.classpath/resource","com/fulcrologic/fulcro/rendering/multiple_roots_renderer.cljc"],"~:compiled-at",1689300183334,"^S",["^ ","^Z","^[","^10","^10","^11","^12","^13","^14","^15","^16","^17","^18","^19","^10","^1:","^1:","^1;","^V","^1<","^1<","^V","^V","^1=","^1>","^1?","^1?","^1>","^1>","^16","^16","^[","^[","^14","^14","^18","^18","^12","^12","^G","^G","^1@","^1:"],"~:resource-name","com/fulcrologic/fulcro/rendering/multiple_roots_renderer.cljc","~:warnings",[],"~:source","(ns com.fulcrologic.fulcro.rendering.multiple-roots-renderer\n  \"Like keyframe-render2, but also supports free-floating roots.\n\n  WARNING: THIS RENDERER IS ALPHA. Lightly tested, but not heavily used yet.\n\n  General usage:\n\n  1. Set this nses `render!` as your application's optimized render function.\n  2. Create a class that follows all of the normal rules for a Fulcro root (no ident, has initial state,\n  composes children queries/initial-state, etc.\n     a. Add mount/unmount register/deregister calls\n  2. Use floating-root-factory to generate a Fulcro factory, or floating-root-react-class to generate\n  a vanilla React wrapper class that renders the new root.\n     a. Use the factory in normal Fuclro rendering, but don't pass it props, or\n     b. Use `(dom/create-element ReactClass)` to render the vanilla wrapper, or\n     c. Use the vanilla wrapper class when a js library controls rendering (like routing).\n\n  Example:\n\n  ```\n  (defonce app (app/fulcro-app {:optimized-render! mroot/render!}))\n\n  (defsc AltRoot [this {:keys [alt-child]}]\n    ;; query is from ROOT of the db, just like normal root.\n    {:query                 [{:alt-child (comp/get-query OtherChild)}]\n     :componentDidMount     (fn [this] (mroot/register-root! this {:app app}))\n     :componentWillUnmount  (fn [this] (mroot/deregister-root! this {:app app}))\n     :shouldComponentUpdate (fn [] true)\n     :initial-state         {:alt-child [{:id 1 :n 22}\n                                         {:id 2 :n 44}]}}\n    (dom/div\n      (mapv ui-other-child alt-child)))\n\n  ;; For use in the body of normal defsc components.\n  (def ui-alt-root (mroot/floating-root-factory AltRoot))\n\n  ;; For use as plain React class\n  (def PlainAltRoot (mroot/floating-root-react-class AltRoot app))\n\n  ...\n\n  (some-js-library #js {:thing PlainAltRoot})\n\n  (defsc NormalFulcroClass [this props]\n    {:query [:stuff]\n     :ident (fn [] [:x 1])\n     ...}\n    (dom/div\n      ;; ok to use within defsc components:\n      (ui-alt-root)\n      ;; how to use the plain react class, which is how js libs would use it:\n      (dom/create-element PlainAltRoot)))\n\n  ```\n  \"\n  #?(:cljs (:require-macros [com.fulcrologic.fulcro.rendering.multiple-roots-renderer :refer [with-app-context]]))\n  (:require\n    [com.fulcrologic.fulcro.algorithms.denormalize :as fdn]\n    [com.fulcrologic.fulcro.algorithms.lookup :as ah]\n    [com.fulcrologic.fulcro.components :as comp]\n    [com.fulcrologic.fulcro.rendering.ident-optimized-render :as ior]\n    [com.fulcrologic.fulcro.rendering.keyframe-render :as kr]\n    [edn-query-language.core :as eql]\n    [taoensso.timbre :as log]\n    #?@(:cljs\n        [[\"react\" :as react]\n         [goog.object :as gobj]])))\n\n(defn register-root!\n  \"Register a mounted react component as a new root that should be managed. The\n  options map can contain:\n\n  - `:initialize?`: Should the initial state be pushed into the app state (if not already present)? Defaults\n  to true, which causes it to happen once (on initial mount).\"\n  ([react-instance]\n   (register-root! react-instance {:initialize? true}))\n  ([react-instance {:keys [app initialize?]}]\n   (let [app (or app (comp/any->app react-instance) comp/*app*)]\n     (if (map? app)\n       (let [class             (comp/react-type react-instance)\n             k                 (comp/class->registry-key class)\n             initialize-state! (ah/app-algorithm app :initialize-state!)\n             schedule-render!  (ah/app-algorithm app :schedule-render!)\n             known-roots       (some-> app :com.fulcrologic.fulcro.application/runtime-atom deref ::known-roots)\n             initialized?      (contains? known-roots k)]\n         (when (and initialize? (not initialized?))\n           (initialize-state! app class)\n           ;; We've already rendered this frame, so if we need initialized, we need a refresh\n           (schedule-render! app {:force-root? true}))\n         (log/debug \"Adding root of type \" k)\n         (swap! (:com.fulcrologic.fulcro.application/runtime-atom app) update-in [::known-roots k] (fnil conj #{}) react-instance))\n       (log/error \"Register-root cannot find app. Pass your Fulcro app via options. See https://book.fulcrologic.com/#err-mrr-reg-root-no-app\")))))\n\n(defn deregister-root!\n  \"Deregister a mounted root that should no longer be managed.\"\n  ([react-instance]\n   (deregister-root! react-instance {}))\n  ([react-instance {:keys [app] :as options}]\n   (let [app (or app (comp/any->app react-instance) comp/*app*)]\n     (if (map? app)\n       (let [class (comp/react-type react-instance)\n             k     (comp/class->registry-key class)]\n         (log/debug \"Adding root of type \" k)\n         (swap! (:com.fulcrologic.fulcro.application/runtime-atom app) update-in [::known-roots k] disj react-instance))\n       (log/error \"Deregister-root cannot find app. Pass your Fulcro app via options. See https://book.fulcrologic.com/#err-mrr-dereg-root-no-app\")))))\n\n(defn render-roots! [app options]\n  (let [state-map   (some-> app :com.fulcrologic.fulcro.application/state-atom deref)\n        known-roots (some-> app :com.fulcrologic.fulcro.application/runtime-atom deref ::known-roots)]\n    (kr/render! app options)\n    (doseq [k (keys known-roots)\n            :let [cls        (comp/registry-key->class k)\n                  query      (comp/get-query cls state-map)\n                  root-props (fdn/db->tree query state-map state-map)]]\n      (doseq [root (get known-roots k)]\n        (comp/tunnel-props! root root-props)))))\n\n(defn render-stale-components!\n  \"This function tracks the state of the app at the time of prior render in the app's runtime-atom. It\n   uses that to do a comparison of old vs. current application state (bounded by the needs of on-screen components).\n   When it finds data that has changed it renders all of the components that depend on that data.\"\n  [app options]\n  (let [{:com.fulcrologic.fulcro.application/keys [runtime-atom]} app\n        {:com.fulcrologic.fulcro.application/keys [only-refresh]} @runtime-atom\n        limited-refresh? (seq only-refresh)]\n    (if limited-refresh?\n      (let [{limited-idents true} (group-by eql/ident? only-refresh)]\n        (doseq [i limited-idents]\n          (ior/render-components-with-ident! app i)))\n      (render-roots! app options))))\n\n(defn render!\n  \"The top-level call for using this optimized render in your application.\n\n  If `:force-root? true` is passed in options, then it just forces a keyframe root render.\n\n  This renderer always does a keyframe render *unless* an `:only-refresh` option is passed to the stack\n  (usually as an option on `(transact! this [(f)] {:only-refresh [...idents...]})`. In that case the renderer\n  will ignore *all* data diffing and will target refresh only to the on-screen components that have the listed\n  ident(s). This allows you to get component-local state refresh rates on transactions that are responding to\n  events that should really only affect a known set of components (like the input field).\n\n  This option does *not* currently support using query keywords in the refresh set. Only idents.\"\n  ([app]\n   (render! app {}))\n  ([app {:keys [force-root? root-props-changed?] :as options}]\n   (if (or force-root? root-props-changed?)\n     (render-roots! app options)\n     (try\n       (render-stale-components! app options)\n       (catch #?(:clj Exception :cljs :default) e\n         (log/info \"Optimized render failed. Falling back to root render.\")\n         (render-roots! app options))))))\n\n#?(:clj\n   (defmacro with-app-context\n     \"Wraps the given body with the correct internal bindings of the given fulcro-app so that Fulcro internals\n     will work when that body is embedded in unusual ways.\n\n     You should use this around the render body of any floating root that will be rendered outside of\n     the synchronous fulcro render (e.g. you pass a floating root class to a React library).\n     \"\n     [fulcro-app & body]\n     (if-not (:ns &env)\n       `(do ~@body)\n       `(let [app# (or comp/*app* ~fulcro-app)\n              d#   (or comp/*depth* 0)]\n          (binding [comp/*app*    app#\n                    comp/*shared* (comp/shared app#)\n                    comp/*depth*  d#]\n            ~@body)))))\n\n(defn floating-root-react-class\n  \"Generate a plain React class that can render a Fulcro UIRoot. NOTE: The UIRoot must register/deregister itself\n  in the component lifecycle:\n\n  ```\n  (defsc UIRoot [this props]\n    {:componentDidMount     (fn [this] (mroot/register-root! this))\n     :componentWillUnmount  (fn [this] (mroot/deregister-root! this))\n     :initial-state {}\n     :query [root-like-query]}\n    ...)\n  ```\n\n  The `fulcro-app` is the app under which this root will be rendered. Create different factories if you have more than\n  one mounted app.\n  \"\n  [UIRoot fulcro-app]\n  (let [cls     (fn [])\n        ui-root (comp/computed-factory UIRoot)]\n    #?(:cljs\n       (gobj/extend (.-prototype cls) (.-prototype react/Component)\n         (clj->js\n           {:shouldComponentUpdate (fn [] false)\n            :render                (fn []\n                                     (this-as ^js this\n                                       (let [js-props (.-props this)]\n                                         (with-app-context fulcro-app\n                                           (binding [fdn/*denormalize-time* (-> fulcro-app :com.fulcrologic.fulcro.application/runtime-atom deref ::basis-t)]\n                                             (let [query     (comp/get-query UIRoot)\n                                                   state-map (some-> fulcro-app :com.fulcrologic.fulcro.application/state-atom deref)\n                                                   props     (fdn/db->tree query state-map state-map)]\n                                               (ui-root props {:js-props js-props})))))))})))\n    cls))\n\n(defn floating-root-factory\n  \"Create a factory that renders a floating root in a normal Fulcro context (body of a Fulcro component). This factory\n   has the same sync constraints as normal `component/factory` functions. See `components/with-parent-context`.\n\n  `UIClass`: A class that will behave as a floating root. NOTE: that class MUST have a mount/unmount hook\n  to regsiter/deregister itself as a root.\n\n  `options`: An options map. Same as for `component/factory`. Note, however, that this factory will *not* receive\n  props, so a `:keyfn` would have to be based on something else.\n\n  You normally do not pass any props to this factory because it is controlling the component and feeding props from\n  the database. Props sent to this factory are only used by the wrapper, however, `:react-key` is useful if you\n  have a bunch of sibling roots and need to set the react key for each.\n  \"\n  ([UIClass]\n   (floating-root-factory UIClass {}))\n  ([UIClass options]\n   (let [constructor     (fn [])\n         ui-factory      (comp/computed-factory UIClass)\n         render          (fn [this]\n                           (binding [fdn/*denormalize-time* (-> comp/*app* :com.fulcrologic.fulcro.application/runtime-atom deref ::basis-t)]\n                             (let [state-map (some-> comp/*app* :com.fulcrologic.fulcro.application/state-atom deref)\n                                   query     (comp/get-query UIClass state-map)\n                                   props     (fdn/db->tree query state-map state-map)]\n                               (ui-factory (or props {}) (comp/props this)))))\n         wrapper-class   (comp/configure-component! constructor ::wrapper\n                           {:shouldComponentUpdate (fn [_ _ _] false)\n                            :render                render})\n         wrapper-factory (comp/factory wrapper-class options)]\n     wrapper-factory)))\n","~:reader-features",["^I",["~:cljs"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings","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","names",["var_args","G__64590","com.fulcrologic.fulcro.rendering.multiple-roots-renderer/register-root!","js/Error","p__64591","map__64592","cljs.core/--destructure-map","cljs.core.get","react-instance","com.fulcrologic.fulcro.rendering.multiple_roots_renderer.register_root_BANG_","app","initialize?","or__5045__auto__","com.fulcrologic.fulcro.components/any->app","com.fulcrologic.fulcro.components/*app*","cljs.core/map?","class","com.fulcrologic.fulcro.components/react-type","k","com.fulcrologic.fulcro.components/class->registry-key","initialize-state!","com.fulcrologic.fulcro.algorithms.lookup/app-algorithm","schedule-render!","known-roots","G__64604","cljs.core/deref","initialized?","cljs.core/contains?","and__5043__auto__","G__64614","G__64615","taoensso.timbre._log_BANG_","taoensso.timbre/*config*","cljs.core/Delay","cljs.core.swap_BANG_","cljs.core/update-in","cljs.core.fnil","cljs.core/conj","G__64649","com.fulcrologic.fulcro.rendering.multiple-roots-renderer/deregister-root!","p__64668","map__64669","com.fulcrologic.fulcro.rendering.multiple_roots_renderer.deregister_root_BANG_","options","cljs.core/disj","com.fulcrologic.fulcro.rendering.multiple-roots-renderer/render-roots!","state-map","G__64714","G__64727","com.fulcrologic.fulcro.rendering.keyframe-render/render!","seq__64736","cljs.core/seq","chunk__64738","count__64739","i__64740","temp__5753__auto__","cljs.core/chunked-seq?","c__5568__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/count","cljs.core/first","cljs.core/next","cljs.core/keys","cls","com.fulcrologic.fulcro.components/registry-key->class","query","com.fulcrologic.fulcro.components.get_query","root-props","com.fulcrologic.fulcro.algorithms.denormalize/db->tree","seq__64864","chunk__64865","count__64866","i__64867","seq__64873","chunk__64874","count__64875","i__64876","root","com.fulcrologic.fulcro.components/tunnel-props!","com.fulcrologic.fulcro.rendering.multiple-roots-renderer/render-stale-components!","map__64879","map__64880","runtime-atom","only-refresh","limited-refresh?","map__64881","limited-idents","cljs.core/group-by","edn-query-language.core/ident?","seq__64882","chunk__64883","count__64884","i__64885","i","com.fulcrologic.fulcro.rendering.ident-optimized-render/render-components-with-ident!","G__64893","com.fulcrologic.fulcro.rendering.multiple-roots-renderer/render!","p__64896","map__64897","com.fulcrologic.fulcro.rendering.multiple_roots_renderer.render_BANG_","force-root?","root-props-changed?","e64898","e","com.fulcrologic.fulcro.rendering.multiple-roots-renderer/floating-root-react-class","UIRoot","fulcro-app","ui-root","com.fulcrologic.fulcro.components.computed_factory","com.fulcrologic.fulcro.rendering.multiple_roots_renderer.goog$module$goog$object.extend","js/module$node_modules$react$index.Component","cljs.core/clj->js","this","js-props","app__45130__auto__","d__45131__auto__","com.fulcrologic.fulcro.components/*depth*","*app*-orig-val__64905","*shared*-orig-val__64906","com.fulcrologic.fulcro.components/*shared*","*depth*-orig-val__64907","*app*-temp-val__64908","*shared*-temp-val__64909","com.fulcrologic.fulcro.components.shared","*depth*-temp-val__64910","*denormalize-time*-orig-val__64912","*denormalize-time*-temp-val__64913","com.fulcrologic.fulcro.algorithms.denormalize/*denormalize-time*","G__64914","props","G__64915","G__64917","G__64922","com.fulcrologic.fulcro.rendering.multiple-roots-renderer/floating-root-factory","UIClass","com.fulcrologic.fulcro.rendering.multiple_roots_renderer.floating_root_factory","constructor","ui-factory","render","*denormalize-time*-orig-val__64925","*denormalize-time*-temp-val__64926","G__64927","G__64929","G__64930","com.fulcrologic.fulcro.components/props","wrapper-class","com.fulcrologic.fulcro.components/configure-component!","_","wrapper-factory","com.fulcrologic.fulcro.components.factory"]],"~:used-vars",["^I",["~$cljs.core/--destructure-map","~$com.fulcrologic.fulcro.rendering.ident-optimized-render/render-components-with-ident!","~$cljs.core/keys","~$taoensso.timbre/-log!","~$edn-query-language.core/ident?","~$com.fulcrologic.fulcro.components/react-type","~$cljs.core/count","~$cljs.core/deref","~$com.fulcrologic.fulcro.components/props","~$cljs.core/seq","~$cljs.core/chunk-first","~$cljs.core/group-by","~$com.fulcrologic.fulcro.rendering.multiple-roots-renderer/floating-root-react-class","~$cljs.core/Delay","~$cljs.core/chunk-rest","~$com.fulcrologic.fulcro.rendering.multiple_roots_renderer.goog$module$goog$object.extend","~$com.fulcrologic.fulcro.rendering.multiple-roots-renderer/register-root!","~$cljs.core/fnil","~$cljs.core/contains?","~$cljs.core/map?","~$cljs.core/conj","~$taoensso.timbre/*config*","~$cljs.core/swap!","~$com.fulcrologic.fulcro.rendering.multiple-roots-renderer/render-roots!","~$com.fulcrologic.fulcro.components/shared","~$cljs.core/get","~$com.fulcrologic.fulcro.components/*app*","~$cljs.core/-nth","~$com.fulcrologic.fulcro.rendering.multiple-roots-renderer/render-stale-components!","~$com.fulcrologic.fulcro.components/*shared*","~$cljs.core/clj->js","~$com.fulcrologic.fulcro.algorithms.denormalize/db->tree","~$com.fulcrologic.fulcro.components/any->app","~$com.fulcrologic.fulcro.components/tunnel-props!","~$com.fulcrologic.fulcro.components/configure-component!","~$com.fulcrologic.fulcro.components/*depth*","~$com.fulcrologic.fulcro.rendering.multiple-roots-renderer/deregister-root!","~$cljs.core/next","~$com.fulcrologic.fulcro.rendering.keyframe-render/render!","~$com.fulcrologic.fulcro.components/get-query","~$com.fulcrologic.fulcro.rendering.multiple-roots-renderer/floating-root-factory","~$com.fulcrologic.fulcro.components/registry-key->class","~$com.fulcrologic.fulcro.components/factory","~$cljs.core/not","~$com.fulcrologic.fulcro.algorithms.lookup/app-algorithm","~$cljs.core/disj","~$com.fulcrologic.fulcro.components/computed-factory","~$com.fulcrologic.fulcro.algorithms.denormalize/*denormalize-time*","~$com.fulcrologic.fulcro.components/class->registry-key","~$cljs.core/first","~$com.fulcrologic.fulcro.rendering.multiple-roots-renderer/render!","~$js/module$node_modules$react$index.Component","~$cljs.core/update-in","~$js/Error","~$cljs.core/chunked-seq?"]]],"~:cache-keys",["~#cmap",[["~:shadow.build.npm/resource","node_modules/react-dom/index.js"],["95489a89fcf69ff5d55328ddf571406285eebad5","84bdd29dc1ad7f36c15a36e5014f153db42265ce","dc3011a0ee823c91a565237d17cbc3c0856de8a6","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^I",[]],"~:deps-syms",["~$shadow.js","~$module$node_modules$react_dom$cjs$react_dom_production_min","~$module$node_modules$react_dom$cjs$react_dom_development"]]],["^1M","goog/dom/tagname.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","~$goog.dom.HtmlElement"]]],["^1M","goog/async/freelist.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?"]]],["^1M","cljs/core/async/impl/ioc_helpers.cljs"],["134b1e0eac15fdd1718f8a8ddacbb0902961558f","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","^1<","~$cljs.core.async.impl.protocols"]]],["^1M","goog/i18n/datetimesymbols.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","~$goog.i18n.cldrversion"]]],["^1M","goog/labs/useragent/platform.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","~$goog.string.internal","~$goog.labs.userAgent.util","~$goog.labs.userAgent.highEntropy.highEntropyValue","~$goog.labs.userAgent.highEntropy.highEntropyData","~$goog.labs.userAgent"]]],["^1M","expound/util.cljc"],["5294f6b31a2cfa6ffbe5021d9390c738fb471927","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","^1<","^@"]]],["^1M","goog/crypt/crypt.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","~$goog.asserts","~$goog.async.throwException"]]],["^1M","cljs/core/async.cljs"],["134b1e0eac15fdd1718f8a8ddacbb0902961558f","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","^1<","^3C","~$cljs.core.async.impl.channels","~$cljs.core.async.impl.buffers","~$cljs.core.async.impl.timers","~$cljs.core.async.impl.dispatch","~$cljs.core.async.impl.ioc-helpers","~$goog.array"]]],["^1M","goog/timer/timer.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","~$goog.Promise","~$goog.events.EventTarget"]]],["^1M","com/fulcrologic/fulcro/algorithms/lookup.cljc"],["aa10be524799b8f5dcb1cab659b996577fc15d41","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","^1<","^12"]]],["^1M","cljs/spec/gen/alpha.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","^1<","~$goog.Uri"]]],["^1M","cljs/tools/reader/impl/utils.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","^1<","~$clojure.string","~$goog.string"]]],["^1M","goog/math/math.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","^3J"]]],["^1M","goog/html/trustedtypes.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?"]]],["^1M","goog/string/stringformat.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","^3V"]]],["^1M","goog/events/eventtype.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","~$goog.events.eventTypeHelpers","~$goog.userAgent"]]],["^1M","goog/labs/useragent/browser.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","^3F","^3G","^3J","^3E","^3H","^3I"]]],["^1M","goog/html/safeurl.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","^3J","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.string.Const","~$goog.string.TypedString","^3E"]]],["^1M","goog/array/array.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","^3J"]]],["^1M","com/fulcrologic/fulcro/algorithms/do_not_use.cljc"],["aa10be524799b8f5dcb1cab659b996577fc15d41","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","^1<","^12","^3U","^10","^1>","~$goog.crypt","~$goog.crypt.base64","^@"]]],["^1M","expound/problems.cljc"],["5294f6b31a2cfa6ffbe5021d9390c738fb471927","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","^1<","~$expound.paths","^@"]]],["^1M","goog/useragent/useragent.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","~$goog.labs.userAgent.browser","~$goog.labs.userAgent.engine","~$goog.labs.userAgent.platform","^3F","~$goog.reflect","^3E"]]],["^1M","goog/structs/prioritypool.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","~$goog.structs.Pool","~$goog.structs.PriorityQueue"]]],["^1M","goog/async/run.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","~$goog.async.WorkQueue","~$goog.debug.asyncStackTag","~$goog.async.nextTick","^3K"]]],["^1M","com/cognitect/transit/impl/reader.js"],["f8b4f570ca4d41649190efecac27a5932cc11429","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","~$com.cognitect.transit.impl.decoder","~$com.cognitect.transit.caching"]]],["^1M","goog/debug/error.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?"]]],["^1M","goog/async/workqueue.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","~$goog.async.FreeList","^3J"]]],["^1M","goog/flags/flags.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?"]]],["^1M","goog/events/events.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","^3J","~$goog.debug.entryPointRegistry","~$goog.events.BrowserEvent","~$goog.events.BrowserFeature","~$goog.events.Listenable","~$goog.events.ListenerMap"]]],["^1M","goog/promise/resolver.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?"]]],["^1M","goog/events/browserfeature.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?"]]],["^1M","cljs/tools/reader/edn.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","^1<","~$cljs.tools.reader.impl.errors","~$cljs.tools.reader.reader-types","~$cljs.tools.reader.impl.utils","~$cljs.tools.reader.impl.commons","~$cljs.tools.reader","^3V","~$goog.string.StringBuffer"]]],["^1M","goog/structs/priorityqueue.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","~$goog.structs.Heap"]]],["^1M","goog/net/xhrio.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","~$goog.Timer","^3Q","^3J","~$goog.collections.maps","^4@","^3S","~$goog.json.hybrid","~$goog.log","~$goog.net.ErrorCode","~$goog.net.EventType","~$goog.net.HttpStatus","~$goog.net.XmlHttp","^1>","^3V","~$goog.uri.utils","^3X"]]],["^1M","goog/promise/thenable.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?"]]],["^1M","goog/collections/iters.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?"]]],["^1M","com/fulcrologic/fulcro/algorithms/transit.cljc"],["aa10be524799b8f5dcb1cab659b996577fc15d41","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","^1<","~$cognitect.transit","~$com.fulcrologic.guardrails.core","^@","~$com.fulcrologic.fulcro.algorithms.tempid"]]],["^1M","goog/dom/nodetype.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?"]]],["^1M","com/fulcrologic/guardrails/utils.cljc"],["1c3188d13b2f3b2324bad6f65cc78cd4b193445e","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","^1<","~$clojure.walk"]]],["^1M","cljs/tools/reader/impl/inspect.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","^1<"]]],["^1M","com/cognitect/transit/util.js"],["f8b4f570ca4d41649190efecac27a5932cc11429","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","^1>"]]],["^1M","goog/labs/useragent/highentropy/highentropyvalue.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","^3F","^3E"]]],["^1M","cljs/pprint.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","^1<","^3U","^3V","^4J"]]],["^1M","cljs/tools/reader.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","^1<","^4F","^4G","^4H","^4E","^3Q","^3V","^4J"]]],["^1M","expound/alpha.cljc"],["5294f6b31a2cfa6ffbe5021d9390c738fb471927","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","^1<","~$expound.problems","^@","^3U","~$clojure.set","~$expound.printer","~$expound.util","~$expound.ansi"]]],["^1M","taoensso/timbre.cljc"],["ed86c0ab3cf1c4771c5f9bf201405e20c3027ced","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","^1<","^3U","~$goog.i18n.DateTimeFormat","~$taoensso.encore","~$taoensso.timbre.appenders.core"]]],["^3:","node_modules/scheduler/cjs/scheduler.development.js"],["95489a89fcf69ff5d55328ddf571406285eebad5","84bdd29dc1ad7f36c15a36e5014f153db42265ce","44159dfbe389867d6afda50df7f91996366d7206","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^3?"]]],["^1M","goog/net/wrapperxmlhttpfactory.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","~$goog.net.XhrLike","~$goog.net.XmlHttpFactory"]]],["^1M","goog/date/utcdatetime.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","~$goog.date","~$goog.date.Date","~$goog.date.DateTime","~$goog.date.Interval"]]],["^3:","node_modules/scheduler/cjs/scheduler.production.min.js"],["95489a89fcf69ff5d55328ddf571406285eebad5","84bdd29dc1ad7f36c15a36e5014f153db42265ce","e6921f21dd5fc2f4be8cf3c0d6b1b5c611fa4fcd","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^3?"]]],["^1M","goog/i18n/nativelocaledigits.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?"]]],["^1M","goog/events/eventtarget.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","~$goog.Disposable","^3J","~$goog.events","~$goog.events.Event","^4C","^4D","^1>"]]],["^1M","com/fulcrologic/guardrails/core.cljc"],["1c3188d13b2f3b2324bad6f65cc78cd4b193445e","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","^1<","~$com.fulcrologic.guardrails.impl.externs","~$com.fulcrologic.guardrails.utils","^B","^@","^3U","~$expound.alpha"]]],["^1M","goog/disposable/disposable.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","~$goog.disposable.IDisposable","~$goog.dispose","~$goog.disposeAll"]]],["^1M","expound/ansi.cljc"],["5294f6b31a2cfa6ffbe5021d9390c738fb471927","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","^1<","^3U"]]],["^1M","goog/string/typedstring.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?"]]],["^3:","node_modules/react/index.js"],["95489a89fcf69ff5d55328ddf571406285eebad5","84bdd29dc1ad7f36c15a36e5014f153db42265ce","a69a7f3d4a4636bf9035bc53c05b2d99a7b8af7f","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^3?","~$module$node_modules$react$cjs$react_production_min","~$module$node_modules$react$cjs$react_development"]]],["^1M","shadow/js.js"],["409b887858ac3838697e7a1c6e019c62bc4e5814","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?"]]],["^1M","goog/object/object.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?"]]],["^1M","goog/dom/asserts.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","^3J"]]],["^1M","taoensso/encore.cljc"],["8ce32d99c08a853f8a56322b5aab80e59c3bd4d6","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","^1<","^3U","^4Z","~$cljs.reader","~$cljs.tools.reader.edn","^1>","^3Q","^3V","~$goog.string.format","^4J","^5<","~$goog.net.XhrIo","~$goog.net.XhrIoPool","~$goog.Uri.QueryData","^4Q","^4P","~$taoensso.truss"]]],["^3:","node_modules/react-dom/cjs/react-dom.production.min.js"],["95489a89fcf69ff5d55328ddf571406285eebad5","84bdd29dc1ad7f36c15a36e5014f153db42265ce","16d835d02619d41be201ba16f57c616d0503da6d","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^3?","^V","~$module$node_modules$scheduler$index"]]],["^1M","goog/structs/set.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","~$goog.structs","~$goog.structs.Collection","~$goog.structs.Map"]]],"~:SHADOW-TIMESTAMP",[1689298966000,1689298966000,1689298966000],["^3:","node_modules/react/cjs/react.development.js"],["95489a89fcf69ff5d55328ddf571406285eebad5","84bdd29dc1ad7f36c15a36e5014f153db42265ce","1df918e8981877c2759388dfae58a059e089860d","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^3?"]]],["^1M","taoensso/timbre/appenders/core.cljc"],["ed86c0ab3cf1c4771c5f9bf201405e20c3027ced","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","^1<","^3U","^53"]]],["^1M","goog/math/long.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","^3J","^47"]]],["^1M","goog/events/listener.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","~$goog.events.ListenableKey"]]],["^1M","goog/html/trustedresourceurl.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","^3J","~$goog.fs.blob","^3Y","~$goog.html.SafeScript","~$goog.html.trustedtypes","^3[","^40"]]],["^1M","cljs/core/async/impl/channels.cljs"],["134b1e0eac15fdd1718f8a8ddacbb0902961558f","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","^1<","^3C","^3O","^3M"]]],["^1M","goog/events/listenermap.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","^3Q","~$goog.events.Listener","^1>"]]],["^1M","goog/events/eventid.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?"]]],["^1M","taoensso/truss.cljs"],["02c08dae83153a50eb946c4d742f574a24bb2a76","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","^1<","~$taoensso.truss.impl"]]],["^1M","com/fulcrologic/guardrails/registry.cljc"],["1c3188d13b2f3b2324bad6f65cc78cd4b193445e","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","^1<"]]],["^1M","goog/string/internal.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?"]]],["^1M","edn_query_language/core.cljc"],["839028d06d9cc88b18b20c77c53a2bb77140d1f7","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","^1<","^@"]]],["^1M","goog/functions/functions.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?"]]],["^1M","com/fulcrologic/fulcro/rendering/multiple_roots_renderer.cljc"],["aa10be524799b8f5dcb1cab659b996577fc15d41","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","^1<","^1:","^[","^18","^14","^16","^10","^12","^V","^1>"]]],["^1M","cljs/core/async/impl/dispatch.cljs"],["134b1e0eac15fdd1718f8a8ddacbb0902961558f","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","^1<","^3M","^4<"]]],["^1M","goog/html/safestyle.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","^3[","~$goog.html.SafeUrl","^40","^3J","^3E"]]],["^1M","goog/dom/safe.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","^3J","~$goog.asserts.dom","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","^5T","~$goog.html.SafeStyle","^5X","^3Z","~$goog.html.uncheckedconversions","^3[","^3E"]]],["^1M","goog/asserts/dom.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","~$goog.dom.TagName","^3J","~$goog.dom.element"]]],["^1M","goog/i18n/dayperiodsymbols.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?"]]],["^1M","expound/paths.cljc"],["5294f6b31a2cfa6ffbe5021d9390c738fb471927","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","^1<","^@","^50"]]],["^1M","taoensso/truss/impl.cljs"],["02c08dae83153a50eb946c4d742f574a24bb2a76","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","^1<","^4Z"]]],["^1M","clojure/walk.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","^1<"]]],["^1M","goog/useragent/product.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","^44","^46","^3X"]]],["^1M","cljs/core/async/impl/protocols.cljs"],["134b1e0eac15fdd1718f8a8ddacbb0902961558f","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","^1<"]]],["^1M","goog/net/eventtype.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?"]]],["^1M","goog/structs/map.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","~$goog.collections.iters","~$goog.iter","~$goog.iter.Iterator","~$goog.iter.es6"]]],["^1M","goog/net/xhriopool.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","^5I","~$goog.structs.PriorityPool"]]],["^1M","com/cognitect/transit/delimiters.js"],["f8b4f570ca4d41649190efecac27a5932cc11429","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?"]]],["^1M","goog/date/date.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","^3J","~$goog.i18n.DateTimeSymbols","^3V"]]],["^1M","goog/html/safehtml.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","^3[","^5T","^61","~$goog.html.SafeStyleSheet","^5X","^63","^3Z","^40","^3J","^44","^3Q","^1>","^3E","~$goog.dom.tags","^5U"]]],["^1M","goog/dom/tags.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","^1>"]]],["^1M","goog/math/size.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?"]]],["^1M","com/fulcrologic/fulcro/raw/components.cljc"],["aa10be524799b8f5dcb1cab659b996577fc15d41","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","^1<","^1>","^4Z","^3U","^4X","^1:","~$com.fulcrologic.fulcro.algorithms.do-not-use","^[","~$com.fulcrologic.fulcro.algorithms.transit","^10","^53","^12"]]],["^3:","node_modules/scheduler/index.js"],["95489a89fcf69ff5d55328ddf571406285eebad5","84bdd29dc1ad7f36c15a36e5014f153db42265ce","408126fc2241739168bcaf5965ae56a7df143144","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^3?","~$module$node_modules$scheduler$cjs$scheduler_production_min","~$module$node_modules$scheduler$cjs$scheduler_development"]]],["^1M","goog/structs/queue.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","^3Q"]]],["^1M","goog/labs/useragent/engine.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","^3Q","^3E","^3F"]]],["^1M","com/cognitect/transit/impl/decoder.js"],["f8b4f570ca4d41649190efecac27a5932cc11429","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","~$com.cognitect.transit.util","~$com.cognitect.transit.delimiters","^4>","~$com.cognitect.transit.types"]]],["^1M","goog/fs/blob.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?"]]],["^1M","cljs/reader.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","^1<","^1>","^4I","^5G","^4J"]]],["^1M","goog/dom/dom.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","^3Q","^3J","^5Y","~$goog.dom.BrowserFeature","~$goog.dom.NodeType","^63","~$goog.dom.safe","^60","^62","~$goog.math.Coordinate","~$goog.math.Size","^1>","^3V","^3[","~$goog.string.Unicode","^3X"]]],["^1M","com/fulcrologic/guardrails/impl/externs.cljc"],["1c3188d13b2f3b2324bad6f65cc78cd4b193445e","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","^1<","~$com.fulcrologic.guardrails.registry","^5?"]]],["^1M","com/fulcrologic/fulcro/components.cljc"],["aa10be524799b8f5dcb1cab659b996577fc15d41","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","^1<","^1>","^V","^10","^@","^12","^4X","^3U","^6=","^1:","^[","~$com.fulcrologic.fulcro.raw.components","^4V","^4Z"]]],["^1M","goog/asserts/asserts.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","~$goog.debug.Error","^6E"]]],["^1M","cljs/core/async/impl/buffers.cljs"],["134b1e0eac15fdd1718f8a8ddacbb0902961558f","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","^1<","^3C"]]],["^1M","goog/i18n/timezone.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","^3Q","^1>","^3V"]]],["^1M","goog/uri/uri.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","^3Q","^3J","^4M","^3V","^5N","^4T","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1M","goog/i18n/cldrversion.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?"]]],["^1M","goog/net/errorcode.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?"]]],["^1M","goog/labs/useragent/highentropy/highentropydata.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","^3G"]]],["^1M","goog/collections/maps.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?"]]],["^1M","goog/iter/es6.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","~$goog.iter.Iterable","^67"]]],["^1M","goog/events/eventtypehelpers.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","^4B","^3X"]]],["^1M","goog/debug/asyncstacktag.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","^3J"]]],["^1M","goog/disposable/idisposable.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?"]]],["^1M","goog/promise/promise.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","~$goog.Thenable","^3J","^4?","~$goog.async.run","^3K","^6L","^4;","^5[","~$goog.promise.Resolver"]]],["^1M","cljs/core/async/impl/timers.cljs"],["134b1e0eac15fdd1718f8a8ddacbb0902961558f","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","^1<","^3C","^3L","^3O"]]],["^1M","cljs/spec/alpha.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","^1<","^1>","^4X","~$cljs.spec.gen.alpha","^3U"]]],["^1M","goog/fs/url.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?"]]],["^1M","goog/base.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",[]]],["^1M","goog/json/hybrid.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","^3J","~$goog.json"]]],["^1M","goog/structs/structs.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","^3Q","^1>"]]],["^1M","cljs/tools/reader/impl/errors.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","^1<","^4F","^3U","~$cljs.tools.reader.impl.inspect"]]],["^1M","goog/disposable/dispose.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?"]]],["^1M","clojure/string.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","^1<","^3V","^4J"]]],["^1M","com/fulcrologic/fulcro/algorithms/tempid.cljc"],["aa10be524799b8f5dcb1cab659b996577fc15d41","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","^1<","^12","^4X"]]],["^1M","goog/structs/pool.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","^5;","~$goog.structs.Queue","~$goog.structs.Set"]]],["^3:","node_modules/react/cjs/react.production.min.js"],["95489a89fcf69ff5d55328ddf571406285eebad5","84bdd29dc1ad7f36c15a36e5014f153db42265ce","f5f2e0db62a5ce44eafff60d4f3577b8796734e4","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^3?"]]],["^1M","goog/net/httpstatus.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?"]]],["^1M","goog/i18n/datetimeformat.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","^3J","^57","~$goog.date.UtcDateTime","^6:","~$goog.i18n.DayPeriods","~$goog.i18n.LocaleFeature","~$goog.i18n.NativeLocaleDigits","~$goog.i18n.TimeZone","^3V"]]],["^1M","com/cognitect/transit/handlers.js"],["f8b4f570ca4d41649190efecac27a5932cc11429","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","^6A","^6C","~$goog.math.Long"]]],["^1M","goog/structs/heap.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","~$goog.structs.Node","^1>"]]],["^1M","goog/debug/entrypointregistry.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","^3J"]]],["^1M","goog/string/string.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","^6F","^62","^3[","^3E"]]],["^1M","com/cognitect/transit/types.js"],["f8b4f570ca4d41649190efecac27a5932cc11429","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","^6A","~$com.cognitect.transit.eq","^71"]]],["^1M","goog/reflect/reflect.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?"]]],["^1M","com/fulcrologic/fulcro/rendering/keyframe_render.cljc"],["aa10be524799b8f5dcb1cab659b996577fc15d41","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","^1<","~$module$node_modules$react_dom$index","^1:","^[","^18","^12"]]],["^1M","goog/labs/useragent/util.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","^3E","^3I"]]],["^1M","expound/printer.cljc"],["5294f6b31a2cfa6ffbe5021d9390c738fb471927","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","^1<","^3U","^@","^D","^4Z","^50","^51","^43","^4X","^5H","^3V"]]],["^1M","com/cognitect/transit/eq.js"],["f8b4f570ca4d41649190efecac27a5932cc11429","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","^6A"]]],["^1M","goog/debug/debug.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","^3Q","~$goog.debug.errorcontext"]]],["^1M","goog/string/stringbuffer.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?"]]],["^1M","goog/math/coordinate.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","~$goog.math"]]],["^1M","goog/debug/errorcontext.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?"]]],["^1M","cljs/tools/reader/reader_types.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","^1<","^4G","^3V","^4J"]]],["^1M","goog/iter/iter.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","^3Q","^3J","~$goog.debug","^5[","^76"]]],["^1M","goog/labs/useragent/useragent.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","~$goog.flags"]]],["^1M","goog/async/nexttick.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","^4@","~$goog.dom","^63","^5[","^44","^45"]]],["^1M","goog/dom/element.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","^6E","^63"]]],["^1M","goog/html/uncheckedconversions.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","^3J","^60","^5T","^61","^6;","^5X","^3Z","^3[","^3E"]]],["^1M","com/cognitect/transit/caching.js"],["f8b4f570ca4d41649190efecac27a5932cc11429","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","^6B"]]],["^1M","goog/events/event.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","^5;","~$goog.events.EventId"]]],["^1M","cljs/tools/reader/impl/commons.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","^1<","^4E","^4F","^4G"]]],["^1M","goog/dom/htmlelement.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?"]]],["^1M","cljs/core.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","^71","~$goog.math.Integer","^3V","^1>","^3Q","^3T","^4J"]]],["^1M","com/cognitect/transit.js"],["f8b4f570ca4d41649190efecac27a5932cc11429","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","^6A","~$com.cognitect.transit.impl.reader","~$com.cognitect.transit.impl.writer","^6C","^73","^4=","^4>"]]],["^1M","goog/html/safescript.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","^3[","^40","^5U","^3J"]]],["^1M","goog/log/log.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","^3J","^77"]]],["^1M","goog/async/throwexception.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?"]]],["^1M","goog/html/safestylesheet.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","^3[","^61","^40","^1>","^3J","^3E"]]],["^1M","goog/structs/collection.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?"]]],["^1M","goog/events/browserevent.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","^77","^5=","~$goog.events.EventType","^47","^3X"]]],["^1M","goog/math/integer.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","^47"]]],["^1M","goog/structs/node.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?"]]],["^1M","goog/dom/browserfeature.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","^3X"]]],["^3:","node_modules/react-dom/cjs/react-dom.development.js"],["95489a89fcf69ff5d55328ddf571406285eebad5","84bdd29dc1ad7f36c15a36e5014f153db42265ce","47cafc93ea89646f98180be561302225fa2b868d","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^3?","^V","^5M"]]],["^1M","clojure/set.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","^1<"]]],["^1M","goog/uri/utils.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","^3J","^3V"]]],["^1M","goog/string/const.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","^3J","^40"]]],["^1M","goog/disposable/disposeall.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","^5B"]]],["^1M","com/fulcrologic/fulcro/rendering/ident_optimized_render.cljc"],["aa10be524799b8f5dcb1cab659b996577fc15d41","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","^1<","^16","^1:","^18","^4Z","^10","^12"]]],["^1M","goog/json/json.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?"]]],["^1M","goog/i18n/localefeature.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?"]]],["^1M","goog/events/listenable.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?"]]],["^1M","goog/events/listenablekey.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?"]]],["^1M","com/cognitect/transit/impl/writer.js"],["f8b4f570ca4d41649190efecac27a5932cc11429","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","^6A","^4>","~$com.cognitect.transit.handlers","^6C","^6B","^71"]]],["^1M","goog/net/xmlhttpfactory.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","^55"]]],["^1M","com/fulcrologic/fulcro/algorithms/denormalize.cljc"],["aa10be524799b8f5dcb1cab659b996577fc15d41","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","^1<","^4Z","^10","^12"]]],["^1M","goog/net/xmlhttp.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","^3J","~$goog.net.WrapperXmlHttpFactory","^56"]]],["^1M","goog/net/xhrlike.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?"]]],["^1M","cognitect/transit.cljs"],["98d11d81caee82f97b9417025750b785fb6ecb16","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","^1<","^4Z","~$com.cognitect.transit","^6C","^73","^1>","^71"]]],["^1M","goog/crypt/base64.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^3;",["^ ","^3<",null,"^3=",["^I",[]],"^3>",["^1?","^3J","^41","^3E","^3X","~$goog.userAgent.product"]]]]],"~:clj-info",["^ ","jar:file:/Users/alejandroherrera/.m2/repository/com/fulcrologic/fulcro/3.5.9/fulcro-3.5.9.jar!/com/fulcrologic/fulcro/algorithms/transit.cljc",1689292469000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/core.async/1.5.648/core.async-1.5.648.jar!/clojure/core/async.clj",1689298966000,"jar:file:/Users/alejandroherrera/.m2/repository/io/aviso/pretty/0.1.37/pretty-0.1.37.jar!/io/aviso/exception.clj",1689258836000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/core.async/1.5.648/core.async-1.5.648.jar!/cljs/core/async.clj",1689298966000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/default_data_readers.clj",1689298966000,"jar:file:/Users/alejandroherrera/.m2/repository/com/fulcrologic/guardrails/1.1.4/guardrails-1.1.4.jar!/com/fulcrologic/guardrails/registry.cljc",1689292466000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/core.async/1.5.648/core.async-1.5.648.jar!/cljs/core/async/impl/ioc_macros.clj",1689298966000,"jar:file:/Users/alejandroherrera/.m2/repository/com/fulcrologic/guardrails/1.1.4/guardrails-1.1.4.jar!/com/fulcrologic/guardrails/config.cljc",1689292466000,"jar:file:/Users/alejandroherrera/.m2/repository/expound/expound/0.9.0/expound-0.9.0.jar!/expound/problems.cljc",1689298964000,"jar:file:/Users/alejandroherrera/.m2/repository/binaryage/devtools/1.0.4/devtools-1.0.4.jar!/devtools/defaults.clj",1689298965000,"jar:file:/Users/alejandroherrera/.m2/repository/com/taoensso/truss/1.6.0/truss-1.6.0.jar!/taoensso/truss/impl.clj",1689258840000,"jar:file:/Users/alejandroherrera/.m2/repository/com/fulcrologic/fulcro/3.5.9/fulcro-3.5.9.jar!/com/fulcrologic/fulcro/rendering/ident_optimized_render.cljc",1689292469000,"jar:file:/Users/alejandroherrera/.m2/repository/com/fulcrologic/fulcro/3.5.9/fulcro-3.5.9.jar!/com/fulcrologic/fulcro/components.cljc",1689292469000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/core.async/1.5.648/core.async-1.5.648.jar!/clojure/core/async/impl/ioc_macros.clj",1689298966000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/pprint.clj",1689292450000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader.clj",1689298966000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/instant.clj",1689292450000,"jar:file:/Users/alejandroherrera/.m2/repository/com/fulcrologic/fulcro/3.5.9/fulcro-3.5.9.jar!/com/fulcrologic/fulcro/rendering/multiple_roots_renderer.cljc",1689292469000,"jar:file:/Users/alejandroherrera/.m2/repository/expound/expound/0.9.0/expound-0.9.0.jar!/expound/paths.cljc",1689298964000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/impl/inspect.clj",1689298966000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/data/json.clj",1689298966000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/passes/and_or.cljc",1689298966000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/spec.alpha/0.2.194/spec.alpha-0.2.194.jar!/clojure/spec/gen/alpha.clj",1689292448000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/tools.analyzer.jvm/1.2.2/tools.analyzer.jvm-1.2.2.jar!/clojure/tools/analyzer/jvm.clj",1689298964000,"jar:file:/Users/alejandroherrera/.m2/repository/com/taoensso/timbre/5.1.1/timbre-5.1.1.jar!/taoensso/timbre.cljc",1689292470000,"jar:file:/Users/alejandroherrera/.m2/repository/com/fulcrologic/guardrails/1.1.4/guardrails-1.1.4.jar!/com/fulcrologic/guardrails/core.cljc",1689292466000,"jar:file:/Users/alejandroherrera/.m2/repository/com/fulcrologic/guardrails/1.1.4/guardrails-1.1.4.jar!/com/fulcrologic/guardrails/impl/pro.cljc",1689292466000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/impl/errors.clj",1689298966000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/impl/inspect.clj",1689258845000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/tools.analyzer.jvm/1.2.2/tools.analyzer.jvm-1.2.2.jar!/clojure/tools/analyzer/jvm/utils.clj",1689298964000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/reader.clj",1689298966000,"jar:file:/Users/alejandroherrera/.m2/repository/com/fulcrologic/guardrails/1.1.4/guardrails-1.1.4.jar!/com/fulcrologic/guardrails/impl/parser.clj",1689292466000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/core.clj",1689292450000,"jar:file:/Users/alejandroherrera/.m2/repository/com/taoensso/timbre/5.1.1/timbre-5.1.1.jar!/taoensso/timbre/appenders/core.cljc",1689292470000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/stacktrace.clj",1689292450000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/impl/errors.clj",1689258845000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/core.async/1.5.648/core.async-1.5.648.jar!/clojure/core/async/impl/mutex.clj",1689298966000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/core.async/1.5.648/core.async-1.5.648.jar!/clojure/core/async/impl/buffers.clj",1689298966000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/java/io.clj",1689292450000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/tools.analyzer/1.1.0/tools.analyzer-1.1.0.jar!/clojure/tools/analyzer/utils.clj",1689258834000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer.cljc",1689298966000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/default_data_readers.clj",1689258845000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/reader_types.clj",1689298966000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/passes.cljc",1689298966000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/compiler.cljc",1689298966000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/core.async/1.5.648/core.async-1.5.648.jar!/clojure/core/async/impl/dispatch.clj",1689298966000,"jar:file:/Users/alejandroherrera/.m2/repository/expound/expound/0.9.0/expound-0.9.0.jar!/expound/ansi.cljc",1689298964000,"jar:file:/Users/alejandroherrera/.m2/repository/expound/expound/0.9.0/expound-0.9.0.jar!/expound/printer.cljc",1689298964000,"jar:file:/Users/alejandroherrera/.m2/repository/com/fulcrologic/guardrails/1.1.4/guardrails-1.1.4.jar!/com/fulcrologic/guardrails/impl/externs.cljc",1689292466000,"jar:file:/Users/alejandroherrera/.m2/repository/com/fulcrologic/fulcro/3.5.9/fulcro-3.5.9.jar!/com/fulcrologic/fulcro/raw/components.cljc",1689292469000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/util.cljc",1689298966000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/core.async/1.5.648/core.async-1.5.648.jar!/clojure/core/async/impl/timers.clj",1689298966000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/externs.clj",1689298966000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/pprint.cljc",1689298966000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/spec.alpha/0.2.194/spec.alpha-0.2.194.jar!/clojure/spec/alpha.clj",1689292448000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/walk.clj",1689292450000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/source_map/base64.clj",1689298966000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/tools.analyzer/1.1.0/tools.analyzer-1.1.0.jar!/clojure/tools/analyzer.clj",1689258834000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/impl.cljc",1689298966000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/edn.clj",1689292450000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/edn.clj",1689258845000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/tools.analyzer/1.1.0/tools.analyzer-1.1.0.jar!/clojure/tools/analyzer/ast.clj",1689258834000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/set.clj",1689292450000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/spec/gen/alpha.cljc",1689298966000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/string.clj",1689292450000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/core.async/1.5.648/core.async-1.5.648.jar!/clojure/core/async/impl/protocols.clj",1689298966000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/core.async/1.5.648/core.async-1.5.648.jar!/clojure/core/async/impl/concurrent.clj",1689298966000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/impl/namespaces.cljc",1689298966000,"jar:file:/Users/alejandroherrera/.m2/repository/com/fulcrologic/guardrails/1.1.4/guardrails-1.1.4.jar!/com/fulcrologic/guardrails/utils.cljc",1689292466000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/core.async/1.5.648/core.async-1.5.648.jar!/clojure/core/async/impl/exec/threadpool.clj",1689298966000,"jar:file:/Users/alejandroherrera/.m2/repository/com/fulcrologic/fulcro/3.5.9/fulcro-3.5.9.jar!/com/fulcrologic/fulcro/algorithms/lookup.cljc",1689292469000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/main.clj",1689292450000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/core.cljc",1689298966000,"jar:file:/Users/alejandroherrera/.m2/repository/io/aviso/pretty/0.1.37/pretty-0.1.37.jar!/io/aviso/ansi.clj",1689258836000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/tagged_literals.cljc",1689298966000,"jar:file:/Users/alejandroherrera/.m2/repository/edn-query-language/eql/1.0.1/eql-1.0.1.jar!/edn_query_language/core.cljc",1689292466000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/instant.clj",1689298966000,"jar:file:/Users/alejandroherrera/.m2/repository/com/taoensso/truss/1.6.0/truss-1.6.0.jar!/taoensso/truss.clj",1689258840000,"jar:file:/Users/alejandroherrera/.m2/repository/com/fulcrologic/fulcro/3.5.9/fulcro-3.5.9.jar!/com/fulcrologic/fulcro/algorithms/do_not_use.cljc",1689292469000,"jar:file:/Users/alejandroherrera/.m2/repository/com/fulcrologic/fulcro/3.5.9/fulcro-3.5.9.jar!/com/fulcrologic/fulcro/algorithms/denormalize.cljc",1689292469000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader.clj",1689258845000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/reflect.clj",1689292450000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/spec/alpha.cljc",1689298966000,"jar:file:/Users/alejandroherrera/.m2/repository/com/cognitect/transit-clj/1.0.329/transit-clj-1.0.329.jar!/cognitect/transit.clj",1689298965000,"jar:file:/Users/alejandroherrera/.m2/repository/expound/expound/0.9.0/expound-0.9.0.jar!/expound/util.cljc",1689298964000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/source_map/base64_vlq.clj",1689298966000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/source_map.clj",1689298966000,"jar:file:/Users/alejandroherrera/.m2/repository/io/aviso/pretty/0.1.37/pretty-0.1.37.jar!/io/aviso/columns.clj",1689258836000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/core.async/1.5.648/core.async-1.5.648.jar!/clojure/core/async/impl/channels.clj",1689298966000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/tools.analyzer/1.1.0/tools.analyzer-1.1.0.jar!/clojure/tools/analyzer/env.clj",1689258834000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/reader_types.clj",1689258845000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/js_deps.cljc",1689298966000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/env.cljc",1689298966000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/cljs/tools/reader/reader_types.clj",1689258845000,"jar:file:/Users/alejandroherrera/.m2/repository/com/fulcrologic/fulcro/3.5.9/fulcro-3.5.9.jar!/com/fulcrologic/fulcro/algorithms/tempid.cljc",1689292469000,"jar:file:/Users/alejandroherrera/.m2/repository/com/fulcrologic/fulcro/3.5.9/fulcro-3.5.9.jar!/com/fulcrologic/fulcro/rendering/keyframe_render.cljc",1689292469000,"jar:file:/Users/alejandroherrera/.m2/repository/expound/expound/0.9.0/expound-0.9.0.jar!/expound/alpha.cljc",1689298964000,"jar:file:/Users/alejandroherrera/.m2/repository/com/taoensso/encore/3.10.1/encore-3.10.1.jar!/taoensso/encore.cljc",1689292466000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","Like keyframe-render2, but also supports free-floating roots.\n\n  WARNING: THIS RENDERER IS ALPHA. Lightly tested, but not heavily used yet.\n\n  General usage:\n\n  1. Set this nses `render!` as your application's optimized render function.\n  2. Create a class that follows all of the normal rules for a Fulcro root (no ident, has initial state,\n  composes children queries/initial-state, etc.\n     a. Add mount/unmount register/deregister calls\n  2. Use floating-root-factory to generate a Fulcro factory, or floating-root-react-class to generate\n  a vanilla React wrapper class that renders the new root.\n     a. Use the factory in normal Fuclro rendering, but don't pass it props, or\n     b. Use `(dom/create-element ReactClass)` to render the vanilla wrapper, or\n     c. Use the vanilla wrapper class when a js library controls rendering (like routing).\n\n  Example:\n\n  ```\n  (defonce app (app/fulcro-app {:optimized-render! mroot/render!}))\n\n  (defsc AltRoot [this {:keys [alt-child]}]\n    ;; query is from ROOT of the db, just like normal root.\n    {:query                 [{:alt-child (comp/get-query OtherChild)}]\n     :componentDidMount     (fn [this] (mroot/register-root! this {:app app}))\n     :componentWillUnmount  (fn [this] (mroot/deregister-root! this {:app app}))\n     :shouldComponentUpdate (fn [] true)\n     :initial-state         {:alt-child [{:id 1 :n 22}\n                                         {:id 2 :n 44}]}}\n    (dom/div\n      (mapv ui-other-child alt-child)))\n\n  ;; For use in the body of normal defsc components.\n  (def ui-alt-root (mroot/floating-root-factory AltRoot))\n\n  ;; For use as plain React class\n  (def PlainAltRoot (mroot/floating-root-react-class AltRoot app))\n\n  ...\n\n  (some-js-library #js {:thing PlainAltRoot})\n\n  (defsc NormalFulcroClass [this props]\n    {:query [:stuff]\n     :ident (fn [] [:x 1])\n     ...}\n    (dom/div\n      ;; ok to use within defsc components:\n      (ui-alt-root)\n      ;; how to use the plain react class, which is how js libs would use it:\n      (dom/create-element PlainAltRoot)))\n\n  ```\n  ","^7","com/fulcrologic/fulcro/rendering/multiple_roots_renderer.cljc","^8",1,"^9",5,"^:",1,"^;",61],"^<",["^ ","^=","^>","^?","^@","^A","^B","^C","^D"],"^E",["^ ","^F","^G"],"^H",["^I",[]],"^J",["^ ","^F",["^ ","^K",["^L",[["^M","~$&","^N"]]],"^6","Wraps the given body with the correct internal bindings of the given fulcro-app so that Fulcro internals\n     will work when that body is embedded in unusual ways.\n\n     You should use this around the render body of any floating root that will be rendered outside of\n     the synchronous fulcro render (e.g. you pass a floating root class to a React library).\n     ","^8",156,"^9",4,"^7","com/fulcrologic/fulcro/rendering/multiple_roots_renderer.cljc","^O","^P","^Q","^G","^R",true]],"~:shadow/js-access-properties",["^I",["Component"]],"^O","^G","^S",["^ "],"^T",["^ ","^U","^V"],"^X",null,"^Y",["^ ","^Z","^[","^10","^10","^11","^12","^13","^14","^15","^16","^17","^18","^19","^10","^1:","^1:","^1;","^V","^1<","^1<","^V","^V","^1=","^1>","^1?","^1?","^1>","^1>","^16","^16","^[","^[","^14","^14","^18","^18","^12","^12","^1@","^1:"],"^1A",["^I",["^1B","^1C"]],"~:shadow/js-access-global",["^I",["Error"]],"^1D",null,"~:defs",["^ ","~$register-root!",["^ ","~:protocol-inline",null,"^5",["^ ","^7","com/fulcrologic/fulcro/rendering/multiple_roots_renderer.cljc","^8",69,"^9",7,"^:",69,"^;",21,"^K",["^L",["~$quote",["^L",[["~$react-instance"],["^9U",["^ ","~:keys",["~$app","~$initialize?"]]]]]]],"^6","Register a mounted react component as a new root that should be managed. The\n  options map can contain:\n\n  - `:initialize?`: Should the initial state be pushed into the app state (if not already present)? Defaults\n  to true, which causes it to happen once (on initial mount).","~:top-fn",["^ ","~:variadic?",false,"~:fixed-arity",2,"~:max-fixed-arity",2,"~:method-params",[["^9U"],["^9U",["^ ","^9V",["^9W","^9X"]]]],"^K",["^L",[["^9U"],["^9U",["^ ","^9V",["^9W","^9X"]]]]],"~:arglists-meta",["^L",[null,null]]]],"^O","^2=","^7","com/fulcrologic/fulcro/rendering/multiple_roots_renderer.cljc","^;",21,"^9Y",["^ ","^9Z",false,"^9[",2,"^:0",2,"^:1",[["^9U"],["^9U",["^ ","^9V",["^9W","^9X"]]]],"^K",["^L",[["^9U"],["^9U",["^ ","^9V",["^9W","^9X"]]]]],"^:2",["^L",[null,null]]],"^:1",[["^9U"],["^9U",["^ ","^9V",["^9W","^9X"]]]],"~:protocol-impl",null,"^9[",2,"^:2",["^L",[null,null]],"^9",1,"^9Z",false,"~:methods",[["^ ","^9[",1,"^9Z",false,"~:tag","~$any"],["^ ","^9[",2,"^9Z",false,"^:5",["^I",[null,"^:6","~$clj-nil"]]]],"^8",69,"^:",69,"^:0",2,"~:fn-var",true,"^K",["^L",[["^9U"],["^9U",["^ ","^9V",["^9W","^9X"]]]]],"^6","Register a mounted react component as a new root that should be managed. The\n  options map can contain:\n\n  - `:initialize?`: Should the initial state be pushed into the app state (if not already present)? Defaults\n  to true, which causes it to happen once (on initial mount)."],"~$deregister-root!",["^ ","^9S",null,"^5",["^ ","^7","com/fulcrologic/fulcro/rendering/multiple_roots_renderer.cljc","^8",94,"^9",7,"^:",94,"^;",23,"^K",["^L",["^9T",["^L",[["^9U"],["^9U",["^ ","^9V",["^9W"],"^1H","~$options"]]]]]],"^6","Deregister a mounted root that should no longer be managed.","^9Y",["^ ","^9Z",false,"^9[",2,"^:0",2,"^:1",[["^9U"],["^9U",["^ ","^9V",["^9W"],"^1H","^::"]]],"^K",["^L",[["^9U"],["^9U",["^ ","^9V",["^9W"],"^1H","^::"]]]],"^:2",["^L",[null,null]]]],"^O","^2Q","^7","com/fulcrologic/fulcro/rendering/multiple_roots_renderer.cljc","^;",23,"^9Y",["^ ","^9Z",false,"^9[",2,"^:0",2,"^:1",[["^9U"],["^9U",["^ ","^9V",["^9W"],"^1H","^::"]]],"^K",["^L",[["^9U"],["^9U",["^ ","^9V",["^9W"],"^1H","^::"]]]],"^:2",["^L",[null,null]]],"^:1",[["^9U"],["^9U",["^ ","^9V",["^9W"],"^1H","^::"]]],"^:3",null,"^9[",2,"^:2",["^L",[null,null]],"^9",1,"^9Z",false,"^:4",[["^ ","^9[",1,"^9Z",false,"^:5","^:6"],["^ ","^9[",2,"^9Z",false,"^:5",["^I",[null,"^:6","^:7"]]]],"^8",94,"^:",94,"^:0",2,"^:8",true,"^K",["^L",[["^9U"],["^9U",["^ ","^9V",["^9W"],"^1H","^::"]]]],"^6","Deregister a mounted root that should no longer be managed."],"~$render-roots!",["^ ","^9S",null,"^5",["^ ","^7","com/fulcrologic/fulcro/rendering/multiple_roots_renderer.cljc","^8",107,"^9",7,"^:",107,"^;",20,"^K",["^L",["^9T",["^L",[["^9W","^::"]]]]]],"^O","^2D","^7","com/fulcrologic/fulcro/rendering/multiple_roots_renderer.cljc","^;",20,"^:1",["^L",[["^9W","^::"]]],"^:3",null,"^:2",["^L",[null,null]],"^9",1,"^9Z",false,"^8",107,"~:ret-tag","^:7","^:",107,"^:0",2,"^:8",true,"^K",["^L",["^9T",["^L",[["^9W","^::"]]]]]],"~$render-stale-components!",["^ ","^9S",null,"^5",["^ ","^7","com/fulcrologic/fulcro/rendering/multiple_roots_renderer.cljc","^8",118,"^9",7,"^:",118,"^;",31,"^K",["^L",["^9T",["^L",[["^9W","^::"]]]]],"^6","This function tracks the state of the app at the time of prior render in the app's runtime-atom. It\n   uses that to do a comparison of old vs. current application state (bounded by the needs of on-screen components).\n   When it finds data that has changed it renders all of the components that depend on that data."],"^O","^2I","^7","com/fulcrologic/fulcro/rendering/multiple_roots_renderer.cljc","^;",31,"^:1",["^L",[["^9W","^::"]]],"^:3",null,"^:2",["^L",[null,null]],"^9",1,"^9Z",false,"^8",118,"^:<","^:7","^:",118,"^:0",2,"^:8",true,"^K",["^L",["^9T",["^L",[["^9W","^::"]]]]],"^6","This function tracks the state of the app at the time of prior render in the app's runtime-atom. It\n   uses that to do a comparison of old vs. current application state (bounded by the needs of on-screen components).\n   When it finds data that has changed it renders all of the components that depend on that data."],"~$render!",["^ ","^9S",null,"^5",["^ ","^7","com/fulcrologic/fulcro/rendering/multiple_roots_renderer.cljc","^8",132,"^9",7,"^:",132,"^;",14,"^K",["^L",["^9T",["^L",[["^9W"],["^9W",["^ ","^9V",["~$force-root?","~$root-props-changed?"],"^1H","^::"]]]]]],"^6","The top-level call for using this optimized render in your application.\n\n  If `:force-root? true` is passed in options, then it just forces a keyframe root render.\n\n  This renderer always does a keyframe render *unless* an `:only-refresh` option is passed to the stack\n  (usually as an option on `(transact! this [(f)] {:only-refresh [...idents...]})`. In that case the renderer\n  will ignore *all* data diffing and will target refresh only to the on-screen components that have the listed\n  ident(s). This allows you to get component-local state refresh rates on transactions that are responding to\n  events that should really only affect a known set of components (like the input field).\n\n  This option does *not* currently support using query keywords in the refresh set. Only idents.","^9Y",["^ ","^9Z",false,"^9[",2,"^:0",2,"^:1",[["^9W"],["^9W",["^ ","^9V",["^:?","^:@"],"^1H","^::"]]],"^K",["^L",[["^9W"],["^9W",["^ ","^9V",["^:?","^:@"],"^1H","^::"]]]],"^:2",["^L",[null,null]]]],"^O","^33","^7","com/fulcrologic/fulcro/rendering/multiple_roots_renderer.cljc","^;",14,"^9Y",["^ ","^9Z",false,"^9[",2,"^:0",2,"^:1",[["^9W"],["^9W",["^ ","^9V",["^:?","^:@"],"^1H","^::"]]],"^K",["^L",[["^9W"],["^9W",["^ ","^9V",["^:?","^:@"],"^1H","^::"]]]],"^:2",["^L",[null,null]]],"^:1",[["^9W"],["^9W",["^ ","^9V",["^:?","^:@"],"^1H","^::"]]],"^:3",null,"^9[",2,"^:2",["^L",[null,null]],"^9",1,"^9Z",false,"^:4",[["^ ","^9[",1,"^9Z",false,"^:5","^:6"],["^ ","^9[",2,"^9Z",false,"^:5",["^I",[null,"^:7"]]]],"^8",132,"^:",132,"^:0",2,"^:8",true,"^K",["^L",[["^9W"],["^9W",["^ ","^9V",["^:?","^:@"],"^1H","^::"]]]],"^6","The top-level call for using this optimized render in your application.\n\n  If `:force-root? true` is passed in options, then it just forces a keyframe root render.\n\n  This renderer always does a keyframe render *unless* an `:only-refresh` option is passed to the stack\n  (usually as an option on `(transact! this [(f)] {:only-refresh [...idents...]})`. In that case the renderer\n  will ignore *all* data diffing and will target refresh only to the on-screen components that have the listed\n  ident(s). This allows you to get component-local state refresh rates on transactions that are responding to\n  events that should really only affect a known set of components (like the input field).\n\n  This option does *not* currently support using query keywords in the refresh set. Only idents."],"~$floating-root-react-class",["^ ","^9S",null,"^5",["^ ","^7","com/fulcrologic/fulcro/rendering/multiple_roots_renderer.cljc","^8",173,"^9",7,"^:",173,"^;",32,"^K",["^L",["^9T",["^L",[["~$UIRoot","^M"]]]]],"^6","Generate a plain React class that can render a Fulcro UIRoot. NOTE: The UIRoot must register/deregister itself\n  in the component lifecycle:\n\n  ```\n  (defsc UIRoot [this props]\n    {:componentDidMount     (fn [this] (mroot/register-root! this))\n     :componentWillUnmount  (fn [this] (mroot/deregister-root! this))\n     :initial-state {}\n     :query [root-like-query]}\n    ...)\n  ```\n\n  The `fulcro-app` is the app under which this root will be rendered. Create different factories if you have more than\n  one mounted app.\n  "],"^O","^29","^7","com/fulcrologic/fulcro/rendering/multiple_roots_renderer.cljc","^;",32,"^:1",["^L",[["^:B","^M"]]],"^:3",null,"^:2",["^L",[null,null]],"^9",1,"^9Z",false,"^8",173,"^:<","~$function","^:",173,"^:0",2,"^:8",true,"^K",["^L",["^9T",["^L",[["^:B","^M"]]]]],"^6","Generate a plain React class that can render a Fulcro UIRoot. NOTE: The UIRoot must register/deregister itself\n  in the component lifecycle:\n\n  ```\n  (defsc UIRoot [this props]\n    {:componentDidMount     (fn [this] (mroot/register-root! this))\n     :componentWillUnmount  (fn [this] (mroot/deregister-root! this))\n     :initial-state {}\n     :query [root-like-query]}\n    ...)\n  ```\n\n  The `fulcro-app` is the app under which this root will be rendered. Create different factories if you have more than\n  one mounted app.\n  "],"~$floating-root-factory",["^ ","^9S",null,"^5",["^ ","^7","com/fulcrologic/fulcro/rendering/multiple_roots_renderer.cljc","^8",207,"^9",7,"^:",207,"^;",28,"^K",["^L",["^9T",["^L",[["~$UIClass"],["^:E","^::"]]]]],"^6","Create a factory that renders a floating root in a normal Fulcro context (body of a Fulcro component). This factory\n   has the same sync constraints as normal `component/factory` functions. See `components/with-parent-context`.\n\n  `UIClass`: A class that will behave as a floating root. NOTE: that class MUST have a mount/unmount hook\n  to regsiter/deregister itself as a root.\n\n  `options`: An options map. Same as for `component/factory`. Note, however, that this factory will *not* receive\n  props, so a `:keyfn` would have to be based on something else.\n\n  You normally do not pass any props to this factory because it is controlling the component and feeding props from\n  the database. Props sent to this factory are only used by the wrapper, however, `:react-key` is useful if you\n  have a bunch of sibling roots and need to set the react key for each.\n  ","^9Y",["^ ","^9Z",false,"^9[",2,"^:0",2,"^:1",[["^:E"],["^:E","^::"]],"^K",["^L",[["^:E"],["^:E","^::"]]],"^:2",["^L",[null,null]]]],"^O","^2U","^7","com/fulcrologic/fulcro/rendering/multiple_roots_renderer.cljc","^;",28,"^9Y",["^ ","^9Z",false,"^9[",2,"^:0",2,"^:1",[["^:E"],["^:E","^::"]],"^K",["^L",[["^:E"],["^:E","^::"]]],"^:2",["^L",[null,null]]],"^:1",[["^:E"],["^:E","^::"]],"^:3",null,"^9[",2,"^:2",["^L",[null,null]],"^9",1,"^9Z",false,"^:4",[["^ ","^9[",1,"^9Z",false,"^:5","^:6"],["^ ","^9[",2,"^9Z",false,"^:5",["^I",["~$clj","~$cljs.core/MetaFn","^:7"]]]],"^8",207,"^:",207,"^:0",2,"^:8",true,"^K",["^L",[["^:E"],["^:E","^::"]]],"^6","Create a factory that renders a floating root in a normal Fulcro context (body of a Fulcro component). This factory\n   has the same sync constraints as normal `component/factory` functions. See `components/with-parent-context`.\n\n  `UIClass`: A class that will behave as a floating root. NOTE: that class MUST have a mount/unmount hook\n  to regsiter/deregister itself as a root.\n\n  `options`: An options map. Same as for `component/factory`. Note, however, that this factory will *not* receive\n  props, so a `:keyfn` would have to be based on something else.\n\n  You normally do not pass any props to this factory because it is controlling the component and feeding props from\n  the database. Props sent to this factory are only used by the wrapper, however, `:react-key` is useful if you\n  have a bunch of sibling roots and need to set the react key for each.\n  "]],"^1C",["^ ","^G","^G","^1<","^1<","^11","^12","^17","^18","^18","^18","^12","^12"],"~:cljs.analyzer/constants",["^ ","^1A",["^I",["~:js-props","~:initialize-state!","~:com.fulcrologic.fulcro.rendering.multiple-roots-renderer/known-roots","~:com.fulcrologic.fulcro.rendering.multiple-roots-renderer/wrapper","~:debug","~:force-root?","~:schedule-render!","~:com.fulcrologic.fulcro.application/state-atom","~:com.fulcrologic.fulcro.application/only-refresh","~:shouldComponentUpdate","~:render","~:root-props-changed?","~:com.fulcrologic.fulcro.application/runtime-atom","~:app","~:info","~:error","~:initialize?","~:auto","~:p","~:com.fulcrologic.fulcro.rendering.multiple-roots-renderer/basis-t"]],"~:order",["^:Y","^:V","^:J","^:O","^:U","^:K","^:N","^:M","~:p","^:Z","^:X","^:P","^:Q","^:T","^:W","^:R","^:S","^:[","^:I","^:L"]],"^1I",["^ ","^1C",["^I",[]],"^1B",["^I",[]]],"^1J",["^ ","^U",["^ ","^1H","^1;"]],"^1K",["^1?","^1<","^1:","^[","^18","^14","^16","^10","^12","^V","^1>"]],"^Q","^G","~:ns-specs",["^ "],"~:ns-spec-vars",["^I",[]],"~:compiler-options",["^39",[["^;3","~:static-fns"],true,["^;3","~:shadow-tweaks"],null,["^;3","~:source-map-inline"],null,["^;3","~:elide-asserts"],false,["^;3","~:optimize-constants"],null,["^;3","^1P"],null,["^;3","~:external-config"],null,["^;3","~:tooling-config"],null,["^;3","~:emit-constants"],null,["^;3","~:load-tests"],null,["^;3","~:form-size-threshold"],null,["^;3","~:global-goog-object&array"],null,["^;3","~:data-readers"],null,["^;3","~:infer-externs"],"^:Z",["^;3","^1R"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^;3","~:fn-invoke-direct"],null,["^;3","~:source-map"],"/dev/null"]]]