["^ ","~:output",["^ ","~:js","goog.provide('com.fulcrologic.fulcro.rendering.ident_optimized_render');\n/**\n * Checks the given `idents` and returns a subset of them where the data they refer to has changed\n * between `old-state` and `new-state`.\n */\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.dirty_table_entries = (function com$fulcrologic$fulcro$rendering$ident_optimized_render$dirty_table_entries(old_state,new_state,idents){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (result,ident){\nif((cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(old_state,ident) === cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(new_state,ident))){\nreturn result;\n} else {\nreturn cljs.core.cons(ident,result);\n}\n}),cljs.core.List.EMPTY,idents);\n});\n/**\n * Uses the component's query and the current application state to query for the current value of that component's\n *   props (subtree). It then sends those props to the component via \"props tunnelling\" (setting them on a well-known key in\n *   component-local state).\n */\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_component_BANG_ = (function com$fulcrologic$fulcro$rendering$ident_optimized_render$render_component_BANG_(app__$1,ident,c){\nif(cljs.core.truth_((function (){var and__5043__auto__ = c;\nif(cljs.core.truth_(and__5043__auto__)){\nreturn ident;\n} else {\nreturn and__5043__auto__;\n}\n})())){\nvar map__44091 = app__$1;\nvar map__44091__$1 = cljs.core.__destructure_map(map__44091);\nvar state_atom = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__44091__$1,new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"state-atom\",\"com.fulcrologic.fulcro.application/state-atom\",648128366));\nvar state_map = cljs.core.deref(state_atom);\nvar query = com.fulcrologic.fulcro.components.get_query.cljs$core$IFn$_invoke$arity$2(c,state_map);\nvar q = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.PersistentArrayMap.createAsIfByAssoc([ident,query])], null);\nvar prior_computed = (function (){var or__5045__auto__ = (com.fulcrologic.fulcro.components.get_computed.cljs$core$IFn$_invoke$arity$1 ? com.fulcrologic.fulcro.components.get_computed.cljs$core$IFn$_invoke$arity$1(c) : com.fulcrologic.fulcro.components.get_computed.call(null,c));\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn cljs.core.PersistentArrayMap.EMPTY;\n}\n})();\nvar data_tree = (cljs.core.truth_(query)?com.fulcrologic.fulcro.algorithms.denormalize.db__GT_tree(q,state_map,state_map):null);\nvar new_props = (function (){var G__44094 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(data_tree,ident);\nvar G__44095 = prior_computed;\nreturn (com.fulcrologic.fulcro.components.computed.cljs$core$IFn$_invoke$arity$2 ? com.fulcrologic.fulcro.components.computed.cljs$core$IFn$_invoke$arity$2(G__44094,G__44095) : com.fulcrologic.fulcro.components.computed.call(null,G__44094,G__44095));\n})();\nif(cljs.core.truth_(query)){\n} else {\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$11(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"error\",\"error\",-978969032),\"com.fulcrologic.fulcro.rendering.ident-optimized-render\",null,42,new cljs.core.Keyword(null,\"p\",\"p\",151049309),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Query was empty. Refresh failed for \",cljs.core.type(c),\"See https://book.fulcrologic.com/#err-id-opt-render-empty-query\"], null);\n}),null)),null,1050531614,null);\n}\n\nreturn com.fulcrologic.fulcro.components.tunnel_props_BANG_(c,new_props);\n} else {\nvar root = new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"app-root\",\"com.fulcrologic.fulcro.application/app-root\",835379005).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"runtime-atom\",\"com.fulcrologic.fulcro.application/runtime-atom\",-1167397772).cljs$core$IFn$_invoke$arity$1(app__$1)));\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(c,root)){\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$11(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"info\",\"info\",-317069002),\"com.fulcrologic.fulcro.rendering.ident-optimized-render\",null,46,new cljs.core.Keyword(null,\"p\",\"p\",151049309),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Failed to do optimized update. Component\",(function (){var G__44100 = com.fulcrologic.fulcro.components.react_type(c);\nreturn (com.fulcrologic.fulcro.components.class__GT_registry_key.cljs$core$IFn$_invoke$arity$1 ? com.fulcrologic.fulcro.components.class__GT_registry_key.cljs$core$IFn$_invoke$arity$1(G__44100) : com.fulcrologic.fulcro.components.class__GT_registry_key.call(null,G__44100));\n})(),\"queries for data that changed, but does not have an ident.\"], null);\n}),null)),null,-300481661,null);\n} else {\n}\n\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(\"Targeted update failed\",cljs.core.PersistentArrayMap.EMPTY);\n}\n});\n/**\n * Renders *only* components that *have* the given ident.\n */\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_components_with_ident_BANG_ = (function com$fulcrologic$fulcro$rendering$ident_optimized_render$render_components_with_ident_BANG_(app__$1,ident){\nvar seq__44101 = cljs.core.seq(com.fulcrologic.fulcro.components.ident__GT_components(app__$1,ident));\nvar chunk__44102 = null;\nvar count__44103 = (0);\nvar i__44104 = (0);\nwhile(true){\nif((i__44104 < count__44103)){\nvar c = chunk__44102.cljs$core$IIndexed$_nth$arity$2(null,i__44104);\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_component_BANG_(app__$1,ident,c);\n\n\nvar G__44225 = seq__44101;\nvar G__44226 = chunk__44102;\nvar G__44227 = count__44103;\nvar G__44228 = (i__44104 + (1));\nseq__44101 = G__44225;\nchunk__44102 = G__44226;\ncount__44103 = G__44227;\ni__44104 = G__44228;\ncontinue;\n} else {\nvar temp__5753__auto__ = cljs.core.seq(seq__44101);\nif(temp__5753__auto__){\nvar seq__44101__$1 = temp__5753__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__44101__$1)){\nvar c__5568__auto__ = cljs.core.chunk_first(seq__44101__$1);\nvar G__44229 = cljs.core.chunk_rest(seq__44101__$1);\nvar G__44230 = c__5568__auto__;\nvar G__44231 = cljs.core.count(c__5568__auto__);\nvar G__44232 = (0);\nseq__44101 = G__44229;\nchunk__44102 = G__44230;\ncount__44103 = G__44231;\ni__44104 = G__44232;\ncontinue;\n} else {\nvar c = cljs.core.first(seq__44101__$1);\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_component_BANG_(app__$1,ident,c);\n\n\nvar G__44233 = cljs.core.next(seq__44101__$1);\nvar G__44234 = null;\nvar G__44235 = (0);\nvar G__44236 = (0);\nseq__44101 = G__44233;\nchunk__44102 = G__44234;\ncount__44103 = G__44235;\ni__44104 = G__44236;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n});\n/**\n * Renders components that have, or query for, the given ident.\n */\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_dependents_of_ident_BANG_ = (function com$fulcrologic$fulcro$rendering$ident_optimized_render$render_dependents_of_ident_BANG_(app__$1,ident){\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_components_with_ident_BANG_(app__$1,ident);\n\nvar map__44109 = app__$1;\nvar map__44109__$1 = cljs.core.__destructure_map(map__44109);\nvar runtime_atom = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__44109__$1,new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"runtime-atom\",\"com.fulcrologic.fulcro.application/runtime-atom\",-1167397772));\nvar map__44110 = cljs.core.deref(runtime_atom);\nvar map__44110__$1 = cljs.core.__destructure_map(map__44110);\nvar indexes = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__44110__$1,new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"indexes\",\"com.fulcrologic.fulcro.application/indexes\",-165326938));\nvar map__44111 = indexes;\nvar map__44111__$1 = cljs.core.__destructure_map(map__44111);\nvar prop__GT_classes = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__44111__$1,new cljs.core.Keyword(null,\"prop->classes\",\"prop->classes\",515892717));\nvar idents_in_joins = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__44111__$1,new cljs.core.Keyword(null,\"idents-in-joins\",\"idents-in-joins\",-1556962035));\nvar class__GT_components = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__44111__$1,new cljs.core.Keyword(null,\"class->components\",\"class->components\",436435919));\nvar idents_in_joins__$1 = (function (){var or__5045__auto__ = idents_in_joins;\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn cljs.core.PersistentHashSet.EMPTY;\n}\n})();\nif(cljs.core.contains_QMARK_(idents_in_joins__$1,ident)){\nvar classes = (prop__GT_classes.cljs$core$IFn$_invoke$arity$1 ? prop__GT_classes.cljs$core$IFn$_invoke$arity$1(ident) : prop__GT_classes.call(null,ident));\nif(cljs.core.seq(classes)){\nvar seq__44114 = cljs.core.seq(classes);\nvar chunk__44115 = null;\nvar count__44116 = (0);\nvar i__44117 = (0);\nwhile(true){\nif((i__44117 < count__44116)){\nvar class$ = chunk__44115.cljs$core$IIndexed$_nth$arity$2(null,i__44117);\nvar seq__44139_44240 = cljs.core.seq((class__GT_components.cljs$core$IFn$_invoke$arity$1 ? class__GT_components.cljs$core$IFn$_invoke$arity$1(class$) : class__GT_components.call(null,class$)));\nvar chunk__44141_44241 = null;\nvar count__44142_44242 = (0);\nvar i__44143_44243 = (0);\nwhile(true){\nif((i__44143_44243 < count__44142_44242)){\nvar component_44244 = chunk__44141_44241.cljs$core$IIndexed$_nth$arity$2(null,i__44143_44243);\nvar component_ident_44245 = (com.fulcrologic.fulcro.components.get_ident.cljs$core$IFn$_invoke$arity$1 ? com.fulcrologic.fulcro.components.get_ident.cljs$core$IFn$_invoke$arity$1(component_44244) : com.fulcrologic.fulcro.components.get_ident.call(null,component_44244));\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_component_BANG_(app__$1,component_ident_44245,component_44244);\n\n\nvar G__44246 = seq__44139_44240;\nvar G__44247 = chunk__44141_44241;\nvar G__44248 = count__44142_44242;\nvar G__44249 = (i__44143_44243 + (1));\nseq__44139_44240 = G__44246;\nchunk__44141_44241 = G__44247;\ncount__44142_44242 = G__44248;\ni__44143_44243 = G__44249;\ncontinue;\n} else {\nvar temp__5753__auto___44250 = cljs.core.seq(seq__44139_44240);\nif(temp__5753__auto___44250){\nvar seq__44139_44252__$1 = temp__5753__auto___44250;\nif(cljs.core.chunked_seq_QMARK_(seq__44139_44252__$1)){\nvar c__5568__auto___44253 = cljs.core.chunk_first(seq__44139_44252__$1);\nvar G__44254 = cljs.core.chunk_rest(seq__44139_44252__$1);\nvar G__44255 = c__5568__auto___44253;\nvar G__44256 = cljs.core.count(c__5568__auto___44253);\nvar G__44257 = (0);\nseq__44139_44240 = G__44254;\nchunk__44141_44241 = G__44255;\ncount__44142_44242 = G__44256;\ni__44143_44243 = G__44257;\ncontinue;\n} else {\nvar component_44258 = cljs.core.first(seq__44139_44252__$1);\nvar component_ident_44259 = (com.fulcrologic.fulcro.components.get_ident.cljs$core$IFn$_invoke$arity$1 ? com.fulcrologic.fulcro.components.get_ident.cljs$core$IFn$_invoke$arity$1(component_44258) : com.fulcrologic.fulcro.components.get_ident.call(null,component_44258));\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_component_BANG_(app__$1,component_ident_44259,component_44258);\n\n\nvar G__44260 = cljs.core.next(seq__44139_44252__$1);\nvar G__44261 = null;\nvar G__44262 = (0);\nvar G__44263 = (0);\nseq__44139_44240 = G__44260;\nchunk__44141_44241 = G__44261;\ncount__44142_44242 = G__44262;\ni__44143_44243 = G__44263;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\n\nvar G__44265 = seq__44114;\nvar G__44266 = chunk__44115;\nvar G__44267 = count__44116;\nvar G__44268 = (i__44117 + (1));\nseq__44114 = G__44265;\nchunk__44115 = G__44266;\ncount__44116 = G__44267;\ni__44117 = G__44268;\ncontinue;\n} else {\nvar temp__5753__auto__ = cljs.core.seq(seq__44114);\nif(temp__5753__auto__){\nvar seq__44114__$1 = temp__5753__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__44114__$1)){\nvar c__5568__auto__ = cljs.core.chunk_first(seq__44114__$1);\nvar G__44269 = cljs.core.chunk_rest(seq__44114__$1);\nvar G__44270 = c__5568__auto__;\nvar G__44271 = cljs.core.count(c__5568__auto__);\nvar G__44272 = (0);\nseq__44114 = G__44269;\nchunk__44115 = G__44270;\ncount__44116 = G__44271;\ni__44117 = G__44272;\ncontinue;\n} else {\nvar class$ = cljs.core.first(seq__44114__$1);\nvar seq__44152_44274 = cljs.core.seq((class__GT_components.cljs$core$IFn$_invoke$arity$1 ? class__GT_components.cljs$core$IFn$_invoke$arity$1(class$) : class__GT_components.call(null,class$)));\nvar chunk__44154_44275 = null;\nvar count__44155_44276 = (0);\nvar i__44156_44277 = (0);\nwhile(true){\nif((i__44156_44277 < count__44155_44276)){\nvar component_44279 = chunk__44154_44275.cljs$core$IIndexed$_nth$arity$2(null,i__44156_44277);\nvar component_ident_44280 = (com.fulcrologic.fulcro.components.get_ident.cljs$core$IFn$_invoke$arity$1 ? com.fulcrologic.fulcro.components.get_ident.cljs$core$IFn$_invoke$arity$1(component_44279) : com.fulcrologic.fulcro.components.get_ident.call(null,component_44279));\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_component_BANG_(app__$1,component_ident_44280,component_44279);\n\n\nvar G__44281 = seq__44152_44274;\nvar G__44282 = chunk__44154_44275;\nvar G__44283 = count__44155_44276;\nvar G__44284 = (i__44156_44277 + (1));\nseq__44152_44274 = G__44281;\nchunk__44154_44275 = G__44282;\ncount__44155_44276 = G__44283;\ni__44156_44277 = G__44284;\ncontinue;\n} else {\nvar temp__5753__auto___44285__$1 = cljs.core.seq(seq__44152_44274);\nif(temp__5753__auto___44285__$1){\nvar seq__44152_44286__$1 = temp__5753__auto___44285__$1;\nif(cljs.core.chunked_seq_QMARK_(seq__44152_44286__$1)){\nvar c__5568__auto___44287 = cljs.core.chunk_first(seq__44152_44286__$1);\nvar G__44288 = cljs.core.chunk_rest(seq__44152_44286__$1);\nvar G__44289 = c__5568__auto___44287;\nvar G__44290 = cljs.core.count(c__5568__auto___44287);\nvar G__44291 = (0);\nseq__44152_44274 = G__44288;\nchunk__44154_44275 = G__44289;\ncount__44155_44276 = G__44290;\ni__44156_44277 = G__44291;\ncontinue;\n} else {\nvar component_44293 = cljs.core.first(seq__44152_44286__$1);\nvar component_ident_44294 = (com.fulcrologic.fulcro.components.get_ident.cljs$core$IFn$_invoke$arity$1 ? com.fulcrologic.fulcro.components.get_ident.cljs$core$IFn$_invoke$arity$1(component_44293) : com.fulcrologic.fulcro.components.get_ident.call(null,component_44293));\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_component_BANG_(app__$1,component_ident_44294,component_44293);\n\n\nvar G__44295 = cljs.core.next(seq__44152_44286__$1);\nvar G__44296 = null;\nvar G__44297 = (0);\nvar G__44298 = (0);\nseq__44152_44274 = G__44295;\nchunk__44154_44275 = G__44296;\ncount__44155_44276 = G__44297;\ni__44156_44277 = G__44298;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\n\nvar G__44299 = cljs.core.next(seq__44114__$1);\nvar G__44300 = null;\nvar G__44301 = (0);\nvar G__44302 = (0);\nseq__44114 = G__44299;\nchunk__44115 = G__44300;\ncount__44116 = G__44301;\ni__44117 = G__44302;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n});\n/**\n * Given an app and a `property-set`: returns the components that query for the items in property-set.\n * \n *   The `property-set` can be any sequence (ideally a set) of keywords and idents that can directly appear\n *   in a component query as a property or join key.\n */\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.props__GT_components = (function com$fulcrologic$fulcro$rendering$ident_optimized_render$props__GT_components(app__$1,property_set){\nif(cljs.core.seq(property_set)){\nvar map__44166 = app__$1;\nvar map__44166__$1 = cljs.core.__destructure_map(map__44166);\nvar runtime_atom = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__44166__$1,new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"runtime-atom\",\"com.fulcrologic.fulcro.application/runtime-atom\",-1167397772));\nvar map__44167 = cljs.core.deref(runtime_atom);\nvar map__44167__$1 = cljs.core.__destructure_map(map__44167);\nvar indexes = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__44167__$1,new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"indexes\",\"com.fulcrologic.fulcro.application/indexes\",-165326938));\nvar map__44168 = indexes;\nvar map__44168__$1 = cljs.core.__destructure_map(map__44168);\nvar prop__GT_classes = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__44168__$1,new cljs.core.Keyword(null,\"prop->classes\",\"prop->classes\",515892717));\nvar class__GT_components = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__44168__$1,new cljs.core.Keyword(null,\"class->components\",\"class->components\",436435919));\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (result,prop){\nvar classes = (prop__GT_classes.cljs$core$IFn$_invoke$arity$1 ? prop__GT_classes.cljs$core$IFn$_invoke$arity$1(prop) : prop__GT_classes.call(null,prop));\nvar components = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__44164_SHARP_,p2__44165_SHARP_){\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(p1__44164_SHARP_,(class__GT_components.cljs$core$IFn$_invoke$arity$1 ? class__GT_components.cljs$core$IFn$_invoke$arity$1(p2__44165_SHARP_) : class__GT_components.call(null,p2__44165_SHARP_)));\n}),cljs.core.PersistentHashSet.EMPTY,classes);\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(result,components);\n}),cljs.core.PersistentHashSet.EMPTY,property_set);\n} else {\nreturn null;\n}\n});\n/**\n * This function tracks the state of the app at the time of prior render in the app's runtime-atom. It\n * uses that to do a comparison of old vs. current application state (bounded by the needs of on-screen components).\n * When it finds data that has changed it renders all of the components that depend on that data.\n */\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_stale_components_BANG_ = (function com$fulcrologic$fulcro$rendering$ident_optimized_render$render_stale_components_BANG_(app__$1){\nvar map__44173 = app__$1;\nvar map__44173__$1 = cljs.core.__destructure_map(map__44173);\nvar runtime_atom = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__44173__$1,new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"runtime-atom\",\"com.fulcrologic.fulcro.application/runtime-atom\",-1167397772));\nvar state_atom = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__44173__$1,new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"state-atom\",\"com.fulcrologic.fulcro.application/state-atom\",648128366));\nvar map__44174 = cljs.core.deref(runtime_atom);\nvar map__44174__$1 = cljs.core.__destructure_map(map__44174);\nvar indexes = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__44174__$1,new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"indexes\",\"com.fulcrologic.fulcro.application/indexes\",-165326938));\nvar last_rendered_state = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__44174__$1,new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"last-rendered-state\",\"com.fulcrologic.fulcro.application/last-rendered-state\",1438978441));\nvar to_refresh = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__44174__$1,new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"to-refresh\",\"com.fulcrologic.fulcro.application/to-refresh\",-967758829));\nvar only_refresh = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__44174__$1,new cljs.core.Keyword(\"com.fulcrologic.fulcro.application\",\"only-refresh\",\"com.fulcrologic.fulcro.application/only-refresh\",1300408206));\nvar map__44175 = indexes;\nvar map__44175__$1 = cljs.core.__destructure_map(map__44175);\nvar linked_props = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__44175__$1,new cljs.core.Keyword(null,\"linked-props\",\"linked-props\",1547374714));\nvar ident__GT_components = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__44175__$1,new cljs.core.Keyword(null,\"ident->components\",\"ident->components\",-1952169224));\nvar prop__GT_classes = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__44175__$1,new cljs.core.Keyword(null,\"prop->classes\",\"prop->classes\",515892717));\nvar idents_in_joins = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__44175__$1,new cljs.core.Keyword(null,\"idents-in-joins\",\"idents-in-joins\",-1556962035));\nvar limited_refresh_QMARK_ = cljs.core.seq(only_refresh);\nif(limited_refresh_QMARK_){\nvar map__44176 = cljs.core.group_by(edn_query_language.core.ident_QMARK_,only_refresh);\nvar map__44176__$1 = cljs.core.__destructure_map(map__44176);\nvar limited_idents = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__44176__$1,true);\nvar limited_props = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__44176__$1,false);\nvar limited_to_render = com.fulcrologic.fulcro.rendering.ident_optimized_render.props__GT_components(app__$1,limited_props);\nvar seq__44177_44319 = cljs.core.seq(limited_to_render);\nvar chunk__44179_44320 = null;\nvar count__44180_44321 = (0);\nvar i__44181_44322 = (0);\nwhile(true){\nif((i__44181_44322 < count__44180_44321)){\nvar c_44323 = chunk__44179_44320.cljs$core$IIndexed$_nth$arity$2(null,i__44181_44322);\nvar ident_44324 = (com.fulcrologic.fulcro.components.get_ident.cljs$core$IFn$_invoke$arity$1 ? com.fulcrologic.fulcro.components.get_ident.cljs$core$IFn$_invoke$arity$1(c_44323) : com.fulcrologic.fulcro.components.get_ident.call(null,c_44323));\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_component_BANG_(app__$1,ident_44324,c_44323);\n\n\nvar G__44325 = seq__44177_44319;\nvar G__44326 = chunk__44179_44320;\nvar G__44327 = count__44180_44321;\nvar G__44328 = (i__44181_44322 + (1));\nseq__44177_44319 = G__44325;\nchunk__44179_44320 = G__44326;\ncount__44180_44321 = G__44327;\ni__44181_44322 = G__44328;\ncontinue;\n} else {\nvar temp__5753__auto___44329 = cljs.core.seq(seq__44177_44319);\nif(temp__5753__auto___44329){\nvar seq__44177_44331__$1 = temp__5753__auto___44329;\nif(cljs.core.chunked_seq_QMARK_(seq__44177_44331__$1)){\nvar c__5568__auto___44332 = cljs.core.chunk_first(seq__44177_44331__$1);\nvar G__44333 = cljs.core.chunk_rest(seq__44177_44331__$1);\nvar G__44334 = c__5568__auto___44332;\nvar G__44335 = cljs.core.count(c__5568__auto___44332);\nvar G__44336 = (0);\nseq__44177_44319 = G__44333;\nchunk__44179_44320 = G__44334;\ncount__44180_44321 = G__44335;\ni__44181_44322 = G__44336;\ncontinue;\n} else {\nvar c_44337 = cljs.core.first(seq__44177_44331__$1);\nvar ident_44338 = (com.fulcrologic.fulcro.components.get_ident.cljs$core$IFn$_invoke$arity$1 ? com.fulcrologic.fulcro.components.get_ident.cljs$core$IFn$_invoke$arity$1(c_44337) : com.fulcrologic.fulcro.components.get_ident.call(null,c_44337));\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_component_BANG_(app__$1,ident_44338,c_44337);\n\n\nvar G__44339 = cljs.core.next(seq__44177_44331__$1);\nvar G__44340 = null;\nvar G__44341 = (0);\nvar G__44342 = (0);\nseq__44177_44319 = G__44339;\nchunk__44179_44320 = G__44340;\ncount__44180_44321 = G__44341;\ni__44181_44322 = G__44342;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\nvar seq__44185 = cljs.core.seq(limited_idents);\nvar chunk__44186 = null;\nvar count__44187 = (0);\nvar i__44188 = (0);\nwhile(true){\nif((i__44188 < count__44187)){\nvar i = chunk__44186.cljs$core$IIndexed$_nth$arity$2(null,i__44188);\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_dependents_of_ident_BANG_(app__$1,i);\n\n\nvar G__44344 = seq__44185;\nvar G__44345 = chunk__44186;\nvar G__44346 = count__44187;\nvar G__44347 = (i__44188 + (1));\nseq__44185 = G__44344;\nchunk__44186 = G__44345;\ncount__44187 = G__44346;\ni__44188 = G__44347;\ncontinue;\n} else {\nvar temp__5753__auto__ = cljs.core.seq(seq__44185);\nif(temp__5753__auto__){\nvar seq__44185__$1 = temp__5753__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__44185__$1)){\nvar c__5568__auto__ = cljs.core.chunk_first(seq__44185__$1);\nvar G__44349 = cljs.core.chunk_rest(seq__44185__$1);\nvar G__44350 = c__5568__auto__;\nvar G__44351 = cljs.core.count(c__5568__auto__);\nvar G__44352 = (0);\nseq__44185 = G__44349;\nchunk__44186 = G__44350;\ncount__44187 = G__44351;\ni__44188 = G__44352;\ncontinue;\n} else {\nvar i = cljs.core.first(seq__44185__$1);\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_dependents_of_ident_BANG_(app__$1,i);\n\n\nvar G__44353 = cljs.core.next(seq__44185__$1);\nvar G__44354 = null;\nvar G__44355 = (0);\nvar G__44356 = (0);\nseq__44185 = G__44353;\nchunk__44186 = G__44354;\ncount__44187 = G__44355;\ni__44188 = G__44356;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n} else {\nvar state_map = cljs.core.deref(state_atom);\nvar idents_in_joins__$1 = (function (){var or__5045__auto__ = idents_in_joins;\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn cljs.core.PersistentHashSet.EMPTY;\n}\n})();\nvar dirty_linked_props = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (acc,p){\nif((!((cljs.core.get.cljs$core$IFn$_invoke$arity$2(state_map,p) === cljs.core.get.cljs$core$IFn$_invoke$arity$2(last_rendered_state,p))))){\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(acc,p);\n} else {\nreturn acc;\n}\n}),cljs.core.PersistentHashSet.EMPTY,linked_props);\nvar map__44189 = cljs.core.group_by(edn_query_language.core.ident_QMARK_,to_refresh);\nvar map__44189__$1 = cljs.core.__destructure_map(map__44189);\nvar idents_to_force = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__44189__$1,true);\nvar props_to_force = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__44189__$1,false);\nvar props_to_force__$1 = clojure.set.union.cljs$core$IFn$_invoke$arity$2(props_to_force,dirty_linked_props);\nvar mounted_idents = cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.keys(ident__GT_components),idents_in_joins__$1);\nvar stale_idents = com.fulcrologic.fulcro.rendering.ident_optimized_render.dirty_table_entries(last_rendered_state,state_map,mounted_idents);\nvar extra_to_force = com.fulcrologic.fulcro.rendering.ident_optimized_render.props__GT_components(app__$1,props_to_force__$1);\nvar all_idents = clojure.set.union.cljs$core$IFn$_invoke$arity$2(cljs.core.set(idents_to_force),cljs.core.set(stale_idents));\nvar seq__44190_44361 = cljs.core.seq(all_idents);\nvar chunk__44191_44362 = null;\nvar count__44192_44363 = (0);\nvar i__44193_44364 = (0);\nwhile(true){\nif((i__44193_44364 < count__44192_44363)){\nvar i_44366 = chunk__44191_44362.cljs$core$IIndexed$_nth$arity$2(null,i__44193_44364);\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_dependents_of_ident_BANG_(app__$1,i_44366);\n\n\nvar G__44367 = seq__44190_44361;\nvar G__44368 = chunk__44191_44362;\nvar G__44369 = count__44192_44363;\nvar G__44370 = (i__44193_44364 + (1));\nseq__44190_44361 = G__44367;\nchunk__44191_44362 = G__44368;\ncount__44192_44363 = G__44369;\ni__44193_44364 = G__44370;\ncontinue;\n} else {\nvar temp__5753__auto___44371 = cljs.core.seq(seq__44190_44361);\nif(temp__5753__auto___44371){\nvar seq__44190_44372__$1 = temp__5753__auto___44371;\nif(cljs.core.chunked_seq_QMARK_(seq__44190_44372__$1)){\nvar c__5568__auto___44374 = cljs.core.chunk_first(seq__44190_44372__$1);\nvar G__44375 = cljs.core.chunk_rest(seq__44190_44372__$1);\nvar G__44376 = c__5568__auto___44374;\nvar G__44377 = cljs.core.count(c__5568__auto___44374);\nvar G__44378 = (0);\nseq__44190_44361 = G__44375;\nchunk__44191_44362 = G__44376;\ncount__44192_44363 = G__44377;\ni__44193_44364 = G__44378;\ncontinue;\n} else {\nvar i_44379 = cljs.core.first(seq__44190_44372__$1);\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_dependents_of_ident_BANG_(app__$1,i_44379);\n\n\nvar G__44380 = cljs.core.next(seq__44190_44372__$1);\nvar G__44381 = null;\nvar G__44382 = (0);\nvar G__44383 = (0);\nseq__44190_44361 = G__44380;\nchunk__44191_44362 = G__44381;\ncount__44192_44363 = G__44382;\ni__44193_44364 = G__44383;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\nvar seq__44194 = cljs.core.seq(extra_to_force);\nvar chunk__44195 = null;\nvar count__44196 = (0);\nvar i__44197 = (0);\nwhile(true){\nif((i__44197 < count__44196)){\nvar c = chunk__44195.cljs$core$IIndexed$_nth$arity$2(null,i__44197);\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_component_BANG_(app__$1,(com.fulcrologic.fulcro.components.get_ident.cljs$core$IFn$_invoke$arity$1 ? com.fulcrologic.fulcro.components.get_ident.cljs$core$IFn$_invoke$arity$1(c) : com.fulcrologic.fulcro.components.get_ident.call(null,c)),c);\n\n\nvar G__44385 = seq__44194;\nvar G__44386 = chunk__44195;\nvar G__44387 = count__44196;\nvar G__44388 = (i__44197 + (1));\nseq__44194 = G__44385;\nchunk__44195 = G__44386;\ncount__44196 = G__44387;\ni__44197 = G__44388;\ncontinue;\n} else {\nvar temp__5753__auto__ = cljs.core.seq(seq__44194);\nif(temp__5753__auto__){\nvar seq__44194__$1 = temp__5753__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__44194__$1)){\nvar c__5568__auto__ = cljs.core.chunk_first(seq__44194__$1);\nvar G__44389 = cljs.core.chunk_rest(seq__44194__$1);\nvar G__44390 = c__5568__auto__;\nvar G__44391 = cljs.core.count(c__5568__auto__);\nvar G__44392 = (0);\nseq__44194 = G__44389;\nchunk__44195 = G__44390;\ncount__44196 = G__44391;\ni__44197 = G__44392;\ncontinue;\n} else {\nvar c = cljs.core.first(seq__44194__$1);\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_component_BANG_(app__$1,(com.fulcrologic.fulcro.components.get_ident.cljs$core$IFn$_invoke$arity$1 ? com.fulcrologic.fulcro.components.get_ident.cljs$core$IFn$_invoke$arity$1(c) : com.fulcrologic.fulcro.components.get_ident.call(null,c)),c);\n\n\nvar G__44394 = cljs.core.next(seq__44194__$1);\nvar G__44395 = null;\nvar G__44396 = (0);\nvar G__44397 = (0);\nseq__44194 = G__44394;\nchunk__44195 = G__44395;\ncount__44196 = G__44396;\ni__44197 = G__44397;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n}\n});\n/**\n * The top-level call for using this optimized render in your application.\n * \n *   If `:force-root? true` is passed in options, then it just forces a keyframe root render; otherwise\n *   it tries to minimize the work done for screen refresh to just the queries/refreshes needed by the\n *   data that has changed.\n */\ncom.fulcrologic.fulcro.rendering.ident_optimized_render.render_BANG_ = (function com$fulcrologic$fulcro$rendering$ident_optimized_render$render_BANG_(var_args){\nvar G__44201 = arguments.length;\nswitch (G__44201) {\ncase 1:\nreturn com.fulcrologic.fulcro.rendering.ident_optimized_render.render_BANG_.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn com.fulcrologic.fulcro.rendering.ident_optimized_render.render_BANG_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(com.fulcrologic.fulcro.rendering.ident_optimized_render.render_BANG_.cljs$core$IFn$_invoke$arity$1 = (function (app__$1){\nreturn com.fulcrologic.fulcro.rendering.ident_optimized_render.render_BANG_.cljs$core$IFn$_invoke$arity$2(app__$1,cljs.core.PersistentArrayMap.EMPTY);\n}));\n\n(com.fulcrologic.fulcro.rendering.ident_optimized_render.render_BANG_.cljs$core$IFn$_invoke$arity$2 = (function (app__$1,p__44206){\nvar map__44208 = p__44206;\nvar map__44208__$1 = cljs.core.__destructure_map(map__44208);\nvar options = map__44208__$1;\nvar force_root_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__44208__$1,new cljs.core.Keyword(null,\"force-root?\",\"force-root?\",-1598741683));\nvar root_props_changed_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__44208__$1,new cljs.core.Keyword(null,\"root-props-changed?\",\"root-props-changed?\",1999614835));\nif(cljs.core.truth_((function (){var or__5045__auto__ = force_root_QMARK_;\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn root_props_changed_QMARK_;\n}\n})())){\nreturn com.fulcrologic.fulcro.rendering.keyframe_render.render_BANG_(app__$1,options);\n} else {\ntry{return com.fulcrologic.fulcro.rendering.ident_optimized_render.render_stale_components_BANG_(app__$1);\n}catch (e44210){var e = e44210;\ntaoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$11(taoensso.timbre._STAR_config_STAR_,new cljs.core.Keyword(null,\"info\",\"info\",-317069002),\"com.fulcrologic.fulcro.rendering.ident-optimized-render\",null,146,new cljs.core.Keyword(null,\"p\",\"p\",151049309),new cljs.core.Keyword(null,\"auto\",\"auto\",-566279492),(new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"Optimized render failed. Falling back to root render.\"], null);\n}),null)),null,-352132846,null);\n\nreturn com.fulcrologic.fulcro.rendering.keyframe_render.render_BANG_(app__$1,options);\n}}\n}));\n\n(com.fulcrologic.fulcro.rendering.ident_optimized_render.render_BANG_.cljs$lang$maxFixedArity = 2);\n\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:doc","A render optimization algorithm for refreshing the UI via props tunnelling (setting new props on a component's\n  state in a pre-agreed location). This algorithm analyzes database changes and on-screen components to update\n  components (by ident) whose props have changed.\n\n  Prop change detection is done by scanning the database in *only* the locations that on-screen components are querying\n  (derived by the mounted component idents, and any ident-joins in the queries).","~:file","com/fulcrologic/fulcro/rendering/ident_optimized_render.cljc","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",60],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$clojure.spec.alpha","~$cljs.spec.alpha","~$clojure.core.async","~$cljs.core.async","~$clojure.pprint","~$cljs.pprint"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$com.fulcrologic.fulcro.rendering.ident-optimized-render","~:reader-aliases",["^ "],"~:op","~:ns","~:imports",null,"~:requires",["^ ","~$set","~$clojure.set","~$edn-query-language.core","^Q","~$log","~$taoensso.timbre","~$kr","~$com.fulcrologic.fulcro.rendering.keyframe-render","~$comp","~$com.fulcrologic.fulcro.components","~$eql","^Q","~$com.fulcrologic.fulcro.algorithms.denormalize","^Y","~$cljs.core","^Z","~$goog","^[","^P","^P","^U","^U","^W","^W","^S","^S","~$fdn","^Y"],"~:seen",["^G",["~:require"]],"~:uses",null,"~:require-macros",["^ ","^Z","^Z","^R","^S","^V","^W","^W","^W","^S","^S"],"~:form",["~#list",["~$ns","^I","A render optimization algorithm for refreshing the UI via props tunnelling (setting new props on a component's\n  state in a pre-agreed location). This algorithm analyzes database changes and on-screen components to update\n  components (by ident) whose props have changed.\n\n  Prop change detection is done by scanning the database in *only* the locations that on-screen components are querying\n  (derived by the mounted component idents, and any ident-joins in the queries).",["^16",["^12",["^U","~:as","^T"],["^Y","^18","^10"],["^W","^18","^V"],["^P","^18","^O"],["^Q","^18","^X"],["^S","^18","^R"]]]]],"~:flags",["^ ","^12",["^G",[]]],"~:js-deps",["^ "],"~:deps",["^[","^Z","^U","^Y","^W","^P","^Q","^S"]],"^L","^I","~:resource-id",["~:shadow.build.classpath/resource","com/fulcrologic/fulcro/rendering/ident_optimized_render.cljc"],"~:compiled-at",1689300106815,"^J",["^ ","^O","^P","^Q","^Q","^R","^S","^T","^U","^V","^W","^X","^Q","^Y","^Y","^Z","^Z","^[","^[","^P","^P","^U","^U","^W","^W","^S","^S","^10","^Y"],"~:resource-name","com/fulcrologic/fulcro/rendering/ident_optimized_render.cljc","~:warnings",[],"~:source","(ns com.fulcrologic.fulcro.rendering.ident-optimized-render\n  \"A render optimization algorithm for refreshing the UI via props tunnelling (setting new props on a component's\n  state in a pre-agreed location). This algorithm analyzes database changes and on-screen components to update\n  components (by ident) whose props have changed.\n\n  Prop change detection is done by scanning the database in *only* the locations that on-screen components are querying\n  (derived by the mounted component idents, and any ident-joins in the queries).\"\n  (:require\n    [com.fulcrologic.fulcro.rendering.keyframe-render :as kr]\n    [com.fulcrologic.fulcro.algorithms.denormalize :as fdn]\n    [com.fulcrologic.fulcro.components :as comp]\n    [clojure.set :as set]\n    [edn-query-language.core :as eql]\n    [taoensso.timbre :as log]))\n\n(defn dirty-table-entries\n  \"Checks the given `idents` and returns a subset of them where the data they refer to has changed\n   between `old-state` and `new-state`.\"\n  [old-state new-state idents]\n  (reduce\n    (fn [result ident]\n      (if (identical? (get-in old-state ident) (get-in new-state ident))\n        result\n        (cons ident result)))\n    (list)\n    idents))\n\n(defn render-component!\n  \"Uses the component's query and the current application state to query for the current value of that component's\n  props (subtree). It then sends those props to the component via \\\"props tunnelling\\\" (setting them on a well-known key in\n  component-local state).\"\n  [app ident c]\n  #?(:cljs\n     (if (and c ident)\n       (let [{:com.fulcrologic.fulcro.application/keys [state-atom]} app\n             state-map      @state-atom\n             query          (comp/get-query c state-map)\n             q              [{ident query}]\n             prior-computed (or (comp/get-computed c) {})\n             data-tree      (when query (fdn/db->tree q state-map state-map)) ; denormalize time is set by app render\n             new-props      (comp/computed (get data-tree ident) prior-computed)]\n         (when-not query (log/error \"Query was empty. Refresh failed for \" (type c) \"See https://book.fulcrologic.com/#err-id-opt-render-empty-query\"))\n         (comp/tunnel-props! c new-props))\n       (let [root (-> app :com.fulcrologic.fulcro.application/runtime-atom deref :com.fulcrologic.fulcro.application/app-root)]\n         (when (not= c root)\n           (log/info \"Failed to do optimized update. Component\" (-> c comp/react-type (comp/class->registry-key))\n             \"queries for data that changed, but does not have an ident.\"))\n         (throw (ex-info \"Targeted update failed\" {}))))))\n\n(defn render-components-with-ident!\n  \"Renders *only* components that *have* the given ident.\"\n  [app ident]\n  (doseq [c (comp/ident->components app ident)]\n    (render-component! app ident c)))\n\n(defn render-dependents-of-ident!\n  \"Renders components that have, or query for, the given ident.\"\n  [app ident]\n  (render-components-with-ident! app ident)\n  (let [{:com.fulcrologic.fulcro.application/keys [runtime-atom]} app\n        {:com.fulcrologic.fulcro.application/keys [indexes]} @runtime-atom\n        {:keys [prop->classes idents-in-joins class->components]} indexes\n        idents-in-joins (or idents-in-joins #{})]\n    (when (contains? idents-in-joins ident)\n      (let [classes (prop->classes ident)]\n        (when (seq classes)\n          (doseq [class classes]\n            (doseq [component (class->components class)\n                    :let [component-ident (comp/get-ident component)]]\n              (render-component! app component-ident component))))))))\n\n(defn props->components\n  \"Given an app and a `property-set`: returns the components that query for the items in property-set.\n\n  The `property-set` can be any sequence (ideally a set) of keywords and idents that can directly appear\n  in a component query as a property or join key.\"\n  [app property-set]\n  (when (seq property-set)\n    (let [{:com.fulcrologic.fulcro.application/keys [runtime-atom]} app\n          {:com.fulcrologic.fulcro.application/keys [indexes]} @runtime-atom\n          {:keys [prop->classes class->components]} indexes]\n      (reduce\n        (fn [result prop]\n          (let [classes    (prop->classes prop)\n                components (reduce #(into %1 (class->components %2)) #{} classes)]\n            (into result components)))\n        #{}\n        property-set))))\n\n(defn render-stale-components!\n  \"This function tracks the state of the app at the time of prior render in the app's runtime-atom. It\n   uses that to do a comparison of old vs. current application state (bounded by the needs of on-screen components).\n   When it finds data that has changed it renders all of the components that depend on that data.\"\n  [app]\n  (let [{:com.fulcrologic.fulcro.application/keys [runtime-atom state-atom]} app\n        {:com.fulcrologic.fulcro.application/keys [indexes last-rendered-state\n                                                   to-refresh only-refresh]} @runtime-atom\n        {:keys [linked-props ident->components prop->classes idents-in-joins]} indexes\n        limited-refresh? (seq only-refresh)]\n    (if limited-refresh?\n      (let [{limited-idents true\n             limited-props  false} (group-by eql/ident? only-refresh)\n            limited-to-render (props->components app limited-props)]\n        (doseq [c limited-to-render\n                :let [ident (comp/get-ident c)]]\n          (render-component! app ident c))\n        (doseq [i limited-idents]\n          (render-dependents-of-ident! app i)))\n      (let [state-map          @state-atom\n            idents-in-joins    (or idents-in-joins #{})\n            dirty-linked-props (reduce\n                                 (fn [acc p]\n                                   (if (not (identical?\n                                              (get state-map p)\n                                              (get last-rendered-state p)))\n                                     (conj acc p)\n                                     acc))\n                                 #{}\n                                 linked-props)\n            {idents-to-force true\n             props-to-force  false} (group-by eql/ident? to-refresh)\n            props-to-force     (set/union props-to-force dirty-linked-props)\n            mounted-idents     (concat (keys ident->components) idents-in-joins)\n            stale-idents       (dirty-table-entries last-rendered-state state-map mounted-idents)\n            extra-to-force     (props->components app props-to-force)\n            all-idents         (set/union (set idents-to-force) (set stale-idents))]\n        (doseq [i all-idents]\n          (render-dependents-of-ident! app i))\n        (doseq [c extra-to-force]\n          (render-component! app (comp/get-ident c) c))))))\n\n(defn render!\n  \"The top-level call for using this optimized render in your application.\n\n  If `:force-root? true` is passed in options, then it just forces a keyframe root render; otherwise\n  it tries to minimize the work done for screen refresh to just the queries/refreshes needed by the\n  data that has changed.\"\n  ([app]\n   (render! app {}))\n  ([app {:keys [force-root? root-props-changed?] :as options}]\n   (if (or force-root? root-props-changed?)\n     (kr/render! app options)\n     (try\n       (render-stale-components! app)\n       (catch #?(:clj Exception :cljs :default) e\n         (log/info \"Optimized render failed. Falling back to root render.\")\n         (kr/render! app options))))))\n\n","~:reader-features",["^G",["~:cljs"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings","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","names",["com.fulcrologic.fulcro.rendering.ident-optimized-render/dirty-table-entries","old-state","new-state","idents","cljs.core.reduce","result","ident","cljs.core.get_in","cljs.core/cons","com.fulcrologic.fulcro.rendering.ident-optimized-render/render-component!","app","c","and__5043__auto__","map__44091","cljs.core/--destructure-map","cljs.core.get","cljs.core/deref","state-atom","state-map","query","com.fulcrologic.fulcro.components.get_query","q","prior-computed","or__5045__auto__","com.fulcrologic.fulcro.components/get-computed","data-tree","com.fulcrologic.fulcro.algorithms.denormalize/db->tree","new-props","G__44094","G__44095","com.fulcrologic.fulcro.components/computed","taoensso.timbre._log_BANG_","taoensso.timbre/*config*","cljs.core/Delay","cljs.core/type","com.fulcrologic.fulcro.components/tunnel-props!","root","cljs.core.not_EQ_","com.fulcrologic.fulcro.components/react-type","G__44100","com.fulcrologic.fulcro.components/class->registry-key","cljs.core.ex_info","com.fulcrologic.fulcro.rendering.ident-optimized-render/render-components-with-ident!","seq__44101","cljs.core/seq","chunk__44102","count__44103","i__44104","temp__5753__auto__","cljs.core/chunked-seq?","c__5568__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/count","cljs.core/first","cljs.core/next","com.fulcrologic.fulcro.components/ident->components","com.fulcrologic.fulcro.rendering.ident-optimized-render/render-dependents-of-ident!","map__44109","map__44110","map__44111","runtime-atom","indexes","prop->classes","idents-in-joins","class->components","cljs.core/contains?","classes","seq__44114","chunk__44115","count__44116","i__44117","class","seq__44139","chunk__44141","count__44142","i__44143","seq__44152","chunk__44154","count__44155","i__44156","component","component-ident","com.fulcrologic.fulcro.components/get-ident","com.fulcrologic.fulcro.rendering.ident-optimized-render/props->components","property-set","map__44166","map__44167","map__44168","prop","components","p1__44164#","p2__44165#","cljs.core.into","com.fulcrologic.fulcro.rendering.ident-optimized-render/render-stale-components!","map__44173","map__44174","map__44175","last-rendered-state","to-refresh","only-refresh","linked-props","ident->components","limited-refresh?","map__44176","limited-idents","limited-props","cljs.core/group-by","edn-query-language.core/ident?","limited-to-render","seq__44177","chunk__44179","count__44180","i__44181","seq__44185","chunk__44186","count__44187","i__44188","i","map__44189","dirty-linked-props","acc","p","cljs.core.conj","idents-to-force","props-to-force","clojure.set.union","mounted-idents","cljs.core.concat","cljs.core/keys","stale-idents","extra-to-force","all-idents","cljs.core/set","seq__44190","chunk__44191","count__44192","i__44193","seq__44194","chunk__44195","count__44196","i__44197","var_args","G__44201","com.fulcrologic.fulcro.rendering.ident-optimized-render/render!","js/Error","p__44206","map__44208","com.fulcrologic.fulcro.rendering.ident_optimized_render.render_BANG_","force-root?","root-props-changed?","options","com.fulcrologic.fulcro.rendering.keyframe-render/render!","e44210","e","cljs.core/List"]],"~:used-vars",["^G",["~$cljs.core/--destructure-map","~$com.fulcrologic.fulcro.rendering.ident-optimized-render/render-component!","~$com.fulcrologic.fulcro.rendering.ident-optimized-render/props->components","~$com.fulcrologic.fulcro.rendering.ident-optimized-render/render-components-with-ident!","~$com.fulcrologic.fulcro.components/computed","~$cljs.core/keys","~$taoensso.timbre/-log!","~$edn-query-language.core/ident?","~$com.fulcrologic.fulcro.components/react-type","~$cljs.core/count","~$cljs.core/deref","~$cljs.core/reduce","~$cljs.core/seq","~$cljs.core/chunk-first","~$cljs.core/group-by","~$cljs.core/not=","~$cljs.core/Delay","~$cljs.core/chunk-rest","~$com.fulcrologic.fulcro.rendering.ident-optimized-render/dirty-table-entries","~$cljs.core/concat","~$com.fulcrologic.fulcro.rendering.ident-optimized-render/render-stale-components!","~$cljs.core/set","~$cljs.core/contains?","~$cljs.core/into","~$com.fulcrologic.fulcro.components/get-ident","~$cljs.core/conj","~$taoensso.timbre/*config*","~$com.fulcrologic.fulcro.components/ident->components","~$cljs.core/get-in","~$cljs.core/List","~$cljs.core/get","~$cljs.core/-nth","~$com.fulcrologic.fulcro.algorithms.denormalize/db->tree","~$com.fulcrologic.fulcro.rendering.ident-optimized-render/render!","~$cljs.core/ex-info","~$com.fulcrologic.fulcro.components/tunnel-props!","~$com.fulcrologic.fulcro.components/get-computed","~$cljs.core/next","~$com.fulcrologic.fulcro.rendering.keyframe-render/render!","~$com.fulcrologic.fulcro.components/get-query","~$cljs.core/not","~$cljs.core/cons","~$clojure.set/union","~$com.fulcrologic.fulcro.components/class->registry-key","~$cljs.core/first","~$js/Error","~$cljs.core/type","~$cljs.core/chunked-seq?","~$com.fulcrologic.fulcro.rendering.ident-optimized-render/render-dependents-of-ident!"]]],"~:cache-keys",["~#cmap",[["~:shadow.build.npm/resource","node_modules/react-dom/index.js"],["95489a89fcf69ff5d55328ddf571406285eebad5","84bdd29dc1ad7f36c15a36e5014f153db42265ce","dc3011a0ee823c91a565237d17cbc3c0856de8a6","~:shadow.build.compiler/resolve",["^ ","~:require-id",8,"~:deps-ids",["^G",[7,6]],"~:deps-syms",["~$shadow.js","~$module$node_modules$react_dom$cjs$react_dom_production_min","~$module$node_modules$react_dom$cjs$react_dom_development"]]],["^1=","goog/dom/tagname.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","~$goog.dom.HtmlElement"]]],["^1=","goog/async/freelist.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^["]]],["^1=","cljs/core/async/impl/ioc_helpers.cljs"],["134b1e0eac15fdd1718f8a8ddacbb0902961558f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z","~$cljs.core.async.impl.protocols"]]],["^1=","goog/i18n/datetimesymbols.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","~$goog.i18n.cldrversion"]]],["^1=","goog/labs/useragent/platform.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","~$goog.string.internal","~$goog.labs.userAgent.util","~$goog.labs.userAgent.highEntropy.highEntropyValue","~$goog.labs.userAgent.highEntropy.highEntropyData","~$goog.labs.userAgent"]]],["^1=","expound/util.cljc"],["5294f6b31a2cfa6ffbe5021d9390c738fb471927","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z","^@"]]],["^1=","goog/crypt/crypt.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","~$goog.asserts","~$goog.async.throwException"]]],["^1=","cljs/core/async.cljs"],["134b1e0eac15fdd1718f8a8ddacbb0902961558f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z","^2Y","~$cljs.core.async.impl.channels","~$cljs.core.async.impl.buffers","~$cljs.core.async.impl.timers","~$cljs.core.async.impl.dispatch","~$cljs.core.async.impl.ioc-helpers","~$goog.array"]]],["^1=","goog/timer/timer.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","~$goog.Promise","~$goog.events.EventTarget"]]],["^1=","com/fulcrologic/fulcro/algorithms/lookup.cljc"],["aa10be524799b8f5dcb1cab659b996577fc15d41","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z","^S"]]],["^1=","cljs/spec/gen/alpha.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z","~$goog.Uri"]]],["^1=","cljs/tools/reader/impl/utils.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z","~$clojure.string","~$goog.string"]]],["^1=","goog/math/math.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^34"]]],["^1=","goog/html/trustedtypes.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^["]]],["^1=","goog/string/stringformat.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^3@"]]],["^1=","goog/events/eventtype.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","~$goog.events.eventTypeHelpers","~$goog.userAgent"]]],["^1=","goog/labs/useragent/browser.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^30","^31","^34","^2[","^32","^33"]]],["^1=","goog/html/safeurl.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^34","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.string.Const","~$goog.string.TypedString","^2["]]],["^1=","goog/array/array.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^34"]]],["^1=","com/fulcrologic/fulcro/algorithms/do_not_use.cljc"],["aa10be524799b8f5dcb1cab659b996577fc15d41","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z","^S","^3?","^Q","~$goog.object","~$goog.crypt","~$goog.crypt.base64","^@"]]],["^1=","expound/problems.cljc"],["5294f6b31a2cfa6ffbe5021d9390c738fb471927","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z","~$expound.paths","^@"]]],["^1=","goog/useragent/useragent.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","~$goog.labs.userAgent.browser","~$goog.labs.userAgent.engine","~$goog.labs.userAgent.platform","^30","~$goog.reflect","^2["]]],["^1=","goog/structs/prioritypool.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","~$goog.structs.Pool","~$goog.structs.PriorityQueue"]]],["^1=","goog/async/run.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","~$goog.async.WorkQueue","~$goog.debug.asyncStackTag","~$goog.async.nextTick","^35"]]],["^1=","com/cognitect/transit/impl/reader.js"],["f8b4f570ca4d41649190efecac27a5932cc11429","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","~$com.cognitect.transit.impl.decoder","~$com.cognitect.transit.caching"]]],["^1=","goog/debug/error.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^["]]],["^1=","goog/async/workqueue.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","~$goog.async.FreeList","^34"]]],["^1=","goog/flags/flags.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^["]]],["^1=","goog/events/events.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^34","~$goog.debug.entryPointRegistry","~$goog.events.BrowserEvent","~$goog.events.BrowserFeature","~$goog.events.Listenable","~$goog.events.ListenerMap"]]],["^1=","goog/promise/resolver.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^["]]],["^1=","goog/events/browserfeature.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^["]]],["^1=","cljs/tools/reader/edn.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z","~$cljs.tools.reader.impl.errors","~$cljs.tools.reader.reader-types","~$cljs.tools.reader.impl.utils","~$cljs.tools.reader.impl.commons","~$cljs.tools.reader","^3@","~$goog.string.StringBuffer"]]],["^1=","goog/structs/priorityqueue.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","~$goog.structs.Heap"]]],["^1=","goog/net/xhrio.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","~$goog.Timer","^3;","^34","~$goog.collections.maps","^3W","^3=","~$goog.json.hybrid","~$goog.log","~$goog.net.ErrorCode","~$goog.net.EventType","~$goog.net.HttpStatus","~$goog.net.XmlHttp","^3G","^3@","~$goog.uri.utils","^3B"]]],["^1=","goog/promise/thenable.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^["]]],["^1=","goog/collections/iters.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^["]]],["^1=","com/fulcrologic/fulcro/algorithms/transit.cljc"],["aa10be524799b8f5dcb1cab659b996577fc15d41","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z","~$cognitect.transit","~$com.fulcrologic.guardrails.core","^@","~$com.fulcrologic.fulcro.algorithms.tempid"]]],["^1=","goog/dom/nodetype.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^["]]],["^1=","com/fulcrologic/guardrails/utils.cljc"],["1c3188d13b2f3b2324bad6f65cc78cd4b193445e","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z","~$clojure.walk"]]],["^1=","cljs/tools/reader/impl/inspect.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z"]]],["^1=","com/cognitect/transit/util.js"],["f8b4f570ca4d41649190efecac27a5932cc11429","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^3G"]]],["^1=","goog/labs/useragent/highentropy/highentropyvalue.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^30","^2["]]],["^1=","cljs/pprint.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z","^3?","^3@","^45"]]],["^1=","cljs/tools/reader.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z","^41","^42","^43","^40","^3;","^3@","^45"]]],["^1=","expound/alpha.cljc"],["5294f6b31a2cfa6ffbe5021d9390c738fb471927","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z","~$expound.problems","^@","^3?","^P","~$expound.printer","~$expound.util","~$expound.ansi"]]],["^1=","taoensso/timbre.cljc"],["ed86c0ab3cf1c4771c5f9bf201405e20c3027ced","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z","^3?","~$goog.i18n.DateTimeFormat","~$taoensso.encore","~$taoensso.timbre.appenders.core"]]],["^2P","node_modules/scheduler/cjs/scheduler.development.js"],["95489a89fcf69ff5d55328ddf571406285eebad5","84bdd29dc1ad7f36c15a36e5014f153db42265ce","44159dfbe389867d6afda50df7f91996366d7206","^2Q",["^ ","^2R",4,"^2S",["^G",[]],"^2T",["^2U"]]],["^1=","goog/net/wrapperxmlhttpfactory.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","~$goog.net.XhrLike","~$goog.net.XmlHttpFactory"]]],["^1=","goog/date/utcdatetime.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","~$goog.date","~$goog.date.Date","~$goog.date.DateTime","~$goog.date.Interval"]]],["^2P","node_modules/scheduler/cjs/scheduler.production.min.js"],["95489a89fcf69ff5d55328ddf571406285eebad5","84bdd29dc1ad7f36c15a36e5014f153db42265ce","e6921f21dd5fc2f4be8cf3c0d6b1b5c611fa4fcd","^2Q",["^ ","^2R",3,"^2S",["^G",[]],"^2T",["^2U"]]],["^1=","goog/i18n/nativelocaledigits.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^["]]],["^1=","goog/events/eventtarget.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","~$goog.Disposable","^34","~$goog.events","~$goog.events.Event","^3Z","^3[","^3G"]]],["^1=","com/fulcrologic/guardrails/core.cljc"],["1c3188d13b2f3b2324bad6f65cc78cd4b193445e","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z","~$com.fulcrologic.guardrails.impl.externs","~$com.fulcrologic.guardrails.utils","^B","^@","^3?","~$expound.alpha"]]],["^1=","goog/disposable/disposable.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","~$goog.disposable.IDisposable","~$goog.dispose","~$goog.disposeAll"]]],["^1=","expound/ansi.cljc"],["5294f6b31a2cfa6ffbe5021d9390c738fb471927","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z","^3?"]]],["^1=","goog/string/typedstring.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^["]]],["^2P","node_modules/react/index.js"],["95489a89fcf69ff5d55328ddf571406285eebad5","84bdd29dc1ad7f36c15a36e5014f153db42265ce","a69a7f3d4a4636bf9035bc53c05b2d99a7b8af7f","^2Q",["^ ","^2R",2,"^2S",["^G",[0,1]],"^2T",["^2U","~$module$node_modules$react$cjs$react_production_min","~$module$node_modules$react$cjs$react_development"]]],["^1=","shadow/js.js"],["409b887858ac3838697e7a1c6e019c62bc4e5814","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^["]]],["^1=","goog/object/object.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^["]]],["^1=","goog/dom/asserts.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^34"]]],["^1=","taoensso/encore.cljc"],["8ce32d99c08a853f8a56322b5aab80e59c3bd4d6","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z","^3?","^P","~$cljs.reader","~$cljs.tools.reader.edn","^3G","^3;","^3@","~$goog.string.format","^45","^4R","~$goog.net.XhrIo","~$goog.net.XhrIoPool","~$goog.Uri.QueryData","^4<","^4;","~$taoensso.truss"]]],["^2P","node_modules/react-dom/cjs/react-dom.production.min.js"],["95489a89fcf69ff5d55328ddf571406285eebad5","84bdd29dc1ad7f36c15a36e5014f153db42265ce","16d835d02619d41be201ba16f57c616d0503da6d","^2Q",["^ ","^2R",6,"^2S",["^G",[2,5]],"^2T",["^2U","~$module$node_modules$react$index","~$module$node_modules$scheduler$index"]]],["^1=","goog/structs/set.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","~$goog.structs","~$goog.structs.Collection","~$goog.structs.Map"]]],"~:SHADOW-TIMESTAMP",[1689298966000,1689298966000,1689298966000],["^2P","node_modules/react/cjs/react.development.js"],["95489a89fcf69ff5d55328ddf571406285eebad5","84bdd29dc1ad7f36c15a36e5014f153db42265ce","1df918e8981877c2759388dfae58a059e089860d","^2Q",["^ ","^2R",1,"^2S",["^G",[]],"^2T",["^2U"]]],["^1=","taoensso/timbre/appenders/core.cljc"],["ed86c0ab3cf1c4771c5f9bf201405e20c3027ced","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z","^3?","^4I"]]],["^1=","goog/math/long.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^34","^3N"]]],["^1=","goog/events/listener.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","~$goog.events.ListenableKey"]]],["^1=","goog/html/trustedresourceurl.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^34","~$goog.fs.blob","^3C","~$goog.html.SafeScript","~$goog.html.trustedtypes","^3E","^3F"]]],["^1=","cljs/core/async/impl/channels.cljs"],["134b1e0eac15fdd1718f8a8ddacbb0902961558f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z","^2Y","^39","^37"]]],["^1=","goog/events/listenermap.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^3;","~$goog.events.Listener","^3G"]]],["^1=","goog/events/eventid.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^["]]],["^1=","taoensso/truss.cljs"],["02c08dae83153a50eb946c4d742f574a24bb2a76","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z","~$taoensso.truss.impl"]]],["^1=","com/fulcrologic/guardrails/registry.cljc"],["1c3188d13b2f3b2324bad6f65cc78cd4b193445e","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z"]]],["^1=","goog/string/internal.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^["]]],["^1=","edn_query_language/core.cljc"],["839028d06d9cc88b18b20c77c53a2bb77140d1f7","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z","^@"]]],["^1=","goog/functions/functions.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^["]]],["^1=","cljs/core/async/impl/dispatch.cljs"],["134b1e0eac15fdd1718f8a8ddacbb0902961558f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z","^37","^3S"]]],["^1=","goog/html/safestyle.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^3E","~$goog.html.SafeUrl","^3F","^34","^2["]]],["^1=","goog/dom/safe.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^34","~$goog.asserts.dom","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","^5?","~$goog.html.SafeStyle","^5C","^3D","~$goog.html.uncheckedconversions","^3E","^2["]]],["^1=","goog/asserts/dom.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","~$goog.dom.TagName","^34","~$goog.dom.element"]]],["^1=","goog/i18n/dayperiodsymbols.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^["]]],["^1=","expound/paths.cljc"],["5294f6b31a2cfa6ffbe5021d9390c738fb471927","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z","^@","^4F"]]],["^1=","taoensso/truss/impl.cljs"],["02c08dae83153a50eb946c4d742f574a24bb2a76","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z","^P"]]],["^1=","clojure/walk.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z"]]],["^1=","goog/useragent/product.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^3K","^3M","^3B"]]],["^1=","cljs/core/async/impl/protocols.cljs"],["134b1e0eac15fdd1718f8a8ddacbb0902961558f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z"]]],["^1=","goog/net/eventtype.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^["]]],["^1=","goog/structs/map.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","~$goog.collections.iters","~$goog.iter","~$goog.iter.Iterator","~$goog.iter.es6"]]],["^1=","goog/net/xhriopool.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^53","~$goog.structs.PriorityPool"]]],["^1=","com/cognitect/transit/delimiters.js"],["f8b4f570ca4d41649190efecac27a5932cc11429","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^["]]],["^1=","goog/date/date.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^34","~$goog.i18n.DateTimeSymbols","^3@"]]],["^1=","goog/html/safehtml.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^3E","^5?","^5H","~$goog.html.SafeStyleSheet","^5C","^5J","^3D","^3F","^34","^3K","^3;","^3G","^2[","~$goog.dom.tags","^5@"]]],["^1=","goog/dom/tags.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^3G"]]],["^1=","goog/math/size.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^["]]],["^1=","com/fulcrologic/fulcro/raw/components.cljc"],["aa10be524799b8f5dcb1cab659b996577fc15d41","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z","^3G","^P","^3?","^4C","^Y","~$com.fulcrologic.fulcro.algorithms.do-not-use","~$com.fulcrologic.fulcro.algorithms.lookup","~$com.fulcrologic.fulcro.algorithms.transit","^Q","^4I","^S"]]],["^2P","node_modules/scheduler/index.js"],["95489a89fcf69ff5d55328ddf571406285eebad5","84bdd29dc1ad7f36c15a36e5014f153db42265ce","408126fc2241739168bcaf5965ae56a7df143144","^2Q",["^ ","^2R",5,"^2S",["^G",[4,3]],"^2T",["^2U","~$module$node_modules$scheduler$cjs$scheduler_production_min","~$module$node_modules$scheduler$cjs$scheduler_development"]]],["^1=","goog/structs/queue.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^3;"]]],["^1=","goog/labs/useragent/engine.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^3;","^2[","^30"]]],["^1=","com/cognitect/transit/impl/decoder.js"],["f8b4f570ca4d41649190efecac27a5932cc11429","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","~$com.cognitect.transit.util","~$com.cognitect.transit.delimiters","^3U","~$com.cognitect.transit.types"]]],["^1=","goog/fs/blob.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^["]]],["^1=","cljs/reader.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z","^3G","^44","^51","^45"]]],["^1=","goog/dom/dom.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^3;","^34","^5D","~$goog.dom.BrowserFeature","~$goog.dom.NodeType","^5J","~$goog.dom.safe","^5G","^5I","~$goog.math.Coordinate","~$goog.math.Size","^3G","^3@","^3E","~$goog.string.Unicode","^3B"]]],["^1=","com/fulcrologic/guardrails/impl/externs.cljc"],["1c3188d13b2f3b2324bad6f65cc78cd4b193445e","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z","~$com.fulcrologic.guardrails.registry","^4U"]]],["^1=","com/fulcrologic/fulcro/components.cljc"],["aa10be524799b8f5dcb1cab659b996577fc15d41","^2Q",["^ ","^2R",null,"^2S",["^G",[2]],"^2T",["^[","^Z","^3G","^57","^Q","^@","^S","^4C","^3?","^5T","^Y","^5U","~$com.fulcrologic.fulcro.raw.components","^4A","^P"]]],["^1=","goog/asserts/asserts.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","~$goog.debug.Error","^61"]]],["^1=","cljs/core/async/impl/buffers.cljs"],["134b1e0eac15fdd1718f8a8ddacbb0902961558f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z","^2Y"]]],["^1=","goog/i18n/timezone.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^3;","^3G","^3@"]]],["^1=","goog/uri/uri.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^3;","^34","^48","^3@","^59","^4?","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1=","goog/i18n/cldrversion.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^["]]],["^1=","goog/net/errorcode.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^["]]],["^1=","goog/labs/useragent/highentropy/highentropydata.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^31"]]],["^1=","goog/collections/maps.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^["]]],["^1=","goog/iter/es6.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","~$goog.iter.Iterable","^5N"]]],["^1=","goog/events/eventtypehelpers.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^3Y","^3B"]]],["^1=","goog/debug/asyncstacktag.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^34"]]],["^1=","goog/disposable/idisposable.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^["]]],["^1=","goog/promise/promise.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","~$goog.Thenable","^34","^3V","~$goog.async.run","^35","^68","^3R","^5F","~$goog.promise.Resolver"]]],["^1=","cljs/core/async/impl/timers.cljs"],["134b1e0eac15fdd1718f8a8ddacbb0902961558f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z","^2Y","^36","^39"]]],["^1=","cljs/spec/alpha.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z","^3G","^4C","~$cljs.spec.gen.alpha","^3?"]]],["^1=","goog/fs/url.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^["]]],["^1=","goog/base.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",[]]],["^1=","goog/json/hybrid.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^34","~$goog.json"]]],["^1=","goog/structs/structs.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^3;","^3G"]]],["^1=","cljs/tools/reader/impl/errors.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z","^41","^3?","~$cljs.tools.reader.impl.inspect"]]],["^1=","goog/disposable/dispose.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^["]]],["^1=","clojure/string.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z","^3@","^45"]]],["^1=","com/fulcrologic/fulcro/algorithms/tempid.cljc"],["aa10be524799b8f5dcb1cab659b996577fc15d41","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z","^S","^4C"]]],["^1=","goog/structs/pool.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^4Q","~$goog.structs.Queue","~$goog.structs.Set"]]],["^2P","node_modules/react/cjs/react.production.min.js"],["95489a89fcf69ff5d55328ddf571406285eebad5","84bdd29dc1ad7f36c15a36e5014f153db42265ce","f5f2e0db62a5ce44eafff60d4f3577b8796734e4","^2Q",["^ ","^2R",0,"^2S",["^G",[]],"^2T",["^2U"]]],["^1=","goog/net/httpstatus.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^["]]],["^1=","goog/i18n/datetimeformat.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^34","^4M","~$goog.date.UtcDateTime","^5Q","~$goog.i18n.DayPeriods","~$goog.i18n.LocaleFeature","~$goog.i18n.NativeLocaleDigits","~$goog.i18n.TimeZone","^3@"]]],["^1=","com/cognitect/transit/handlers.js"],["f8b4f570ca4d41649190efecac27a5932cc11429","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^5Y","^5[","~$goog.math.Long"]]],["^1=","goog/structs/heap.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","~$goog.structs.Node","^3G"]]],["^1=","goog/debug/entrypointregistry.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^34"]]],["^1=","goog/string/string.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^62","^5I","^3E","^2["]]],["^1=","com/cognitect/transit/types.js"],["f8b4f570ca4d41649190efecac27a5932cc11429","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^5Y","~$com.cognitect.transit.eq","^6I"]]],["^1=","goog/reflect/reflect.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^["]]],["^1=","com/fulcrologic/fulcro/rendering/keyframe_render.cljc"],["aa10be524799b8f5dcb1cab659b996577fc15d41","^2Q",["^ ","^2R",null,"^2S",["^G",[8]],"^2T",["^[","^Z","~$module$node_modules$react_dom$index","^Y","^5U","^W","^S"]]],["^1=","goog/labs/useragent/util.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^2[","^33"]]],["^1=","expound/printer.cljc"],["5294f6b31a2cfa6ffbe5021d9390c738fb471927","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z","^3?","^@","^D","^P","^4F","^4G","^3J","^4C","^52","^3@"]]],["^1=","com/cognitect/transit/eq.js"],["f8b4f570ca4d41649190efecac27a5932cc11429","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^5Y"]]],["^1=","goog/debug/debug.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^3;","~$goog.debug.errorcontext"]]],["^1=","goog/string/stringbuffer.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^["]]],["^1=","goog/math/coordinate.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","~$goog.math"]]],["^1=","goog/debug/errorcontext.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^["]]],["^1=","cljs/tools/reader/reader_types.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z","^42","^3@","^45"]]],["^1=","goog/iter/iter.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^3;","^34","~$goog.debug","^5F","^6N"]]],["^1=","goog/labs/useragent/useragent.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","~$goog.flags"]]],["^1=","goog/async/nexttick.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^3W","~$goog.dom","^5J","^5F","^3K","^3L"]]],["^1=","goog/dom/element.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^61","^5J"]]],["^1=","goog/html/uncheckedconversions.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^34","^5G","^5?","^5H","^5R","^5C","^3D","^3E","^2["]]],["^1=","com/cognitect/transit/caching.js"],["f8b4f570ca4d41649190efecac27a5932cc11429","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^5Z"]]],["^1=","goog/events/event.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^4Q","~$goog.events.EventId"]]],["^1=","cljs/tools/reader/impl/commons.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z","^40","^41","^42"]]],["^1=","goog/dom/htmlelement.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^["]]],["^1=","cljs/core.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^6I","~$goog.math.Integer","^3@","^3G","^3;","^3>","^45"]]],["^1=","com/cognitect/transit.js"],["f8b4f570ca4d41649190efecac27a5932cc11429","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^5Y","~$com.cognitect.transit.impl.reader","~$com.cognitect.transit.impl.writer","^5[","^6K","^3T","^3U"]]],["^1=","goog/html/safescript.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^3E","^3F","^5@","^34"]]],["^1=","goog/log/log.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^34","^6O"]]],["^1=","goog/async/throwexception.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^["]]],["^1=","goog/html/safestylesheet.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^3E","^5H","^3F","^3G","^34","^2["]]],["^1=","goog/structs/collection.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^["]]],["^1=","goog/events/browserevent.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^6O","^4S","~$goog.events.EventType","^3N","^3B"]]],["^1=","goog/math/integer.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^3N"]]],["^1=","goog/structs/node.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^["]]],["^1=","goog/dom/browserfeature.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^3B"]]],["^2P","node_modules/react-dom/cjs/react-dom.development.js"],["95489a89fcf69ff5d55328ddf571406285eebad5","84bdd29dc1ad7f36c15a36e5014f153db42265ce","47cafc93ea89646f98180be561302225fa2b868d","^2Q",["^ ","^2R",7,"^2S",["^G",[2,5]],"^2T",["^2U","^57","^58"]]],["^1=","clojure/set.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z"]]],["^1=","goog/uri/utils.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^34","^3@"]]],["^1=","goog/string/const.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^34","^3F"]]],["^1=","goog/disposable/disposeall.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^4X"]]],["^1=","com/fulcrologic/fulcro/rendering/ident_optimized_render.cljc"],["aa10be524799b8f5dcb1cab659b996577fc15d41","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z","^U","^Y","^W","^P","^Q","^S"]]],["^1=","goog/json/json.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^["]]],["^1=","goog/i18n/localefeature.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^["]]],["^1=","goog/events/listenable.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^["]]],["^1=","goog/events/listenablekey.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^["]]],["^1=","com/cognitect/transit/impl/writer.js"],["f8b4f570ca4d41649190efecac27a5932cc11429","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^5Y","^3U","~$com.cognitect.transit.handlers","^5[","^5Z","^6I"]]],["^1=","goog/net/xmlhttpfactory.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^4K"]]],["^1=","com/fulcrologic/fulcro/algorithms/denormalize.cljc"],["aa10be524799b8f5dcb1cab659b996577fc15d41","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z","^P","^Q","^S"]]],["^1=","goog/net/xmlhttp.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^34","~$goog.net.WrapperXmlHttpFactory","^4L"]]],["^1=","goog/net/xhrlike.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^["]]],["^1=","cognitect/transit.cljs"],["98d11d81caee82f97b9417025750b785fb6ecb16","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^Z","^P","~$com.cognitect.transit","^5[","^6K","^3G","^6I"]]],["^1=","goog/crypt/base64.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2Q",["^ ","^2R",null,"^2S",["^G",[]],"^2T",["^[","^34","^3H","^2[","^3B","~$goog.userAgent.product"]]]]],"~:clj-info",["^ ","jar:file:/Users/alejandroherrera/.m2/repository/com/fulcrologic/fulcro/3.5.9/fulcro-3.5.9.jar!/com/fulcrologic/fulcro/algorithms/transit.cljc",1689292469000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/core.async/1.5.648/core.async-1.5.648.jar!/clojure/core/async.clj",1689298966000,"jar:file:/Users/alejandroherrera/.m2/repository/io/aviso/pretty/0.1.37/pretty-0.1.37.jar!/io/aviso/exception.clj",1689258836000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/core.async/1.5.648/core.async-1.5.648.jar!/cljs/core/async.clj",1689298966000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/default_data_readers.clj",1689298966000,"jar:file:/Users/alejandroherrera/.m2/repository/com/fulcrologic/guardrails/1.1.4/guardrails-1.1.4.jar!/com/fulcrologic/guardrails/registry.cljc",1689292466000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/core.async/1.5.648/core.async-1.5.648.jar!/cljs/core/async/impl/ioc_macros.clj",1689298966000,"jar:file:/Users/alejandroherrera/.m2/repository/com/fulcrologic/guardrails/1.1.4/guardrails-1.1.4.jar!/com/fulcrologic/guardrails/config.cljc",1689292466000,"jar:file:/Users/alejandroherrera/.m2/repository/expound/expound/0.9.0/expound-0.9.0.jar!/expound/problems.cljc",1689298964000,"jar:file:/Users/alejandroherrera/.m2/repository/com/taoensso/truss/1.6.0/truss-1.6.0.jar!/taoensso/truss/impl.clj",1689258840000,"jar:file:/Users/alejandroherrera/.m2/repository/com/fulcrologic/fulcro/3.5.9/fulcro-3.5.9.jar!/com/fulcrologic/fulcro/components.cljc",1689292469000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/core.async/1.5.648/core.async-1.5.648.jar!/clojure/core/async/impl/ioc_macros.clj",1689298966000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/pprint.clj",1689292450000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader.clj",1689298966000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/instant.clj",1689292450000,"jar:file:/Users/alejandroherrera/.m2/repository/expound/expound/0.9.0/expound-0.9.0.jar!/expound/paths.cljc",1689298964000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/impl/inspect.clj",1689298966000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/data/json.clj",1689298966000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/passes/and_or.cljc",1689298966000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/spec.alpha/0.2.194/spec.alpha-0.2.194.jar!/clojure/spec/gen/alpha.clj",1689292448000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/tools.analyzer.jvm/1.2.2/tools.analyzer.jvm-1.2.2.jar!/clojure/tools/analyzer/jvm.clj",1689298964000,"jar:file:/Users/alejandroherrera/.m2/repository/com/taoensso/timbre/5.1.1/timbre-5.1.1.jar!/taoensso/timbre.cljc",1689292470000,"jar:file:/Users/alejandroherrera/.m2/repository/com/fulcrologic/guardrails/1.1.4/guardrails-1.1.4.jar!/com/fulcrologic/guardrails/core.cljc",1689292466000,"jar:file:/Users/alejandroherrera/.m2/repository/com/fulcrologic/guardrails/1.1.4/guardrails-1.1.4.jar!/com/fulcrologic/guardrails/impl/pro.cljc",1689292466000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/impl/errors.clj",1689298966000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/impl/inspect.clj",1689258845000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/tools.analyzer.jvm/1.2.2/tools.analyzer.jvm-1.2.2.jar!/clojure/tools/analyzer/jvm/utils.clj",1689298964000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/reader.clj",1689298966000,"jar:file:/Users/alejandroherrera/.m2/repository/com/fulcrologic/guardrails/1.1.4/guardrails-1.1.4.jar!/com/fulcrologic/guardrails/impl/parser.clj",1689292466000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/core.clj",1689292450000,"jar:file:/Users/alejandroherrera/.m2/repository/com/taoensso/timbre/5.1.1/timbre-5.1.1.jar!/taoensso/timbre/appenders/core.cljc",1689292470000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/stacktrace.clj",1689292450000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/impl/errors.clj",1689258845000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/core.async/1.5.648/core.async-1.5.648.jar!/clojure/core/async/impl/mutex.clj",1689298966000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/core.async/1.5.648/core.async-1.5.648.jar!/clojure/core/async/impl/buffers.clj",1689298966000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/java/io.clj",1689292450000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/tools.analyzer/1.1.0/tools.analyzer-1.1.0.jar!/clojure/tools/analyzer/utils.clj",1689258834000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer.cljc",1689298966000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/default_data_readers.clj",1689258845000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/reader_types.clj",1689298966000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/passes.cljc",1689298966000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/compiler.cljc",1689298966000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/core.async/1.5.648/core.async-1.5.648.jar!/clojure/core/async/impl/dispatch.clj",1689298966000,"jar:file:/Users/alejandroherrera/.m2/repository/expound/expound/0.9.0/expound-0.9.0.jar!/expound/ansi.cljc",1689298964000,"jar:file:/Users/alejandroherrera/.m2/repository/expound/expound/0.9.0/expound-0.9.0.jar!/expound/printer.cljc",1689298964000,"jar:file:/Users/alejandroherrera/.m2/repository/com/fulcrologic/guardrails/1.1.4/guardrails-1.1.4.jar!/com/fulcrologic/guardrails/impl/externs.cljc",1689292466000,"jar:file:/Users/alejandroherrera/.m2/repository/com/fulcrologic/fulcro/3.5.9/fulcro-3.5.9.jar!/com/fulcrologic/fulcro/raw/components.cljc",1689292469000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/util.cljc",1689298966000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/core.async/1.5.648/core.async-1.5.648.jar!/clojure/core/async/impl/timers.clj",1689298966000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/externs.clj",1689298966000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/pprint.cljc",1689298966000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/spec.alpha/0.2.194/spec.alpha-0.2.194.jar!/clojure/spec/alpha.clj",1689292448000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/walk.clj",1689292450000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/source_map/base64.clj",1689298966000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/tools.analyzer/1.1.0/tools.analyzer-1.1.0.jar!/clojure/tools/analyzer.clj",1689258834000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/impl.cljc",1689298966000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/edn.clj",1689292450000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/edn.clj",1689258845000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/tools.analyzer/1.1.0/tools.analyzer-1.1.0.jar!/clojure/tools/analyzer/ast.clj",1689258834000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/set.clj",1689292450000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/spec/gen/alpha.cljc",1689298966000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/string.clj",1689292450000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/core.async/1.5.648/core.async-1.5.648.jar!/clojure/core/async/impl/protocols.clj",1689298966000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/core.async/1.5.648/core.async-1.5.648.jar!/clojure/core/async/impl/concurrent.clj",1689298966000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/impl/namespaces.cljc",1689298966000,"jar:file:/Users/alejandroherrera/.m2/repository/com/fulcrologic/guardrails/1.1.4/guardrails-1.1.4.jar!/com/fulcrologic/guardrails/utils.cljc",1689292466000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/core.async/1.5.648/core.async-1.5.648.jar!/clojure/core/async/impl/exec/threadpool.clj",1689298966000,"jar:file:/Users/alejandroherrera/.m2/repository/com/fulcrologic/fulcro/3.5.9/fulcro-3.5.9.jar!/com/fulcrologic/fulcro/algorithms/lookup.cljc",1689292469000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/main.clj",1689292450000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/core.cljc",1689298966000,"jar:file:/Users/alejandroherrera/.m2/repository/io/aviso/pretty/0.1.37/pretty-0.1.37.jar!/io/aviso/ansi.clj",1689258836000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/tagged_literals.cljc",1689298966000,"jar:file:/Users/alejandroherrera/.m2/repository/edn-query-language/eql/1.0.1/eql-1.0.1.jar!/edn_query_language/core.cljc",1689292466000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/instant.clj",1689298966000,"jar:file:/Users/alejandroherrera/.m2/repository/com/taoensso/truss/1.6.0/truss-1.6.0.jar!/taoensso/truss.clj",1689258840000,"jar:file:/Users/alejandroherrera/.m2/repository/com/fulcrologic/fulcro/3.5.9/fulcro-3.5.9.jar!/com/fulcrologic/fulcro/algorithms/do_not_use.cljc",1689292469000,"jar:file:/Users/alejandroherrera/.m2/repository/com/fulcrologic/fulcro/3.5.9/fulcro-3.5.9.jar!/com/fulcrologic/fulcro/algorithms/denormalize.cljc",1689292469000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader.clj",1689258845000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/reflect.clj",1689292450000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/spec/alpha.cljc",1689298966000,"jar:file:/Users/alejandroherrera/.m2/repository/com/cognitect/transit-clj/1.0.329/transit-clj-1.0.329.jar!/cognitect/transit.clj",1689298965000,"jar:file:/Users/alejandroherrera/.m2/repository/expound/expound/0.9.0/expound-0.9.0.jar!/expound/util.cljc",1689298964000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/source_map/base64_vlq.clj",1689298966000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/source_map.clj",1689298966000,"jar:file:/Users/alejandroherrera/.m2/repository/io/aviso/pretty/0.1.37/pretty-0.1.37.jar!/io/aviso/columns.clj",1689258836000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/core.async/1.5.648/core.async-1.5.648.jar!/clojure/core/async/impl/channels.clj",1689298966000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/tools.analyzer/1.1.0/tools.analyzer-1.1.0.jar!/clojure/tools/analyzer/env.clj",1689258834000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/reader_types.clj",1689258845000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/js_deps.cljc",1689298966000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/env.cljc",1689298966000,"jar:file:/Users/alejandroherrera/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/cljs/tools/reader/reader_types.clj",1689258845000,"jar:file:/Users/alejandroherrera/.m2/repository/com/fulcrologic/fulcro/3.5.9/fulcro-3.5.9.jar!/com/fulcrologic/fulcro/algorithms/tempid.cljc",1689292469000,"jar:file:/Users/alejandroherrera/.m2/repository/expound/expound/0.9.0/expound-0.9.0.jar!/expound/alpha.cljc",1689298964000,"jar:file:/Users/alejandroherrera/.m2/repository/com/taoensso/encore/3.10.1/encore-3.10.1.jar!/taoensso/encore.cljc",1689292466000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","A render optimization algorithm for refreshing the UI via props tunnelling (setting new props on a component's\n  state in a pre-agreed location). This algorithm analyzes database changes and on-screen components to update\n  components (by ident) whose props have changed.\n\n  Prop change detection is done by scanning the database in *only* the locations that on-screen components are querying\n  (derived by the mounted component idents, and any ident-joins in the queries).","^7","com/fulcrologic/fulcro/rendering/ident_optimized_render.cljc","^8",1,"^9",5,"^:",1,"^;",60],"^<",["^ ","^=","^>","^?","^@","^A","^B","^C","^D"],"^E",null,"^F",["^G",[]],"^H","^I","^J",["^ "],"^M",null,"^N",["^ ","^O","^P","^Q","^Q","^R","^S","^T","^U","^V","^W","^X","^Q","^Y","^Y","^Z","^Z","^[","^[","^P","^P","^U","^U","^W","^W","^S","^S","^10","^Y"],"^11",["^G",["^12"]],"~:shadow/js-access-global",["^G",["Error"]],"^13",null,"~:defs",["^ ","~$dirty-table-entries",["^ ","~:protocol-inline",null,"^5",["^ ","^7","com/fulcrologic/fulcro/rendering/ident_optimized_render.cljc","^8",16,"^9",7,"^:",16,"^;",26,"~:arglists",["^16",["~$quote",["^16",[["~$old-state","~$new-state","~$idents"]]]]],"^6","Checks the given `idents` and returns a subset of them where the data they refer to has changed\n   between `old-state` and `new-state`."],"^H","^1[","^7","com/fulcrologic/fulcro/rendering/ident_optimized_render.cljc","^;",26,"~:method-params",["^16",[["^9=","^9>","^9?"]]],"~:protocol-impl",null,"~:arglists-meta",["^16",[null,null]],"^9",1,"~:variadic?",false,"^8",16,"~:ret-tag",["^G",[null,"~$any"]],"^:",16,"~:max-fixed-arity",3,"~:fn-var",true,"^9;",["^16",["^9<",["^16",[["^9=","^9>","^9?"]]]]],"^6","Checks the given `idents` and returns a subset of them where the data they refer to has changed\n   between `old-state` and `new-state`."],"~$render-component!",["^ ","^9:",null,"^5",["^ ","^7","com/fulcrologic/fulcro/rendering/ident_optimized_render.cljc","^8",28,"^9",7,"^:",28,"^;",24,"^9;",["^16",["^9<",["^16",[["~$app","~$ident","~$c"]]]]],"^6","Uses the component's query and the current application state to query for the current value of that component's\n  props (subtree). It then sends those props to the component via \"props tunnelling\" (setting them on a well-known key in\n  component-local state)."],"^H","^1J","^7","com/fulcrologic/fulcro/rendering/ident_optimized_render.cljc","^;",24,"^9@",["^16",[["^9I","^9J","~$c"]]],"^9A",null,"^9B",["^16",[null,null]],"^9",1,"^9C",false,"^8",28,"^9D",["^G",["~$js","~$clj-nil"]],"^:",28,"^9F",3,"^9G",true,"^9;",["^16",["^9<",["^16",[["^9I","^9J","~$c"]]]]],"^6","Uses the component's query and the current application state to query for the current value of that component's\n  props (subtree). It then sends those props to the component via \"props tunnelling\" (setting them on a well-known key in\n  component-local state)."],"~$render-components-with-ident!",["^ ","^9:",null,"^5",["^ ","^7","com/fulcrologic/fulcro/rendering/ident_optimized_render.cljc","^8",50,"^9",7,"^:",50,"^;",36,"^9;",["^16",["^9<",["^16",[["^9I","^9J"]]]]],"^6","Renders *only* components that *have* the given ident."],"^H","^1L","^7","com/fulcrologic/fulcro/rendering/ident_optimized_render.cljc","^;",36,"^9@",["^16",[["^9I","^9J"]]],"^9A",null,"^9B",["^16",[null,null]],"^9",1,"^9C",false,"^8",50,"^9D","^9L","^:",50,"^9F",2,"^9G",true,"^9;",["^16",["^9<",["^16",[["^9I","^9J"]]]]],"^6","Renders *only* components that *have* the given ident."],"~$render-dependents-of-ident!",["^ ","^9:",null,"^5",["^ ","^7","com/fulcrologic/fulcro/rendering/ident_optimized_render.cljc","^8",56,"^9",7,"^:",56,"^;",34,"^9;",["^16",["^9<",["^16",[["^9I","^9J"]]]]],"^6","Renders components that have, or query for, the given ident."],"^H","^2M","^7","com/fulcrologic/fulcro/rendering/ident_optimized_render.cljc","^;",34,"^9@",["^16",[["^9I","^9J"]]],"^9A",null,"^9B",["^16",[null,null]],"^9",1,"^9C",false,"^8",56,"^9D","^9L","^:",56,"^9F",2,"^9G",true,"^9;",["^16",["^9<",["^16",[["^9I","^9J"]]]]],"^6","Renders components that have, or query for, the given ident."],"~$props->components",["^ ","^9:",null,"^5",["^ ","^7","com/fulcrologic/fulcro/rendering/ident_optimized_render.cljc","^8",72,"^9",7,"^:",72,"^;",24,"^9;",["^16",["^9<",["^16",[["^9I","~$property-set"]]]]],"^6","Given an app and a `property-set`: returns the components that query for the items in property-set.\n\n  The `property-set` can be any sequence (ideally a set) of keywords and idents that can directly appear\n  in a component query as a property or join key."],"^H","^1K","^7","com/fulcrologic/fulcro/rendering/ident_optimized_render.cljc","^;",24,"^9@",["^16",[["^9I","^9P"]]],"^9A",null,"^9B",["^16",[null,null]],"^9",1,"^9C",false,"^8",72,"^9D",["^G",[null,"^9E","^9L"]],"^:",72,"^9F",2,"^9G",true,"^9;",["^16",["^9<",["^16",[["^9I","^9P"]]]]],"^6","Given an app and a `property-set`: returns the components that query for the items in property-set.\n\n  The `property-set` can be any sequence (ideally a set) of keywords and idents that can directly appear\n  in a component query as a property or join key."],"~$render-stale-components!",["^ ","^9:",null,"^5",["^ ","^7","com/fulcrologic/fulcro/rendering/ident_optimized_render.cljc","^8",90,"^9",7,"^:",90,"^;",31,"^9;",["^16",["^9<",["^16",[["^9I"]]]]],"^6","This function tracks the state of the app at the time of prior render in the app's runtime-atom. It\n   uses that to do a comparison of old vs. current application state (bounded by the needs of on-screen components).\n   When it finds data that has changed it renders all of the components that depend on that data."],"^H","^21","^7","com/fulcrologic/fulcro/rendering/ident_optimized_render.cljc","^;",31,"^9@",["^16",[["^9I"]]],"^9A",null,"^9B",["^16",[null,null]],"^9",1,"^9C",false,"^8",90,"^9D","^9L","^:",90,"^9F",1,"^9G",true,"^9;",["^16",["^9<",["^16",[["^9I"]]]]],"^6","This function tracks the state of the app at the time of prior render in the app's runtime-atom. It\n   uses that to do a comparison of old vs. current application state (bounded by the needs of on-screen components).\n   When it finds data that has changed it renders all of the components that depend on that data."],"~$render!",["^ ","^9:",null,"^5",["^ ","^7","com/fulcrologic/fulcro/rendering/ident_optimized_render.cljc","^8",132,"^9",7,"^:",132,"^;",14,"^9;",["^16",["^9<",["^16",[["^9I"],["^9I",["^ ","~:keys",["~$force-root?","~$root-props-changed?"],"^18","~$options"]]]]]],"^6","The top-level call for using this optimized render in your application.\n\n  If `:force-root? true` is passed in options, then it just forces a keyframe root render; otherwise\n  it tries to minimize the work done for screen refresh to just the queries/refreshes needed by the\n  data that has changed.","~:top-fn",["^ ","^9C",false,"~:fixed-arity",2,"^9F",2,"^9@",[["^9I"],["^9I",["^ ","^9S",["^9T","^9U"],"^18","^9V"]]],"^9;",["^16",[["^9I"],["^9I",["^ ","^9S",["^9T","^9U"],"^18","^9V"]]]],"^9B",["^16",[null,null]]]],"^H","^2>","^7","com/fulcrologic/fulcro/rendering/ident_optimized_render.cljc","^;",14,"^9W",["^ ","^9C",false,"^9X",2,"^9F",2,"^9@",[["^9I"],["^9I",["^ ","^9S",["^9T","^9U"],"^18","^9V"]]],"^9;",["^16",[["^9I"],["^9I",["^ ","^9S",["^9T","^9U"],"^18","^9V"]]]],"^9B",["^16",[null,null]]],"^9@",[["^9I"],["^9I",["^ ","^9S",["^9T","^9U"],"^18","^9V"]]],"^9A",null,"^9X",2,"^9B",["^16",[null,null]],"^9",1,"^9C",false,"~:methods",[["^ ","^9X",1,"^9C",false,"~:tag","^9E"],["^ ","^9X",2,"^9C",false,"^9Z",["^G",[null,"^9E"]]]],"^8",132,"^:",132,"^9F",2,"^9G",true,"^9;",["^16",[["^9I"],["^9I",["^ ","^9S",["^9T","^9U"],"^18","^9V"]]]],"^6","The top-level call for using this optimized render in your application.\n\n  If `:force-root? true` is passed in options, then it just forces a keyframe root render; otherwise\n  it tries to minimize the work done for screen refresh to just the queries/refreshes needed by the\n  data that has changed."]],"^14",["^ ","^Z","^Z","^R","^S","^V","^W","^W","^W","^S","^S"],"~:cljs.analyzer/constants",["^ ","^11",["^G",["~:com.fulcrologic.fulcro.application/indexes","~:com.fulcrologic.fulcro.application/last-rendered-state","~:idents-in-joins","~:prop->classes","~:force-root?","~:com.fulcrologic.fulcro.application/state-atom","~:com.fulcrologic.fulcro.application/only-refresh","~:class->components","~:com.fulcrologic.fulcro.application/to-refresh","~:root-props-changed?","~:com.fulcrologic.fulcro.application/runtime-atom","~:info","~:error","~:ident->components","~:linked-props","~:auto","~:p","~:com.fulcrologic.fulcro.application/app-root"]],"~:order",["^:5","^:<","~:p","^:?","^:@","^::","^:;","^:0","^:3","^:2","^:7","^:1","^:8","^:6","^:>","^:=","^:4","^:9"]],"^19",["^ ","^12",["^G",[]]],"^1:",["^ "],"^1;",["^[","^Z","^U","^Y","^W","^P","^Q","^S"]],"^L","^I","~:ns-specs",["^ "],"~:ns-spec-vars",["^G",[]],"~:compiler-options",["^2O",[["^:D","~:static-fns"],true,["^:D","~:shadow-tweaks"],null,["^:D","~:source-map-inline"],null,["^:D","~:elide-asserts"],true,["^:D","~:optimize-constants"],null,["^:D","^1@"],null,["^:D","~:external-config"],null,["^:D","~:tooling-config"],null,["^:D","~:emit-constants"],null,["^:D","~:load-tests"],false,["^:D","~:form-size-threshold"],null,["^:D","~:global-goog-object&array"],null,["^:D","~:data-readers"],null,["^:D","~:infer-externs"],"^:?",["^:D","^1B"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:release",["^:D","~:fn-invoke-direct"],null,["^:D","~:source-map"],null]]]